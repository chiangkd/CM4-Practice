
USART3_int_pend.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c84  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  08000e18  08000e18  00010e18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e8c  08000e8c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e8c  08000e8c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e8c  08000e8c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e8c  08000e8c  00010e8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e90  08000e90  00010e90  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e94  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000095a  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000030e  00000000  00000000  000209e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00020cf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e0  00000000  00000000  00020e10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bd4  00000000  00000000  00020ef0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000012d0  00000000  00000000  00023ac4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000092ac  00000000  00000000  00024d94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e040  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000a0c  00000000  00000000  0002e090  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000064 	.word	0x20000064
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000e00 	.word	0x08000e00

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000068 	.word	0x20000068
 80001d0:	08000e00 	.word	0x08000e00

080001d4 <main>:
#endif

#define USART3_IRQNO 39

int main(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	//1. Manually pend the pending bit for the USART3 IRQ number in NVIC
	uint32_t *pISPR1 = (uint32_t*)0xe000E204;
 80001da:	4b08      	ldr	r3, [pc, #32]	; (80001fc <main+0x28>)
 80001dc:	607b      	str	r3, [r7, #4]

	*pISPR1 |= (1 << (USART3_IRQNO % 32));	// shift to bit 7 on ISPR1
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	601a      	str	r2, [r3, #0]
	//2. Enable the USART3 IRQ number in NVUC
	uint32_t *pISER1 = (uint32_t*)0xE000E104;
 80001ea:	4b05      	ldr	r3, [pc, #20]	; (8000200 <main+0x2c>)
 80001ec:	603b      	str	r3, [r7, #0]
	*pISER1 |= (1 << (USART3_IRQNO % 32));
 80001ee:	683b      	ldr	r3, [r7, #0]
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80001f6:	683b      	ldr	r3, [r7, #0]
 80001f8:	601a      	str	r2, [r3, #0]
    /* Loop forever */
	for(;;);
 80001fa:	e7fe      	b.n	80001fa <main+0x26>
 80001fc:	e000e204 	.word	0xe000e204
 8000200:	e000e104 	.word	0xe000e104

08000204 <USART3_EXTI28_IRQHandler>:
}

// USART3 ISR
void USART3_EXTI28_IRQHandler(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	printf("in USART3 isr \n");
 8000208:	4802      	ldr	r0, [pc, #8]	; (8000214 <USART3_EXTI28_IRQHandler+0x10>)
 800020a:	f000 f96f 	bl	80004ec <puts>
}
 800020e:	bf00      	nop
 8000210:	bd80      	pop	{r7, pc}
 8000212:	bf00      	nop
 8000214:	08000e18 	.word	0x08000e18

08000218 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000218:	b580      	push	{r7, lr}
 800021a:	b086      	sub	sp, #24
 800021c:	af00      	add	r7, sp, #0
 800021e:	60f8      	str	r0, [r7, #12]
 8000220:	60b9      	str	r1, [r7, #8]
 8000222:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000224:	2300      	movs	r3, #0
 8000226:	617b      	str	r3, [r7, #20]
 8000228:	e00a      	b.n	8000240 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800022a:	f3af 8000 	nop.w
 800022e:	4601      	mov	r1, r0
 8000230:	68bb      	ldr	r3, [r7, #8]
 8000232:	1c5a      	adds	r2, r3, #1
 8000234:	60ba      	str	r2, [r7, #8]
 8000236:	b2ca      	uxtb	r2, r1
 8000238:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800023a:	697b      	ldr	r3, [r7, #20]
 800023c:	3301      	adds	r3, #1
 800023e:	617b      	str	r3, [r7, #20]
 8000240:	697a      	ldr	r2, [r7, #20]
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	429a      	cmp	r2, r3
 8000246:	dbf0      	blt.n	800022a <_read+0x12>
	}

return len;
 8000248:	687b      	ldr	r3, [r7, #4]
}
 800024a:	4618      	mov	r0, r3
 800024c:	3718      	adds	r7, #24
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}

08000252 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000252:	b580      	push	{r7, lr}
 8000254:	b086      	sub	sp, #24
 8000256:	af00      	add	r7, sp, #0
 8000258:	60f8      	str	r0, [r7, #12]
 800025a:	60b9      	str	r1, [r7, #8]
 800025c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800025e:	2300      	movs	r3, #0
 8000260:	617b      	str	r3, [r7, #20]
 8000262:	e009      	b.n	8000278 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000264:	68bb      	ldr	r3, [r7, #8]
 8000266:	1c5a      	adds	r2, r3, #1
 8000268:	60ba      	str	r2, [r7, #8]
 800026a:	781b      	ldrb	r3, [r3, #0]
 800026c:	4618      	mov	r0, r3
 800026e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000272:	697b      	ldr	r3, [r7, #20]
 8000274:	3301      	adds	r3, #1
 8000276:	617b      	str	r3, [r7, #20]
 8000278:	697a      	ldr	r2, [r7, #20]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	429a      	cmp	r2, r3
 800027e:	dbf1      	blt.n	8000264 <_write+0x12>
	}
	return len;
 8000280:	687b      	ldr	r3, [r7, #4]
}
 8000282:	4618      	mov	r0, r3
 8000284:	3718      	adds	r7, #24
 8000286:	46bd      	mov	sp, r7
 8000288:	bd80      	pop	{r7, pc}

0800028a <_close>:

int _close(int file)
{
 800028a:	b480      	push	{r7}
 800028c:	b083      	sub	sp, #12
 800028e:	af00      	add	r7, sp, #0
 8000290:	6078      	str	r0, [r7, #4]
	return -1;
 8000292:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000296:	4618      	mov	r0, r3
 8000298:	370c      	adds	r7, #12
 800029a:	46bd      	mov	sp, r7
 800029c:	bc80      	pop	{r7}
 800029e:	4770      	bx	lr

080002a0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002aa:	683b      	ldr	r3, [r7, #0]
 80002ac:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002b0:	605a      	str	r2, [r3, #4]
	return 0;
 80002b2:	2300      	movs	r3, #0
}
 80002b4:	4618      	mov	r0, r3
 80002b6:	370c      	adds	r7, #12
 80002b8:	46bd      	mov	sp, r7
 80002ba:	bc80      	pop	{r7}
 80002bc:	4770      	bx	lr

080002be <_isatty>:

int _isatty(int file)
{
 80002be:	b480      	push	{r7}
 80002c0:	b083      	sub	sp, #12
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	6078      	str	r0, [r7, #4]
	return 1;
 80002c6:	2301      	movs	r3, #1
}
 80002c8:	4618      	mov	r0, r3
 80002ca:	370c      	adds	r7, #12
 80002cc:	46bd      	mov	sp, r7
 80002ce:	bc80      	pop	{r7}
 80002d0:	4770      	bx	lr

080002d2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002d2:	b480      	push	{r7}
 80002d4:	b085      	sub	sp, #20
 80002d6:	af00      	add	r7, sp, #0
 80002d8:	60f8      	str	r0, [r7, #12]
 80002da:	60b9      	str	r1, [r7, #8]
 80002dc:	607a      	str	r2, [r7, #4]
	return 0;
 80002de:	2300      	movs	r3, #0
}
 80002e0:	4618      	mov	r0, r3
 80002e2:	3714      	adds	r7, #20
 80002e4:	46bd      	mov	sp, r7
 80002e6:	bc80      	pop	{r7}
 80002e8:	4770      	bx	lr
	...

080002ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b086      	sub	sp, #24
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002f4:	4a14      	ldr	r2, [pc, #80]	; (8000348 <_sbrk+0x5c>)
 80002f6:	4b15      	ldr	r3, [pc, #84]	; (800034c <_sbrk+0x60>)
 80002f8:	1ad3      	subs	r3, r2, r3
 80002fa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002fc:	697b      	ldr	r3, [r7, #20]
 80002fe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000300:	4b13      	ldr	r3, [pc, #76]	; (8000350 <_sbrk+0x64>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	2b00      	cmp	r3, #0
 8000306:	d102      	bne.n	800030e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000308:	4b11      	ldr	r3, [pc, #68]	; (8000350 <_sbrk+0x64>)
 800030a:	4a12      	ldr	r2, [pc, #72]	; (8000354 <_sbrk+0x68>)
 800030c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800030e:	4b10      	ldr	r3, [pc, #64]	; (8000350 <_sbrk+0x64>)
 8000310:	681a      	ldr	r2, [r3, #0]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4413      	add	r3, r2
 8000316:	693a      	ldr	r2, [r7, #16]
 8000318:	429a      	cmp	r2, r3
 800031a:	d207      	bcs.n	800032c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800031c:	f000 f846 	bl	80003ac <__errno>
 8000320:	4603      	mov	r3, r0
 8000322:	220c      	movs	r2, #12
 8000324:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000326:	f04f 33ff 	mov.w	r3, #4294967295
 800032a:	e009      	b.n	8000340 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800032c:	4b08      	ldr	r3, [pc, #32]	; (8000350 <_sbrk+0x64>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000332:	4b07      	ldr	r3, [pc, #28]	; (8000350 <_sbrk+0x64>)
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4413      	add	r3, r2
 800033a:	4a05      	ldr	r2, [pc, #20]	; (8000350 <_sbrk+0x64>)
 800033c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800033e:	68fb      	ldr	r3, [r7, #12]
}
 8000340:	4618      	mov	r0, r3
 8000342:	3718      	adds	r7, #24
 8000344:	46bd      	mov	sp, r7
 8000346:	bd80      	pop	{r7, pc}
 8000348:	20010000 	.word	0x20010000
 800034c:	00000400 	.word	0x00000400
 8000350:	20000080 	.word	0x20000080
 8000354:	20000098 	.word	0x20000098

08000358 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000358:	480d      	ldr	r0, [pc, #52]	; (8000390 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800035a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800035c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000360:	480c      	ldr	r0, [pc, #48]	; (8000394 <LoopForever+0x6>)
  ldr r1, =_edata
 8000362:	490d      	ldr	r1, [pc, #52]	; (8000398 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000364:	4a0d      	ldr	r2, [pc, #52]	; (800039c <LoopForever+0xe>)
  movs r3, #0
 8000366:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000368:	e002      	b.n	8000370 <LoopCopyDataInit>

0800036a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800036a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800036c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800036e:	3304      	adds	r3, #4

08000370 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000370:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000372:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000374:	d3f9      	bcc.n	800036a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000376:	4a0a      	ldr	r2, [pc, #40]	; (80003a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000378:	4c0a      	ldr	r4, [pc, #40]	; (80003a4 <LoopForever+0x16>)
  movs r3, #0
 800037a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800037c:	e001      	b.n	8000382 <LoopFillZerobss>

0800037e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800037e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000380:	3204      	adds	r2, #4

08000382 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000382:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000384:	d3fb      	bcc.n	800037e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000386:	f000 f817 	bl	80003b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800038a:	f7ff ff23 	bl	80001d4 <main>

0800038e <LoopForever>:

LoopForever:
    b LoopForever
 800038e:	e7fe      	b.n	800038e <LoopForever>
  ldr   r0, =_estack
 8000390:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000394:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000398:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800039c:	08000e94 	.word	0x08000e94
  ldr r2, =_sbss
 80003a0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003a4:	20000094 	.word	0x20000094

080003a8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a8:	e7fe      	b.n	80003a8 <ADC1_2_IRQHandler>
	...

080003ac <__errno>:
 80003ac:	4b01      	ldr	r3, [pc, #4]	; (80003b4 <__errno+0x8>)
 80003ae:	6818      	ldr	r0, [r3, #0]
 80003b0:	4770      	bx	lr
 80003b2:	bf00      	nop
 80003b4:	20000000 	.word	0x20000000

080003b8 <__libc_init_array>:
 80003b8:	b570      	push	{r4, r5, r6, lr}
 80003ba:	4d0d      	ldr	r5, [pc, #52]	; (80003f0 <__libc_init_array+0x38>)
 80003bc:	4c0d      	ldr	r4, [pc, #52]	; (80003f4 <__libc_init_array+0x3c>)
 80003be:	1b64      	subs	r4, r4, r5
 80003c0:	10a4      	asrs	r4, r4, #2
 80003c2:	2600      	movs	r6, #0
 80003c4:	42a6      	cmp	r6, r4
 80003c6:	d109      	bne.n	80003dc <__libc_init_array+0x24>
 80003c8:	4d0b      	ldr	r5, [pc, #44]	; (80003f8 <__libc_init_array+0x40>)
 80003ca:	4c0c      	ldr	r4, [pc, #48]	; (80003fc <__libc_init_array+0x44>)
 80003cc:	f000 fd18 	bl	8000e00 <_init>
 80003d0:	1b64      	subs	r4, r4, r5
 80003d2:	10a4      	asrs	r4, r4, #2
 80003d4:	2600      	movs	r6, #0
 80003d6:	42a6      	cmp	r6, r4
 80003d8:	d105      	bne.n	80003e6 <__libc_init_array+0x2e>
 80003da:	bd70      	pop	{r4, r5, r6, pc}
 80003dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80003e0:	4798      	blx	r3
 80003e2:	3601      	adds	r6, #1
 80003e4:	e7ee      	b.n	80003c4 <__libc_init_array+0xc>
 80003e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80003ea:	4798      	blx	r3
 80003ec:	3601      	adds	r6, #1
 80003ee:	e7f2      	b.n	80003d6 <__libc_init_array+0x1e>
 80003f0:	08000e8c 	.word	0x08000e8c
 80003f4:	08000e8c 	.word	0x08000e8c
 80003f8:	08000e8c 	.word	0x08000e8c
 80003fc:	08000e90 	.word	0x08000e90

08000400 <memset>:
 8000400:	4402      	add	r2, r0
 8000402:	4603      	mov	r3, r0
 8000404:	4293      	cmp	r3, r2
 8000406:	d100      	bne.n	800040a <memset+0xa>
 8000408:	4770      	bx	lr
 800040a:	f803 1b01 	strb.w	r1, [r3], #1
 800040e:	e7f9      	b.n	8000404 <memset+0x4>

08000410 <_puts_r>:
 8000410:	b570      	push	{r4, r5, r6, lr}
 8000412:	460e      	mov	r6, r1
 8000414:	4605      	mov	r5, r0
 8000416:	b118      	cbz	r0, 8000420 <_puts_r+0x10>
 8000418:	6983      	ldr	r3, [r0, #24]
 800041a:	b90b      	cbnz	r3, 8000420 <_puts_r+0x10>
 800041c:	f000 fa44 	bl	80008a8 <__sinit>
 8000420:	69ab      	ldr	r3, [r5, #24]
 8000422:	68ac      	ldr	r4, [r5, #8]
 8000424:	b913      	cbnz	r3, 800042c <_puts_r+0x1c>
 8000426:	4628      	mov	r0, r5
 8000428:	f000 fa3e 	bl	80008a8 <__sinit>
 800042c:	4b2c      	ldr	r3, [pc, #176]	; (80004e0 <_puts_r+0xd0>)
 800042e:	429c      	cmp	r4, r3
 8000430:	d120      	bne.n	8000474 <_puts_r+0x64>
 8000432:	686c      	ldr	r4, [r5, #4]
 8000434:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000436:	07db      	lsls	r3, r3, #31
 8000438:	d405      	bmi.n	8000446 <_puts_r+0x36>
 800043a:	89a3      	ldrh	r3, [r4, #12]
 800043c:	0598      	lsls	r0, r3, #22
 800043e:	d402      	bmi.n	8000446 <_puts_r+0x36>
 8000440:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000442:	f000 facf 	bl	80009e4 <__retarget_lock_acquire_recursive>
 8000446:	89a3      	ldrh	r3, [r4, #12]
 8000448:	0719      	lsls	r1, r3, #28
 800044a:	d51d      	bpl.n	8000488 <_puts_r+0x78>
 800044c:	6923      	ldr	r3, [r4, #16]
 800044e:	b1db      	cbz	r3, 8000488 <_puts_r+0x78>
 8000450:	3e01      	subs	r6, #1
 8000452:	68a3      	ldr	r3, [r4, #8]
 8000454:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000458:	3b01      	subs	r3, #1
 800045a:	60a3      	str	r3, [r4, #8]
 800045c:	bb39      	cbnz	r1, 80004ae <_puts_r+0x9e>
 800045e:	2b00      	cmp	r3, #0
 8000460:	da38      	bge.n	80004d4 <_puts_r+0xc4>
 8000462:	4622      	mov	r2, r4
 8000464:	210a      	movs	r1, #10
 8000466:	4628      	mov	r0, r5
 8000468:	f000 f848 	bl	80004fc <__swbuf_r>
 800046c:	3001      	adds	r0, #1
 800046e:	d011      	beq.n	8000494 <_puts_r+0x84>
 8000470:	250a      	movs	r5, #10
 8000472:	e011      	b.n	8000498 <_puts_r+0x88>
 8000474:	4b1b      	ldr	r3, [pc, #108]	; (80004e4 <_puts_r+0xd4>)
 8000476:	429c      	cmp	r4, r3
 8000478:	d101      	bne.n	800047e <_puts_r+0x6e>
 800047a:	68ac      	ldr	r4, [r5, #8]
 800047c:	e7da      	b.n	8000434 <_puts_r+0x24>
 800047e:	4b1a      	ldr	r3, [pc, #104]	; (80004e8 <_puts_r+0xd8>)
 8000480:	429c      	cmp	r4, r3
 8000482:	bf08      	it	eq
 8000484:	68ec      	ldreq	r4, [r5, #12]
 8000486:	e7d5      	b.n	8000434 <_puts_r+0x24>
 8000488:	4621      	mov	r1, r4
 800048a:	4628      	mov	r0, r5
 800048c:	f000 f888 	bl	80005a0 <__swsetup_r>
 8000490:	2800      	cmp	r0, #0
 8000492:	d0dd      	beq.n	8000450 <_puts_r+0x40>
 8000494:	f04f 35ff 	mov.w	r5, #4294967295
 8000498:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800049a:	07da      	lsls	r2, r3, #31
 800049c:	d405      	bmi.n	80004aa <_puts_r+0x9a>
 800049e:	89a3      	ldrh	r3, [r4, #12]
 80004a0:	059b      	lsls	r3, r3, #22
 80004a2:	d402      	bmi.n	80004aa <_puts_r+0x9a>
 80004a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004a6:	f000 fa9e 	bl	80009e6 <__retarget_lock_release_recursive>
 80004aa:	4628      	mov	r0, r5
 80004ac:	bd70      	pop	{r4, r5, r6, pc}
 80004ae:	2b00      	cmp	r3, #0
 80004b0:	da04      	bge.n	80004bc <_puts_r+0xac>
 80004b2:	69a2      	ldr	r2, [r4, #24]
 80004b4:	429a      	cmp	r2, r3
 80004b6:	dc06      	bgt.n	80004c6 <_puts_r+0xb6>
 80004b8:	290a      	cmp	r1, #10
 80004ba:	d004      	beq.n	80004c6 <_puts_r+0xb6>
 80004bc:	6823      	ldr	r3, [r4, #0]
 80004be:	1c5a      	adds	r2, r3, #1
 80004c0:	6022      	str	r2, [r4, #0]
 80004c2:	7019      	strb	r1, [r3, #0]
 80004c4:	e7c5      	b.n	8000452 <_puts_r+0x42>
 80004c6:	4622      	mov	r2, r4
 80004c8:	4628      	mov	r0, r5
 80004ca:	f000 f817 	bl	80004fc <__swbuf_r>
 80004ce:	3001      	adds	r0, #1
 80004d0:	d1bf      	bne.n	8000452 <_puts_r+0x42>
 80004d2:	e7df      	b.n	8000494 <_puts_r+0x84>
 80004d4:	6823      	ldr	r3, [r4, #0]
 80004d6:	250a      	movs	r5, #10
 80004d8:	1c5a      	adds	r2, r3, #1
 80004da:	6022      	str	r2, [r4, #0]
 80004dc:	701d      	strb	r5, [r3, #0]
 80004de:	e7db      	b.n	8000498 <_puts_r+0x88>
 80004e0:	08000e4c 	.word	0x08000e4c
 80004e4:	08000e6c 	.word	0x08000e6c
 80004e8:	08000e2c 	.word	0x08000e2c

080004ec <puts>:
 80004ec:	4b02      	ldr	r3, [pc, #8]	; (80004f8 <puts+0xc>)
 80004ee:	4601      	mov	r1, r0
 80004f0:	6818      	ldr	r0, [r3, #0]
 80004f2:	f7ff bf8d 	b.w	8000410 <_puts_r>
 80004f6:	bf00      	nop
 80004f8:	20000000 	.word	0x20000000

080004fc <__swbuf_r>:
 80004fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004fe:	460e      	mov	r6, r1
 8000500:	4614      	mov	r4, r2
 8000502:	4605      	mov	r5, r0
 8000504:	b118      	cbz	r0, 800050e <__swbuf_r+0x12>
 8000506:	6983      	ldr	r3, [r0, #24]
 8000508:	b90b      	cbnz	r3, 800050e <__swbuf_r+0x12>
 800050a:	f000 f9cd 	bl	80008a8 <__sinit>
 800050e:	4b21      	ldr	r3, [pc, #132]	; (8000594 <__swbuf_r+0x98>)
 8000510:	429c      	cmp	r4, r3
 8000512:	d12b      	bne.n	800056c <__swbuf_r+0x70>
 8000514:	686c      	ldr	r4, [r5, #4]
 8000516:	69a3      	ldr	r3, [r4, #24]
 8000518:	60a3      	str	r3, [r4, #8]
 800051a:	89a3      	ldrh	r3, [r4, #12]
 800051c:	071a      	lsls	r2, r3, #28
 800051e:	d52f      	bpl.n	8000580 <__swbuf_r+0x84>
 8000520:	6923      	ldr	r3, [r4, #16]
 8000522:	b36b      	cbz	r3, 8000580 <__swbuf_r+0x84>
 8000524:	6923      	ldr	r3, [r4, #16]
 8000526:	6820      	ldr	r0, [r4, #0]
 8000528:	1ac0      	subs	r0, r0, r3
 800052a:	6963      	ldr	r3, [r4, #20]
 800052c:	b2f6      	uxtb	r6, r6
 800052e:	4283      	cmp	r3, r0
 8000530:	4637      	mov	r7, r6
 8000532:	dc04      	bgt.n	800053e <__swbuf_r+0x42>
 8000534:	4621      	mov	r1, r4
 8000536:	4628      	mov	r0, r5
 8000538:	f000 f922 	bl	8000780 <_fflush_r>
 800053c:	bb30      	cbnz	r0, 800058c <__swbuf_r+0x90>
 800053e:	68a3      	ldr	r3, [r4, #8]
 8000540:	3b01      	subs	r3, #1
 8000542:	60a3      	str	r3, [r4, #8]
 8000544:	6823      	ldr	r3, [r4, #0]
 8000546:	1c5a      	adds	r2, r3, #1
 8000548:	6022      	str	r2, [r4, #0]
 800054a:	701e      	strb	r6, [r3, #0]
 800054c:	6963      	ldr	r3, [r4, #20]
 800054e:	3001      	adds	r0, #1
 8000550:	4283      	cmp	r3, r0
 8000552:	d004      	beq.n	800055e <__swbuf_r+0x62>
 8000554:	89a3      	ldrh	r3, [r4, #12]
 8000556:	07db      	lsls	r3, r3, #31
 8000558:	d506      	bpl.n	8000568 <__swbuf_r+0x6c>
 800055a:	2e0a      	cmp	r6, #10
 800055c:	d104      	bne.n	8000568 <__swbuf_r+0x6c>
 800055e:	4621      	mov	r1, r4
 8000560:	4628      	mov	r0, r5
 8000562:	f000 f90d 	bl	8000780 <_fflush_r>
 8000566:	b988      	cbnz	r0, 800058c <__swbuf_r+0x90>
 8000568:	4638      	mov	r0, r7
 800056a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800056c:	4b0a      	ldr	r3, [pc, #40]	; (8000598 <__swbuf_r+0x9c>)
 800056e:	429c      	cmp	r4, r3
 8000570:	d101      	bne.n	8000576 <__swbuf_r+0x7a>
 8000572:	68ac      	ldr	r4, [r5, #8]
 8000574:	e7cf      	b.n	8000516 <__swbuf_r+0x1a>
 8000576:	4b09      	ldr	r3, [pc, #36]	; (800059c <__swbuf_r+0xa0>)
 8000578:	429c      	cmp	r4, r3
 800057a:	bf08      	it	eq
 800057c:	68ec      	ldreq	r4, [r5, #12]
 800057e:	e7ca      	b.n	8000516 <__swbuf_r+0x1a>
 8000580:	4621      	mov	r1, r4
 8000582:	4628      	mov	r0, r5
 8000584:	f000 f80c 	bl	80005a0 <__swsetup_r>
 8000588:	2800      	cmp	r0, #0
 800058a:	d0cb      	beq.n	8000524 <__swbuf_r+0x28>
 800058c:	f04f 37ff 	mov.w	r7, #4294967295
 8000590:	e7ea      	b.n	8000568 <__swbuf_r+0x6c>
 8000592:	bf00      	nop
 8000594:	08000e4c 	.word	0x08000e4c
 8000598:	08000e6c 	.word	0x08000e6c
 800059c:	08000e2c 	.word	0x08000e2c

080005a0 <__swsetup_r>:
 80005a0:	4b32      	ldr	r3, [pc, #200]	; (800066c <__swsetup_r+0xcc>)
 80005a2:	b570      	push	{r4, r5, r6, lr}
 80005a4:	681d      	ldr	r5, [r3, #0]
 80005a6:	4606      	mov	r6, r0
 80005a8:	460c      	mov	r4, r1
 80005aa:	b125      	cbz	r5, 80005b6 <__swsetup_r+0x16>
 80005ac:	69ab      	ldr	r3, [r5, #24]
 80005ae:	b913      	cbnz	r3, 80005b6 <__swsetup_r+0x16>
 80005b0:	4628      	mov	r0, r5
 80005b2:	f000 f979 	bl	80008a8 <__sinit>
 80005b6:	4b2e      	ldr	r3, [pc, #184]	; (8000670 <__swsetup_r+0xd0>)
 80005b8:	429c      	cmp	r4, r3
 80005ba:	d10f      	bne.n	80005dc <__swsetup_r+0x3c>
 80005bc:	686c      	ldr	r4, [r5, #4]
 80005be:	89a3      	ldrh	r3, [r4, #12]
 80005c0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005c4:	0719      	lsls	r1, r3, #28
 80005c6:	d42c      	bmi.n	8000622 <__swsetup_r+0x82>
 80005c8:	06dd      	lsls	r5, r3, #27
 80005ca:	d411      	bmi.n	80005f0 <__swsetup_r+0x50>
 80005cc:	2309      	movs	r3, #9
 80005ce:	6033      	str	r3, [r6, #0]
 80005d0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80005d4:	81a3      	strh	r3, [r4, #12]
 80005d6:	f04f 30ff 	mov.w	r0, #4294967295
 80005da:	e03e      	b.n	800065a <__swsetup_r+0xba>
 80005dc:	4b25      	ldr	r3, [pc, #148]	; (8000674 <__swsetup_r+0xd4>)
 80005de:	429c      	cmp	r4, r3
 80005e0:	d101      	bne.n	80005e6 <__swsetup_r+0x46>
 80005e2:	68ac      	ldr	r4, [r5, #8]
 80005e4:	e7eb      	b.n	80005be <__swsetup_r+0x1e>
 80005e6:	4b24      	ldr	r3, [pc, #144]	; (8000678 <__swsetup_r+0xd8>)
 80005e8:	429c      	cmp	r4, r3
 80005ea:	bf08      	it	eq
 80005ec:	68ec      	ldreq	r4, [r5, #12]
 80005ee:	e7e6      	b.n	80005be <__swsetup_r+0x1e>
 80005f0:	0758      	lsls	r0, r3, #29
 80005f2:	d512      	bpl.n	800061a <__swsetup_r+0x7a>
 80005f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005f6:	b141      	cbz	r1, 800060a <__swsetup_r+0x6a>
 80005f8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005fc:	4299      	cmp	r1, r3
 80005fe:	d002      	beq.n	8000606 <__swsetup_r+0x66>
 8000600:	4630      	mov	r0, r6
 8000602:	f000 fa57 	bl	8000ab4 <_free_r>
 8000606:	2300      	movs	r3, #0
 8000608:	6363      	str	r3, [r4, #52]	; 0x34
 800060a:	89a3      	ldrh	r3, [r4, #12]
 800060c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000610:	81a3      	strh	r3, [r4, #12]
 8000612:	2300      	movs	r3, #0
 8000614:	6063      	str	r3, [r4, #4]
 8000616:	6923      	ldr	r3, [r4, #16]
 8000618:	6023      	str	r3, [r4, #0]
 800061a:	89a3      	ldrh	r3, [r4, #12]
 800061c:	f043 0308 	orr.w	r3, r3, #8
 8000620:	81a3      	strh	r3, [r4, #12]
 8000622:	6923      	ldr	r3, [r4, #16]
 8000624:	b94b      	cbnz	r3, 800063a <__swsetup_r+0x9a>
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800062c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000630:	d003      	beq.n	800063a <__swsetup_r+0x9a>
 8000632:	4621      	mov	r1, r4
 8000634:	4630      	mov	r0, r6
 8000636:	f000 f9fd 	bl	8000a34 <__smakebuf_r>
 800063a:	89a0      	ldrh	r0, [r4, #12]
 800063c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000640:	f010 0301 	ands.w	r3, r0, #1
 8000644:	d00a      	beq.n	800065c <__swsetup_r+0xbc>
 8000646:	2300      	movs	r3, #0
 8000648:	60a3      	str	r3, [r4, #8]
 800064a:	6963      	ldr	r3, [r4, #20]
 800064c:	425b      	negs	r3, r3
 800064e:	61a3      	str	r3, [r4, #24]
 8000650:	6923      	ldr	r3, [r4, #16]
 8000652:	b943      	cbnz	r3, 8000666 <__swsetup_r+0xc6>
 8000654:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000658:	d1ba      	bne.n	80005d0 <__swsetup_r+0x30>
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	0781      	lsls	r1, r0, #30
 800065e:	bf58      	it	pl
 8000660:	6963      	ldrpl	r3, [r4, #20]
 8000662:	60a3      	str	r3, [r4, #8]
 8000664:	e7f4      	b.n	8000650 <__swsetup_r+0xb0>
 8000666:	2000      	movs	r0, #0
 8000668:	e7f7      	b.n	800065a <__swsetup_r+0xba>
 800066a:	bf00      	nop
 800066c:	20000000 	.word	0x20000000
 8000670:	08000e4c 	.word	0x08000e4c
 8000674:	08000e6c 	.word	0x08000e6c
 8000678:	08000e2c 	.word	0x08000e2c

0800067c <__sflush_r>:
 800067c:	898a      	ldrh	r2, [r1, #12]
 800067e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000680:	4605      	mov	r5, r0
 8000682:	0710      	lsls	r0, r2, #28
 8000684:	460c      	mov	r4, r1
 8000686:	d457      	bmi.n	8000738 <__sflush_r+0xbc>
 8000688:	684b      	ldr	r3, [r1, #4]
 800068a:	2b00      	cmp	r3, #0
 800068c:	dc04      	bgt.n	8000698 <__sflush_r+0x1c>
 800068e:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000690:	2b00      	cmp	r3, #0
 8000692:	dc01      	bgt.n	8000698 <__sflush_r+0x1c>
 8000694:	2000      	movs	r0, #0
 8000696:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000698:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800069a:	2e00      	cmp	r6, #0
 800069c:	d0fa      	beq.n	8000694 <__sflush_r+0x18>
 800069e:	2300      	movs	r3, #0
 80006a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006a4:	682f      	ldr	r7, [r5, #0]
 80006a6:	602b      	str	r3, [r5, #0]
 80006a8:	d032      	beq.n	8000710 <__sflush_r+0x94>
 80006aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006ac:	89a3      	ldrh	r3, [r4, #12]
 80006ae:	075a      	lsls	r2, r3, #29
 80006b0:	d505      	bpl.n	80006be <__sflush_r+0x42>
 80006b2:	6863      	ldr	r3, [r4, #4]
 80006b4:	1ac0      	subs	r0, r0, r3
 80006b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006b8:	b10b      	cbz	r3, 80006be <__sflush_r+0x42>
 80006ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006bc:	1ac0      	subs	r0, r0, r3
 80006be:	2300      	movs	r3, #0
 80006c0:	4602      	mov	r2, r0
 80006c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006c4:	6a21      	ldr	r1, [r4, #32]
 80006c6:	4628      	mov	r0, r5
 80006c8:	47b0      	blx	r6
 80006ca:	1c43      	adds	r3, r0, #1
 80006cc:	89a3      	ldrh	r3, [r4, #12]
 80006ce:	d106      	bne.n	80006de <__sflush_r+0x62>
 80006d0:	6829      	ldr	r1, [r5, #0]
 80006d2:	291d      	cmp	r1, #29
 80006d4:	d82c      	bhi.n	8000730 <__sflush_r+0xb4>
 80006d6:	4a29      	ldr	r2, [pc, #164]	; (800077c <__sflush_r+0x100>)
 80006d8:	40ca      	lsrs	r2, r1
 80006da:	07d6      	lsls	r6, r2, #31
 80006dc:	d528      	bpl.n	8000730 <__sflush_r+0xb4>
 80006de:	2200      	movs	r2, #0
 80006e0:	6062      	str	r2, [r4, #4]
 80006e2:	04d9      	lsls	r1, r3, #19
 80006e4:	6922      	ldr	r2, [r4, #16]
 80006e6:	6022      	str	r2, [r4, #0]
 80006e8:	d504      	bpl.n	80006f4 <__sflush_r+0x78>
 80006ea:	1c42      	adds	r2, r0, #1
 80006ec:	d101      	bne.n	80006f2 <__sflush_r+0x76>
 80006ee:	682b      	ldr	r3, [r5, #0]
 80006f0:	b903      	cbnz	r3, 80006f4 <__sflush_r+0x78>
 80006f2:	6560      	str	r0, [r4, #84]	; 0x54
 80006f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006f6:	602f      	str	r7, [r5, #0]
 80006f8:	2900      	cmp	r1, #0
 80006fa:	d0cb      	beq.n	8000694 <__sflush_r+0x18>
 80006fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000700:	4299      	cmp	r1, r3
 8000702:	d002      	beq.n	800070a <__sflush_r+0x8e>
 8000704:	4628      	mov	r0, r5
 8000706:	f000 f9d5 	bl	8000ab4 <_free_r>
 800070a:	2000      	movs	r0, #0
 800070c:	6360      	str	r0, [r4, #52]	; 0x34
 800070e:	e7c2      	b.n	8000696 <__sflush_r+0x1a>
 8000710:	6a21      	ldr	r1, [r4, #32]
 8000712:	2301      	movs	r3, #1
 8000714:	4628      	mov	r0, r5
 8000716:	47b0      	blx	r6
 8000718:	1c41      	adds	r1, r0, #1
 800071a:	d1c7      	bne.n	80006ac <__sflush_r+0x30>
 800071c:	682b      	ldr	r3, [r5, #0]
 800071e:	2b00      	cmp	r3, #0
 8000720:	d0c4      	beq.n	80006ac <__sflush_r+0x30>
 8000722:	2b1d      	cmp	r3, #29
 8000724:	d001      	beq.n	800072a <__sflush_r+0xae>
 8000726:	2b16      	cmp	r3, #22
 8000728:	d101      	bne.n	800072e <__sflush_r+0xb2>
 800072a:	602f      	str	r7, [r5, #0]
 800072c:	e7b2      	b.n	8000694 <__sflush_r+0x18>
 800072e:	89a3      	ldrh	r3, [r4, #12]
 8000730:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000734:	81a3      	strh	r3, [r4, #12]
 8000736:	e7ae      	b.n	8000696 <__sflush_r+0x1a>
 8000738:	690f      	ldr	r7, [r1, #16]
 800073a:	2f00      	cmp	r7, #0
 800073c:	d0aa      	beq.n	8000694 <__sflush_r+0x18>
 800073e:	0793      	lsls	r3, r2, #30
 8000740:	680e      	ldr	r6, [r1, #0]
 8000742:	bf08      	it	eq
 8000744:	694b      	ldreq	r3, [r1, #20]
 8000746:	600f      	str	r7, [r1, #0]
 8000748:	bf18      	it	ne
 800074a:	2300      	movne	r3, #0
 800074c:	1bf6      	subs	r6, r6, r7
 800074e:	608b      	str	r3, [r1, #8]
 8000750:	2e00      	cmp	r6, #0
 8000752:	dd9f      	ble.n	8000694 <__sflush_r+0x18>
 8000754:	6a21      	ldr	r1, [r4, #32]
 8000756:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800075a:	4633      	mov	r3, r6
 800075c:	463a      	mov	r2, r7
 800075e:	4628      	mov	r0, r5
 8000760:	47e0      	blx	ip
 8000762:	2800      	cmp	r0, #0
 8000764:	dc06      	bgt.n	8000774 <__sflush_r+0xf8>
 8000766:	89a3      	ldrh	r3, [r4, #12]
 8000768:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800076c:	81a3      	strh	r3, [r4, #12]
 800076e:	f04f 30ff 	mov.w	r0, #4294967295
 8000772:	e790      	b.n	8000696 <__sflush_r+0x1a>
 8000774:	4407      	add	r7, r0
 8000776:	1a36      	subs	r6, r6, r0
 8000778:	e7ea      	b.n	8000750 <__sflush_r+0xd4>
 800077a:	bf00      	nop
 800077c:	20400001 	.word	0x20400001

08000780 <_fflush_r>:
 8000780:	b538      	push	{r3, r4, r5, lr}
 8000782:	690b      	ldr	r3, [r1, #16]
 8000784:	4605      	mov	r5, r0
 8000786:	460c      	mov	r4, r1
 8000788:	b913      	cbnz	r3, 8000790 <_fflush_r+0x10>
 800078a:	2500      	movs	r5, #0
 800078c:	4628      	mov	r0, r5
 800078e:	bd38      	pop	{r3, r4, r5, pc}
 8000790:	b118      	cbz	r0, 800079a <_fflush_r+0x1a>
 8000792:	6983      	ldr	r3, [r0, #24]
 8000794:	b90b      	cbnz	r3, 800079a <_fflush_r+0x1a>
 8000796:	f000 f887 	bl	80008a8 <__sinit>
 800079a:	4b14      	ldr	r3, [pc, #80]	; (80007ec <_fflush_r+0x6c>)
 800079c:	429c      	cmp	r4, r3
 800079e:	d11b      	bne.n	80007d8 <_fflush_r+0x58>
 80007a0:	686c      	ldr	r4, [r5, #4]
 80007a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007a6:	2b00      	cmp	r3, #0
 80007a8:	d0ef      	beq.n	800078a <_fflush_r+0xa>
 80007aa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80007ac:	07d0      	lsls	r0, r2, #31
 80007ae:	d404      	bmi.n	80007ba <_fflush_r+0x3a>
 80007b0:	0599      	lsls	r1, r3, #22
 80007b2:	d402      	bmi.n	80007ba <_fflush_r+0x3a>
 80007b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007b6:	f000 f915 	bl	80009e4 <__retarget_lock_acquire_recursive>
 80007ba:	4628      	mov	r0, r5
 80007bc:	4621      	mov	r1, r4
 80007be:	f7ff ff5d 	bl	800067c <__sflush_r>
 80007c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80007c4:	07da      	lsls	r2, r3, #31
 80007c6:	4605      	mov	r5, r0
 80007c8:	d4e0      	bmi.n	800078c <_fflush_r+0xc>
 80007ca:	89a3      	ldrh	r3, [r4, #12]
 80007cc:	059b      	lsls	r3, r3, #22
 80007ce:	d4dd      	bmi.n	800078c <_fflush_r+0xc>
 80007d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007d2:	f000 f908 	bl	80009e6 <__retarget_lock_release_recursive>
 80007d6:	e7d9      	b.n	800078c <_fflush_r+0xc>
 80007d8:	4b05      	ldr	r3, [pc, #20]	; (80007f0 <_fflush_r+0x70>)
 80007da:	429c      	cmp	r4, r3
 80007dc:	d101      	bne.n	80007e2 <_fflush_r+0x62>
 80007de:	68ac      	ldr	r4, [r5, #8]
 80007e0:	e7df      	b.n	80007a2 <_fflush_r+0x22>
 80007e2:	4b04      	ldr	r3, [pc, #16]	; (80007f4 <_fflush_r+0x74>)
 80007e4:	429c      	cmp	r4, r3
 80007e6:	bf08      	it	eq
 80007e8:	68ec      	ldreq	r4, [r5, #12]
 80007ea:	e7da      	b.n	80007a2 <_fflush_r+0x22>
 80007ec:	08000e4c 	.word	0x08000e4c
 80007f0:	08000e6c 	.word	0x08000e6c
 80007f4:	08000e2c 	.word	0x08000e2c

080007f8 <std>:
 80007f8:	2300      	movs	r3, #0
 80007fa:	b510      	push	{r4, lr}
 80007fc:	4604      	mov	r4, r0
 80007fe:	e9c0 3300 	strd	r3, r3, [r0]
 8000802:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000806:	6083      	str	r3, [r0, #8]
 8000808:	8181      	strh	r1, [r0, #12]
 800080a:	6643      	str	r3, [r0, #100]	; 0x64
 800080c:	81c2      	strh	r2, [r0, #14]
 800080e:	6183      	str	r3, [r0, #24]
 8000810:	4619      	mov	r1, r3
 8000812:	2208      	movs	r2, #8
 8000814:	305c      	adds	r0, #92	; 0x5c
 8000816:	f7ff fdf3 	bl	8000400 <memset>
 800081a:	4b05      	ldr	r3, [pc, #20]	; (8000830 <std+0x38>)
 800081c:	6263      	str	r3, [r4, #36]	; 0x24
 800081e:	4b05      	ldr	r3, [pc, #20]	; (8000834 <std+0x3c>)
 8000820:	62a3      	str	r3, [r4, #40]	; 0x28
 8000822:	4b05      	ldr	r3, [pc, #20]	; (8000838 <std+0x40>)
 8000824:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000826:	4b05      	ldr	r3, [pc, #20]	; (800083c <std+0x44>)
 8000828:	6224      	str	r4, [r4, #32]
 800082a:	6323      	str	r3, [r4, #48]	; 0x30
 800082c:	bd10      	pop	{r4, pc}
 800082e:	bf00      	nop
 8000830:	08000c91 	.word	0x08000c91
 8000834:	08000cb3 	.word	0x08000cb3
 8000838:	08000ceb 	.word	0x08000ceb
 800083c:	08000d0f 	.word	0x08000d0f

08000840 <_cleanup_r>:
 8000840:	4901      	ldr	r1, [pc, #4]	; (8000848 <_cleanup_r+0x8>)
 8000842:	f000 b8af 	b.w	80009a4 <_fwalk_reent>
 8000846:	bf00      	nop
 8000848:	08000781 	.word	0x08000781

0800084c <__sfmoreglue>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	2268      	movs	r2, #104	; 0x68
 8000850:	1e4d      	subs	r5, r1, #1
 8000852:	4355      	muls	r5, r2
 8000854:	460e      	mov	r6, r1
 8000856:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800085a:	f000 f995 	bl	8000b88 <_malloc_r>
 800085e:	4604      	mov	r4, r0
 8000860:	b140      	cbz	r0, 8000874 <__sfmoreglue+0x28>
 8000862:	2100      	movs	r1, #0
 8000864:	e9c0 1600 	strd	r1, r6, [r0]
 8000868:	300c      	adds	r0, #12
 800086a:	60a0      	str	r0, [r4, #8]
 800086c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000870:	f7ff fdc6 	bl	8000400 <memset>
 8000874:	4620      	mov	r0, r4
 8000876:	bd70      	pop	{r4, r5, r6, pc}

08000878 <__sfp_lock_acquire>:
 8000878:	4801      	ldr	r0, [pc, #4]	; (8000880 <__sfp_lock_acquire+0x8>)
 800087a:	f000 b8b3 	b.w	80009e4 <__retarget_lock_acquire_recursive>
 800087e:	bf00      	nop
 8000880:	20000085 	.word	0x20000085

08000884 <__sfp_lock_release>:
 8000884:	4801      	ldr	r0, [pc, #4]	; (800088c <__sfp_lock_release+0x8>)
 8000886:	f000 b8ae 	b.w	80009e6 <__retarget_lock_release_recursive>
 800088a:	bf00      	nop
 800088c:	20000085 	.word	0x20000085

08000890 <__sinit_lock_acquire>:
 8000890:	4801      	ldr	r0, [pc, #4]	; (8000898 <__sinit_lock_acquire+0x8>)
 8000892:	f000 b8a7 	b.w	80009e4 <__retarget_lock_acquire_recursive>
 8000896:	bf00      	nop
 8000898:	20000086 	.word	0x20000086

0800089c <__sinit_lock_release>:
 800089c:	4801      	ldr	r0, [pc, #4]	; (80008a4 <__sinit_lock_release+0x8>)
 800089e:	f000 b8a2 	b.w	80009e6 <__retarget_lock_release_recursive>
 80008a2:	bf00      	nop
 80008a4:	20000086 	.word	0x20000086

080008a8 <__sinit>:
 80008a8:	b510      	push	{r4, lr}
 80008aa:	4604      	mov	r4, r0
 80008ac:	f7ff fff0 	bl	8000890 <__sinit_lock_acquire>
 80008b0:	69a3      	ldr	r3, [r4, #24]
 80008b2:	b11b      	cbz	r3, 80008bc <__sinit+0x14>
 80008b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008b8:	f7ff bff0 	b.w	800089c <__sinit_lock_release>
 80008bc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008c0:	6523      	str	r3, [r4, #80]	; 0x50
 80008c2:	4b13      	ldr	r3, [pc, #76]	; (8000910 <__sinit+0x68>)
 80008c4:	4a13      	ldr	r2, [pc, #76]	; (8000914 <__sinit+0x6c>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	62a2      	str	r2, [r4, #40]	; 0x28
 80008ca:	42a3      	cmp	r3, r4
 80008cc:	bf04      	itt	eq
 80008ce:	2301      	moveq	r3, #1
 80008d0:	61a3      	streq	r3, [r4, #24]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f000 f820 	bl	8000918 <__sfp>
 80008d8:	6060      	str	r0, [r4, #4]
 80008da:	4620      	mov	r0, r4
 80008dc:	f000 f81c 	bl	8000918 <__sfp>
 80008e0:	60a0      	str	r0, [r4, #8]
 80008e2:	4620      	mov	r0, r4
 80008e4:	f000 f818 	bl	8000918 <__sfp>
 80008e8:	2200      	movs	r2, #0
 80008ea:	60e0      	str	r0, [r4, #12]
 80008ec:	2104      	movs	r1, #4
 80008ee:	6860      	ldr	r0, [r4, #4]
 80008f0:	f7ff ff82 	bl	80007f8 <std>
 80008f4:	68a0      	ldr	r0, [r4, #8]
 80008f6:	2201      	movs	r2, #1
 80008f8:	2109      	movs	r1, #9
 80008fa:	f7ff ff7d 	bl	80007f8 <std>
 80008fe:	68e0      	ldr	r0, [r4, #12]
 8000900:	2202      	movs	r2, #2
 8000902:	2112      	movs	r1, #18
 8000904:	f7ff ff78 	bl	80007f8 <std>
 8000908:	2301      	movs	r3, #1
 800090a:	61a3      	str	r3, [r4, #24]
 800090c:	e7d2      	b.n	80008b4 <__sinit+0xc>
 800090e:	bf00      	nop
 8000910:	08000e28 	.word	0x08000e28
 8000914:	08000841 	.word	0x08000841

08000918 <__sfp>:
 8000918:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800091a:	4607      	mov	r7, r0
 800091c:	f7ff ffac 	bl	8000878 <__sfp_lock_acquire>
 8000920:	4b1e      	ldr	r3, [pc, #120]	; (800099c <__sfp+0x84>)
 8000922:	681e      	ldr	r6, [r3, #0]
 8000924:	69b3      	ldr	r3, [r6, #24]
 8000926:	b913      	cbnz	r3, 800092e <__sfp+0x16>
 8000928:	4630      	mov	r0, r6
 800092a:	f7ff ffbd 	bl	80008a8 <__sinit>
 800092e:	3648      	adds	r6, #72	; 0x48
 8000930:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000934:	3b01      	subs	r3, #1
 8000936:	d503      	bpl.n	8000940 <__sfp+0x28>
 8000938:	6833      	ldr	r3, [r6, #0]
 800093a:	b30b      	cbz	r3, 8000980 <__sfp+0x68>
 800093c:	6836      	ldr	r6, [r6, #0]
 800093e:	e7f7      	b.n	8000930 <__sfp+0x18>
 8000940:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000944:	b9d5      	cbnz	r5, 800097c <__sfp+0x64>
 8000946:	4b16      	ldr	r3, [pc, #88]	; (80009a0 <__sfp+0x88>)
 8000948:	60e3      	str	r3, [r4, #12]
 800094a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800094e:	6665      	str	r5, [r4, #100]	; 0x64
 8000950:	f000 f847 	bl	80009e2 <__retarget_lock_init_recursive>
 8000954:	f7ff ff96 	bl	8000884 <__sfp_lock_release>
 8000958:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800095c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000960:	6025      	str	r5, [r4, #0]
 8000962:	61a5      	str	r5, [r4, #24]
 8000964:	2208      	movs	r2, #8
 8000966:	4629      	mov	r1, r5
 8000968:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800096c:	f7ff fd48 	bl	8000400 <memset>
 8000970:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000974:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000978:	4620      	mov	r0, r4
 800097a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800097c:	3468      	adds	r4, #104	; 0x68
 800097e:	e7d9      	b.n	8000934 <__sfp+0x1c>
 8000980:	2104      	movs	r1, #4
 8000982:	4638      	mov	r0, r7
 8000984:	f7ff ff62 	bl	800084c <__sfmoreglue>
 8000988:	4604      	mov	r4, r0
 800098a:	6030      	str	r0, [r6, #0]
 800098c:	2800      	cmp	r0, #0
 800098e:	d1d5      	bne.n	800093c <__sfp+0x24>
 8000990:	f7ff ff78 	bl	8000884 <__sfp_lock_release>
 8000994:	230c      	movs	r3, #12
 8000996:	603b      	str	r3, [r7, #0]
 8000998:	e7ee      	b.n	8000978 <__sfp+0x60>
 800099a:	bf00      	nop
 800099c:	08000e28 	.word	0x08000e28
 80009a0:	ffff0001 	.word	0xffff0001

080009a4 <_fwalk_reent>:
 80009a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009a8:	4606      	mov	r6, r0
 80009aa:	4688      	mov	r8, r1
 80009ac:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009b0:	2700      	movs	r7, #0
 80009b2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80009b6:	f1b9 0901 	subs.w	r9, r9, #1
 80009ba:	d505      	bpl.n	80009c8 <_fwalk_reent+0x24>
 80009bc:	6824      	ldr	r4, [r4, #0]
 80009be:	2c00      	cmp	r4, #0
 80009c0:	d1f7      	bne.n	80009b2 <_fwalk_reent+0xe>
 80009c2:	4638      	mov	r0, r7
 80009c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009c8:	89ab      	ldrh	r3, [r5, #12]
 80009ca:	2b01      	cmp	r3, #1
 80009cc:	d907      	bls.n	80009de <_fwalk_reent+0x3a>
 80009ce:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009d2:	3301      	adds	r3, #1
 80009d4:	d003      	beq.n	80009de <_fwalk_reent+0x3a>
 80009d6:	4629      	mov	r1, r5
 80009d8:	4630      	mov	r0, r6
 80009da:	47c0      	blx	r8
 80009dc:	4307      	orrs	r7, r0
 80009de:	3568      	adds	r5, #104	; 0x68
 80009e0:	e7e9      	b.n	80009b6 <_fwalk_reent+0x12>

080009e2 <__retarget_lock_init_recursive>:
 80009e2:	4770      	bx	lr

080009e4 <__retarget_lock_acquire_recursive>:
 80009e4:	4770      	bx	lr

080009e6 <__retarget_lock_release_recursive>:
 80009e6:	4770      	bx	lr

080009e8 <__swhatbuf_r>:
 80009e8:	b570      	push	{r4, r5, r6, lr}
 80009ea:	460e      	mov	r6, r1
 80009ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009f0:	2900      	cmp	r1, #0
 80009f2:	b096      	sub	sp, #88	; 0x58
 80009f4:	4614      	mov	r4, r2
 80009f6:	461d      	mov	r5, r3
 80009f8:	da08      	bge.n	8000a0c <__swhatbuf_r+0x24>
 80009fa:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80009fe:	2200      	movs	r2, #0
 8000a00:	602a      	str	r2, [r5, #0]
 8000a02:	061a      	lsls	r2, r3, #24
 8000a04:	d410      	bmi.n	8000a28 <__swhatbuf_r+0x40>
 8000a06:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a0a:	e00e      	b.n	8000a2a <__swhatbuf_r+0x42>
 8000a0c:	466a      	mov	r2, sp
 8000a0e:	f000 f9a5 	bl	8000d5c <_fstat_r>
 8000a12:	2800      	cmp	r0, #0
 8000a14:	dbf1      	blt.n	80009fa <__swhatbuf_r+0x12>
 8000a16:	9a01      	ldr	r2, [sp, #4]
 8000a18:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a1c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a20:	425a      	negs	r2, r3
 8000a22:	415a      	adcs	r2, r3
 8000a24:	602a      	str	r2, [r5, #0]
 8000a26:	e7ee      	b.n	8000a06 <__swhatbuf_r+0x1e>
 8000a28:	2340      	movs	r3, #64	; 0x40
 8000a2a:	2000      	movs	r0, #0
 8000a2c:	6023      	str	r3, [r4, #0]
 8000a2e:	b016      	add	sp, #88	; 0x58
 8000a30:	bd70      	pop	{r4, r5, r6, pc}
	...

08000a34 <__smakebuf_r>:
 8000a34:	898b      	ldrh	r3, [r1, #12]
 8000a36:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a38:	079d      	lsls	r5, r3, #30
 8000a3a:	4606      	mov	r6, r0
 8000a3c:	460c      	mov	r4, r1
 8000a3e:	d507      	bpl.n	8000a50 <__smakebuf_r+0x1c>
 8000a40:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a44:	6023      	str	r3, [r4, #0]
 8000a46:	6123      	str	r3, [r4, #16]
 8000a48:	2301      	movs	r3, #1
 8000a4a:	6163      	str	r3, [r4, #20]
 8000a4c:	b002      	add	sp, #8
 8000a4e:	bd70      	pop	{r4, r5, r6, pc}
 8000a50:	ab01      	add	r3, sp, #4
 8000a52:	466a      	mov	r2, sp
 8000a54:	f7ff ffc8 	bl	80009e8 <__swhatbuf_r>
 8000a58:	9900      	ldr	r1, [sp, #0]
 8000a5a:	4605      	mov	r5, r0
 8000a5c:	4630      	mov	r0, r6
 8000a5e:	f000 f893 	bl	8000b88 <_malloc_r>
 8000a62:	b948      	cbnz	r0, 8000a78 <__smakebuf_r+0x44>
 8000a64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a68:	059a      	lsls	r2, r3, #22
 8000a6a:	d4ef      	bmi.n	8000a4c <__smakebuf_r+0x18>
 8000a6c:	f023 0303 	bic.w	r3, r3, #3
 8000a70:	f043 0302 	orr.w	r3, r3, #2
 8000a74:	81a3      	strh	r3, [r4, #12]
 8000a76:	e7e3      	b.n	8000a40 <__smakebuf_r+0xc>
 8000a78:	4b0d      	ldr	r3, [pc, #52]	; (8000ab0 <__smakebuf_r+0x7c>)
 8000a7a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a7c:	89a3      	ldrh	r3, [r4, #12]
 8000a7e:	6020      	str	r0, [r4, #0]
 8000a80:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a84:	81a3      	strh	r3, [r4, #12]
 8000a86:	9b00      	ldr	r3, [sp, #0]
 8000a88:	6163      	str	r3, [r4, #20]
 8000a8a:	9b01      	ldr	r3, [sp, #4]
 8000a8c:	6120      	str	r0, [r4, #16]
 8000a8e:	b15b      	cbz	r3, 8000aa8 <__smakebuf_r+0x74>
 8000a90:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a94:	4630      	mov	r0, r6
 8000a96:	f000 f973 	bl	8000d80 <_isatty_r>
 8000a9a:	b128      	cbz	r0, 8000aa8 <__smakebuf_r+0x74>
 8000a9c:	89a3      	ldrh	r3, [r4, #12]
 8000a9e:	f023 0303 	bic.w	r3, r3, #3
 8000aa2:	f043 0301 	orr.w	r3, r3, #1
 8000aa6:	81a3      	strh	r3, [r4, #12]
 8000aa8:	89a0      	ldrh	r0, [r4, #12]
 8000aaa:	4305      	orrs	r5, r0
 8000aac:	81a5      	strh	r5, [r4, #12]
 8000aae:	e7cd      	b.n	8000a4c <__smakebuf_r+0x18>
 8000ab0:	08000841 	.word	0x08000841

08000ab4 <_free_r>:
 8000ab4:	b538      	push	{r3, r4, r5, lr}
 8000ab6:	4605      	mov	r5, r0
 8000ab8:	2900      	cmp	r1, #0
 8000aba:	d041      	beq.n	8000b40 <_free_r+0x8c>
 8000abc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ac0:	1f0c      	subs	r4, r1, #4
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	bfb8      	it	lt
 8000ac6:	18e4      	addlt	r4, r4, r3
 8000ac8:	f000 f97c 	bl	8000dc4 <__malloc_lock>
 8000acc:	4a1d      	ldr	r2, [pc, #116]	; (8000b44 <_free_r+0x90>)
 8000ace:	6813      	ldr	r3, [r2, #0]
 8000ad0:	b933      	cbnz	r3, 8000ae0 <_free_r+0x2c>
 8000ad2:	6063      	str	r3, [r4, #4]
 8000ad4:	6014      	str	r4, [r2, #0]
 8000ad6:	4628      	mov	r0, r5
 8000ad8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000adc:	f000 b978 	b.w	8000dd0 <__malloc_unlock>
 8000ae0:	42a3      	cmp	r3, r4
 8000ae2:	d908      	bls.n	8000af6 <_free_r+0x42>
 8000ae4:	6820      	ldr	r0, [r4, #0]
 8000ae6:	1821      	adds	r1, r4, r0
 8000ae8:	428b      	cmp	r3, r1
 8000aea:	bf01      	itttt	eq
 8000aec:	6819      	ldreq	r1, [r3, #0]
 8000aee:	685b      	ldreq	r3, [r3, #4]
 8000af0:	1809      	addeq	r1, r1, r0
 8000af2:	6021      	streq	r1, [r4, #0]
 8000af4:	e7ed      	b.n	8000ad2 <_free_r+0x1e>
 8000af6:	461a      	mov	r2, r3
 8000af8:	685b      	ldr	r3, [r3, #4]
 8000afa:	b10b      	cbz	r3, 8000b00 <_free_r+0x4c>
 8000afc:	42a3      	cmp	r3, r4
 8000afe:	d9fa      	bls.n	8000af6 <_free_r+0x42>
 8000b00:	6811      	ldr	r1, [r2, #0]
 8000b02:	1850      	adds	r0, r2, r1
 8000b04:	42a0      	cmp	r0, r4
 8000b06:	d10b      	bne.n	8000b20 <_free_r+0x6c>
 8000b08:	6820      	ldr	r0, [r4, #0]
 8000b0a:	4401      	add	r1, r0
 8000b0c:	1850      	adds	r0, r2, r1
 8000b0e:	4283      	cmp	r3, r0
 8000b10:	6011      	str	r1, [r2, #0]
 8000b12:	d1e0      	bne.n	8000ad6 <_free_r+0x22>
 8000b14:	6818      	ldr	r0, [r3, #0]
 8000b16:	685b      	ldr	r3, [r3, #4]
 8000b18:	6053      	str	r3, [r2, #4]
 8000b1a:	4401      	add	r1, r0
 8000b1c:	6011      	str	r1, [r2, #0]
 8000b1e:	e7da      	b.n	8000ad6 <_free_r+0x22>
 8000b20:	d902      	bls.n	8000b28 <_free_r+0x74>
 8000b22:	230c      	movs	r3, #12
 8000b24:	602b      	str	r3, [r5, #0]
 8000b26:	e7d6      	b.n	8000ad6 <_free_r+0x22>
 8000b28:	6820      	ldr	r0, [r4, #0]
 8000b2a:	1821      	adds	r1, r4, r0
 8000b2c:	428b      	cmp	r3, r1
 8000b2e:	bf04      	itt	eq
 8000b30:	6819      	ldreq	r1, [r3, #0]
 8000b32:	685b      	ldreq	r3, [r3, #4]
 8000b34:	6063      	str	r3, [r4, #4]
 8000b36:	bf04      	itt	eq
 8000b38:	1809      	addeq	r1, r1, r0
 8000b3a:	6021      	streq	r1, [r4, #0]
 8000b3c:	6054      	str	r4, [r2, #4]
 8000b3e:	e7ca      	b.n	8000ad6 <_free_r+0x22>
 8000b40:	bd38      	pop	{r3, r4, r5, pc}
 8000b42:	bf00      	nop
 8000b44:	20000088 	.word	0x20000088

08000b48 <sbrk_aligned>:
 8000b48:	b570      	push	{r4, r5, r6, lr}
 8000b4a:	4e0e      	ldr	r6, [pc, #56]	; (8000b84 <sbrk_aligned+0x3c>)
 8000b4c:	460c      	mov	r4, r1
 8000b4e:	6831      	ldr	r1, [r6, #0]
 8000b50:	4605      	mov	r5, r0
 8000b52:	b911      	cbnz	r1, 8000b5a <sbrk_aligned+0x12>
 8000b54:	f000 f88c 	bl	8000c70 <_sbrk_r>
 8000b58:	6030      	str	r0, [r6, #0]
 8000b5a:	4621      	mov	r1, r4
 8000b5c:	4628      	mov	r0, r5
 8000b5e:	f000 f887 	bl	8000c70 <_sbrk_r>
 8000b62:	1c43      	adds	r3, r0, #1
 8000b64:	d00a      	beq.n	8000b7c <sbrk_aligned+0x34>
 8000b66:	1cc4      	adds	r4, r0, #3
 8000b68:	f024 0403 	bic.w	r4, r4, #3
 8000b6c:	42a0      	cmp	r0, r4
 8000b6e:	d007      	beq.n	8000b80 <sbrk_aligned+0x38>
 8000b70:	1a21      	subs	r1, r4, r0
 8000b72:	4628      	mov	r0, r5
 8000b74:	f000 f87c 	bl	8000c70 <_sbrk_r>
 8000b78:	3001      	adds	r0, #1
 8000b7a:	d101      	bne.n	8000b80 <sbrk_aligned+0x38>
 8000b7c:	f04f 34ff 	mov.w	r4, #4294967295
 8000b80:	4620      	mov	r0, r4
 8000b82:	bd70      	pop	{r4, r5, r6, pc}
 8000b84:	2000008c 	.word	0x2000008c

08000b88 <_malloc_r>:
 8000b88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b8c:	1ccd      	adds	r5, r1, #3
 8000b8e:	f025 0503 	bic.w	r5, r5, #3
 8000b92:	3508      	adds	r5, #8
 8000b94:	2d0c      	cmp	r5, #12
 8000b96:	bf38      	it	cc
 8000b98:	250c      	movcc	r5, #12
 8000b9a:	2d00      	cmp	r5, #0
 8000b9c:	4607      	mov	r7, r0
 8000b9e:	db01      	blt.n	8000ba4 <_malloc_r+0x1c>
 8000ba0:	42a9      	cmp	r1, r5
 8000ba2:	d905      	bls.n	8000bb0 <_malloc_r+0x28>
 8000ba4:	230c      	movs	r3, #12
 8000ba6:	603b      	str	r3, [r7, #0]
 8000ba8:	2600      	movs	r6, #0
 8000baa:	4630      	mov	r0, r6
 8000bac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000bb0:	4e2e      	ldr	r6, [pc, #184]	; (8000c6c <_malloc_r+0xe4>)
 8000bb2:	f000 f907 	bl	8000dc4 <__malloc_lock>
 8000bb6:	6833      	ldr	r3, [r6, #0]
 8000bb8:	461c      	mov	r4, r3
 8000bba:	bb34      	cbnz	r4, 8000c0a <_malloc_r+0x82>
 8000bbc:	4629      	mov	r1, r5
 8000bbe:	4638      	mov	r0, r7
 8000bc0:	f7ff ffc2 	bl	8000b48 <sbrk_aligned>
 8000bc4:	1c43      	adds	r3, r0, #1
 8000bc6:	4604      	mov	r4, r0
 8000bc8:	d14d      	bne.n	8000c66 <_malloc_r+0xde>
 8000bca:	6834      	ldr	r4, [r6, #0]
 8000bcc:	4626      	mov	r6, r4
 8000bce:	2e00      	cmp	r6, #0
 8000bd0:	d140      	bne.n	8000c54 <_malloc_r+0xcc>
 8000bd2:	6823      	ldr	r3, [r4, #0]
 8000bd4:	4631      	mov	r1, r6
 8000bd6:	4638      	mov	r0, r7
 8000bd8:	eb04 0803 	add.w	r8, r4, r3
 8000bdc:	f000 f848 	bl	8000c70 <_sbrk_r>
 8000be0:	4580      	cmp	r8, r0
 8000be2:	d13a      	bne.n	8000c5a <_malloc_r+0xd2>
 8000be4:	6821      	ldr	r1, [r4, #0]
 8000be6:	3503      	adds	r5, #3
 8000be8:	1a6d      	subs	r5, r5, r1
 8000bea:	f025 0503 	bic.w	r5, r5, #3
 8000bee:	3508      	adds	r5, #8
 8000bf0:	2d0c      	cmp	r5, #12
 8000bf2:	bf38      	it	cc
 8000bf4:	250c      	movcc	r5, #12
 8000bf6:	4629      	mov	r1, r5
 8000bf8:	4638      	mov	r0, r7
 8000bfa:	f7ff ffa5 	bl	8000b48 <sbrk_aligned>
 8000bfe:	3001      	adds	r0, #1
 8000c00:	d02b      	beq.n	8000c5a <_malloc_r+0xd2>
 8000c02:	6823      	ldr	r3, [r4, #0]
 8000c04:	442b      	add	r3, r5
 8000c06:	6023      	str	r3, [r4, #0]
 8000c08:	e00e      	b.n	8000c28 <_malloc_r+0xa0>
 8000c0a:	6822      	ldr	r2, [r4, #0]
 8000c0c:	1b52      	subs	r2, r2, r5
 8000c0e:	d41e      	bmi.n	8000c4e <_malloc_r+0xc6>
 8000c10:	2a0b      	cmp	r2, #11
 8000c12:	d916      	bls.n	8000c42 <_malloc_r+0xba>
 8000c14:	1961      	adds	r1, r4, r5
 8000c16:	42a3      	cmp	r3, r4
 8000c18:	6025      	str	r5, [r4, #0]
 8000c1a:	bf18      	it	ne
 8000c1c:	6059      	strne	r1, [r3, #4]
 8000c1e:	6863      	ldr	r3, [r4, #4]
 8000c20:	bf08      	it	eq
 8000c22:	6031      	streq	r1, [r6, #0]
 8000c24:	5162      	str	r2, [r4, r5]
 8000c26:	604b      	str	r3, [r1, #4]
 8000c28:	4638      	mov	r0, r7
 8000c2a:	f104 060b 	add.w	r6, r4, #11
 8000c2e:	f000 f8cf 	bl	8000dd0 <__malloc_unlock>
 8000c32:	f026 0607 	bic.w	r6, r6, #7
 8000c36:	1d23      	adds	r3, r4, #4
 8000c38:	1af2      	subs	r2, r6, r3
 8000c3a:	d0b6      	beq.n	8000baa <_malloc_r+0x22>
 8000c3c:	1b9b      	subs	r3, r3, r6
 8000c3e:	50a3      	str	r3, [r4, r2]
 8000c40:	e7b3      	b.n	8000baa <_malloc_r+0x22>
 8000c42:	6862      	ldr	r2, [r4, #4]
 8000c44:	42a3      	cmp	r3, r4
 8000c46:	bf0c      	ite	eq
 8000c48:	6032      	streq	r2, [r6, #0]
 8000c4a:	605a      	strne	r2, [r3, #4]
 8000c4c:	e7ec      	b.n	8000c28 <_malloc_r+0xa0>
 8000c4e:	4623      	mov	r3, r4
 8000c50:	6864      	ldr	r4, [r4, #4]
 8000c52:	e7b2      	b.n	8000bba <_malloc_r+0x32>
 8000c54:	4634      	mov	r4, r6
 8000c56:	6876      	ldr	r6, [r6, #4]
 8000c58:	e7b9      	b.n	8000bce <_malloc_r+0x46>
 8000c5a:	230c      	movs	r3, #12
 8000c5c:	603b      	str	r3, [r7, #0]
 8000c5e:	4638      	mov	r0, r7
 8000c60:	f000 f8b6 	bl	8000dd0 <__malloc_unlock>
 8000c64:	e7a1      	b.n	8000baa <_malloc_r+0x22>
 8000c66:	6025      	str	r5, [r4, #0]
 8000c68:	e7de      	b.n	8000c28 <_malloc_r+0xa0>
 8000c6a:	bf00      	nop
 8000c6c:	20000088 	.word	0x20000088

08000c70 <_sbrk_r>:
 8000c70:	b538      	push	{r3, r4, r5, lr}
 8000c72:	4d06      	ldr	r5, [pc, #24]	; (8000c8c <_sbrk_r+0x1c>)
 8000c74:	2300      	movs	r3, #0
 8000c76:	4604      	mov	r4, r0
 8000c78:	4608      	mov	r0, r1
 8000c7a:	602b      	str	r3, [r5, #0]
 8000c7c:	f7ff fb36 	bl	80002ec <_sbrk>
 8000c80:	1c43      	adds	r3, r0, #1
 8000c82:	d102      	bne.n	8000c8a <_sbrk_r+0x1a>
 8000c84:	682b      	ldr	r3, [r5, #0]
 8000c86:	b103      	cbz	r3, 8000c8a <_sbrk_r+0x1a>
 8000c88:	6023      	str	r3, [r4, #0]
 8000c8a:	bd38      	pop	{r3, r4, r5, pc}
 8000c8c:	20000090 	.word	0x20000090

08000c90 <__sread>:
 8000c90:	b510      	push	{r4, lr}
 8000c92:	460c      	mov	r4, r1
 8000c94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c98:	f000 f8a0 	bl	8000ddc <_read_r>
 8000c9c:	2800      	cmp	r0, #0
 8000c9e:	bfab      	itete	ge
 8000ca0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000ca2:	89a3      	ldrhlt	r3, [r4, #12]
 8000ca4:	181b      	addge	r3, r3, r0
 8000ca6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000caa:	bfac      	ite	ge
 8000cac:	6563      	strge	r3, [r4, #84]	; 0x54
 8000cae:	81a3      	strhlt	r3, [r4, #12]
 8000cb0:	bd10      	pop	{r4, pc}

08000cb2 <__swrite>:
 8000cb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cb6:	461f      	mov	r7, r3
 8000cb8:	898b      	ldrh	r3, [r1, #12]
 8000cba:	05db      	lsls	r3, r3, #23
 8000cbc:	4605      	mov	r5, r0
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	4616      	mov	r6, r2
 8000cc2:	d505      	bpl.n	8000cd0 <__swrite+0x1e>
 8000cc4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cc8:	2302      	movs	r3, #2
 8000cca:	2200      	movs	r2, #0
 8000ccc:	f000 f868 	bl	8000da0 <_lseek_r>
 8000cd0:	89a3      	ldrh	r3, [r4, #12]
 8000cd2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cd6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cda:	81a3      	strh	r3, [r4, #12]
 8000cdc:	4632      	mov	r2, r6
 8000cde:	463b      	mov	r3, r7
 8000ce0:	4628      	mov	r0, r5
 8000ce2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ce6:	f000 b817 	b.w	8000d18 <_write_r>

08000cea <__sseek>:
 8000cea:	b510      	push	{r4, lr}
 8000cec:	460c      	mov	r4, r1
 8000cee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cf2:	f000 f855 	bl	8000da0 <_lseek_r>
 8000cf6:	1c43      	adds	r3, r0, #1
 8000cf8:	89a3      	ldrh	r3, [r4, #12]
 8000cfa:	bf15      	itete	ne
 8000cfc:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cfe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d02:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d06:	81a3      	strheq	r3, [r4, #12]
 8000d08:	bf18      	it	ne
 8000d0a:	81a3      	strhne	r3, [r4, #12]
 8000d0c:	bd10      	pop	{r4, pc}

08000d0e <__sclose>:
 8000d0e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d12:	f000 b813 	b.w	8000d3c <_close_r>
	...

08000d18 <_write_r>:
 8000d18:	b538      	push	{r3, r4, r5, lr}
 8000d1a:	4d07      	ldr	r5, [pc, #28]	; (8000d38 <_write_r+0x20>)
 8000d1c:	4604      	mov	r4, r0
 8000d1e:	4608      	mov	r0, r1
 8000d20:	4611      	mov	r1, r2
 8000d22:	2200      	movs	r2, #0
 8000d24:	602a      	str	r2, [r5, #0]
 8000d26:	461a      	mov	r2, r3
 8000d28:	f7ff fa93 	bl	8000252 <_write>
 8000d2c:	1c43      	adds	r3, r0, #1
 8000d2e:	d102      	bne.n	8000d36 <_write_r+0x1e>
 8000d30:	682b      	ldr	r3, [r5, #0]
 8000d32:	b103      	cbz	r3, 8000d36 <_write_r+0x1e>
 8000d34:	6023      	str	r3, [r4, #0]
 8000d36:	bd38      	pop	{r3, r4, r5, pc}
 8000d38:	20000090 	.word	0x20000090

08000d3c <_close_r>:
 8000d3c:	b538      	push	{r3, r4, r5, lr}
 8000d3e:	4d06      	ldr	r5, [pc, #24]	; (8000d58 <_close_r+0x1c>)
 8000d40:	2300      	movs	r3, #0
 8000d42:	4604      	mov	r4, r0
 8000d44:	4608      	mov	r0, r1
 8000d46:	602b      	str	r3, [r5, #0]
 8000d48:	f7ff fa9f 	bl	800028a <_close>
 8000d4c:	1c43      	adds	r3, r0, #1
 8000d4e:	d102      	bne.n	8000d56 <_close_r+0x1a>
 8000d50:	682b      	ldr	r3, [r5, #0]
 8000d52:	b103      	cbz	r3, 8000d56 <_close_r+0x1a>
 8000d54:	6023      	str	r3, [r4, #0]
 8000d56:	bd38      	pop	{r3, r4, r5, pc}
 8000d58:	20000090 	.word	0x20000090

08000d5c <_fstat_r>:
 8000d5c:	b538      	push	{r3, r4, r5, lr}
 8000d5e:	4d07      	ldr	r5, [pc, #28]	; (8000d7c <_fstat_r+0x20>)
 8000d60:	2300      	movs	r3, #0
 8000d62:	4604      	mov	r4, r0
 8000d64:	4608      	mov	r0, r1
 8000d66:	4611      	mov	r1, r2
 8000d68:	602b      	str	r3, [r5, #0]
 8000d6a:	f7ff fa99 	bl	80002a0 <_fstat>
 8000d6e:	1c43      	adds	r3, r0, #1
 8000d70:	d102      	bne.n	8000d78 <_fstat_r+0x1c>
 8000d72:	682b      	ldr	r3, [r5, #0]
 8000d74:	b103      	cbz	r3, 8000d78 <_fstat_r+0x1c>
 8000d76:	6023      	str	r3, [r4, #0]
 8000d78:	bd38      	pop	{r3, r4, r5, pc}
 8000d7a:	bf00      	nop
 8000d7c:	20000090 	.word	0x20000090

08000d80 <_isatty_r>:
 8000d80:	b538      	push	{r3, r4, r5, lr}
 8000d82:	4d06      	ldr	r5, [pc, #24]	; (8000d9c <_isatty_r+0x1c>)
 8000d84:	2300      	movs	r3, #0
 8000d86:	4604      	mov	r4, r0
 8000d88:	4608      	mov	r0, r1
 8000d8a:	602b      	str	r3, [r5, #0]
 8000d8c:	f7ff fa97 	bl	80002be <_isatty>
 8000d90:	1c43      	adds	r3, r0, #1
 8000d92:	d102      	bne.n	8000d9a <_isatty_r+0x1a>
 8000d94:	682b      	ldr	r3, [r5, #0]
 8000d96:	b103      	cbz	r3, 8000d9a <_isatty_r+0x1a>
 8000d98:	6023      	str	r3, [r4, #0]
 8000d9a:	bd38      	pop	{r3, r4, r5, pc}
 8000d9c:	20000090 	.word	0x20000090

08000da0 <_lseek_r>:
 8000da0:	b538      	push	{r3, r4, r5, lr}
 8000da2:	4d07      	ldr	r5, [pc, #28]	; (8000dc0 <_lseek_r+0x20>)
 8000da4:	4604      	mov	r4, r0
 8000da6:	4608      	mov	r0, r1
 8000da8:	4611      	mov	r1, r2
 8000daa:	2200      	movs	r2, #0
 8000dac:	602a      	str	r2, [r5, #0]
 8000dae:	461a      	mov	r2, r3
 8000db0:	f7ff fa8f 	bl	80002d2 <_lseek>
 8000db4:	1c43      	adds	r3, r0, #1
 8000db6:	d102      	bne.n	8000dbe <_lseek_r+0x1e>
 8000db8:	682b      	ldr	r3, [r5, #0]
 8000dba:	b103      	cbz	r3, 8000dbe <_lseek_r+0x1e>
 8000dbc:	6023      	str	r3, [r4, #0]
 8000dbe:	bd38      	pop	{r3, r4, r5, pc}
 8000dc0:	20000090 	.word	0x20000090

08000dc4 <__malloc_lock>:
 8000dc4:	4801      	ldr	r0, [pc, #4]	; (8000dcc <__malloc_lock+0x8>)
 8000dc6:	f7ff be0d 	b.w	80009e4 <__retarget_lock_acquire_recursive>
 8000dca:	bf00      	nop
 8000dcc:	20000084 	.word	0x20000084

08000dd0 <__malloc_unlock>:
 8000dd0:	4801      	ldr	r0, [pc, #4]	; (8000dd8 <__malloc_unlock+0x8>)
 8000dd2:	f7ff be08 	b.w	80009e6 <__retarget_lock_release_recursive>
 8000dd6:	bf00      	nop
 8000dd8:	20000084 	.word	0x20000084

08000ddc <_read_r>:
 8000ddc:	b538      	push	{r3, r4, r5, lr}
 8000dde:	4d07      	ldr	r5, [pc, #28]	; (8000dfc <_read_r+0x20>)
 8000de0:	4604      	mov	r4, r0
 8000de2:	4608      	mov	r0, r1
 8000de4:	4611      	mov	r1, r2
 8000de6:	2200      	movs	r2, #0
 8000de8:	602a      	str	r2, [r5, #0]
 8000dea:	461a      	mov	r2, r3
 8000dec:	f7ff fa14 	bl	8000218 <_read>
 8000df0:	1c43      	adds	r3, r0, #1
 8000df2:	d102      	bne.n	8000dfa <_read_r+0x1e>
 8000df4:	682b      	ldr	r3, [r5, #0]
 8000df6:	b103      	cbz	r3, 8000dfa <_read_r+0x1e>
 8000df8:	6023      	str	r3, [r4, #0]
 8000dfa:	bd38      	pop	{r3, r4, r5, pc}
 8000dfc:	20000090 	.word	0x20000090

08000e00 <_init>:
 8000e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e02:	bf00      	nop
 8000e04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e06:	bc08      	pop	{r3}
 8000e08:	469e      	mov	lr, r3
 8000e0a:	4770      	bx	lr

08000e0c <_fini>:
 8000e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e0e:	bf00      	nop
 8000e10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e12:	bc08      	pop	{r3}
 8000e14:	469e      	mov	lr, r3
 8000e16:	4770      	bx	lr
