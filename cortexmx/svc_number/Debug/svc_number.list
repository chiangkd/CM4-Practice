
svc_number.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001354  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000cc  080014f4  080014f4  000114f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015c0  080015c0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015c0  080015c0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015c0  080015c0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015c0  080015c0  000115c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015c4  080015c4  000115c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015c8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009ca  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000363  00000000  00000000  00020a58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  00020dc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e8  00000000  00000000  00020ee0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bce  00000000  00000000  00020fc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000012f3  00000000  00000000  00023b96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000092c0  00000000  00000000  00024e89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e149  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000ba4  00000000  00000000  0002e19c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080014dc 	.word	0x080014dc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080014dc 	.word	0x080014dc

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:


#include<stdio.h>
#include<stdint.h>
int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
    /* Loop forever */

	__asm("SVC #25");
 8000284:	df19      	svc	25

	register uint32_t data __asm("r0");

	printf("data = %ld \n", data);
 8000286:	4603      	mov	r3, r0
 8000288:	4619      	mov	r1, r3
 800028a:	4802      	ldr	r0, [pc, #8]	; (8000294 <main+0x14>)
 800028c:	f000 f92a 	bl	80004e4 <iprintf>

	for(;;);
 8000290:	e7fe      	b.n	8000290 <main+0x10>
 8000292:	bf00      	nop
 8000294:	080014f4 	.word	0x080014f4

08000298 <SVC_Handler>:
}


__attribute__ ((naked)) void SVC_Handler(void)
{
	__asm("MRS R0,MSP");
 8000298:	f3ef 8008 	mrs	r0, MSP
	__asm("B SVC_Handler_c");	// Branch to SVC_Handler_c function
 800029c:	f000 b802 	b.w	80002a4 <SVC_Handler_c>
}
 80002a0:	bf00      	nop
	...

080002a4 <SVC_Handler_c>:


void SVC_Handler_c(uint32_t *pBaseOfStackFrame)	// Handler code
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	b084      	sub	sp, #16
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
	printf("in SVC handler\n");
 80002ac:	480d      	ldr	r0, [pc, #52]	; (80002e4 <SVC_Handler_c+0x40>)
 80002ae:	f000 f99f 	bl	80005f0 <puts>


	// How to extract SVC number (#8)
	// 1. get the value of the MSP (There is no 'C' inbuilt function for this, write inline assembly!)
	uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	3318      	adds	r3, #24
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	60fb      	str	r3, [r7, #12]

	// 2. decrement the return address by 2 to point to
	// opcode of the SVC instruction in the program memory
	pReturn_addr -= 2;
 80002ba:	68fb      	ldr	r3, [r7, #12]
 80002bc:	3b02      	subs	r3, #2
 80002be:	60fb      	str	r3, [r7, #12]

	// 3. extract the SVC number (LSByte of the opcode)
	uint8_t svc_number = *pReturn_addr;
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	781b      	ldrb	r3, [r3, #0]
 80002c4:	72fb      	strb	r3, [r7, #11]

	printf("SVC number is : %d\n", svc_number);
 80002c6:	7afb      	ldrb	r3, [r7, #11]
 80002c8:	4619      	mov	r1, r3
 80002ca:	4807      	ldr	r0, [pc, #28]	; (80002e8 <SVC_Handler_c+0x44>)
 80002cc:	f000 f90a 	bl	80004e4 <iprintf>

	svc_number += 4;
 80002d0:	7afb      	ldrb	r3, [r7, #11]
 80002d2:	3304      	adds	r3, #4
 80002d4:	72fb      	strb	r3, [r7, #11]

	pBaseOfStackFrame[0] = svc_number;	// This is R0 position
 80002d6:	7afa      	ldrb	r2, [r7, #11]
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	601a      	str	r2, [r3, #0]
}
 80002dc:	bf00      	nop
 80002de:	3710      	adds	r7, #16
 80002e0:	46bd      	mov	sp, r7
 80002e2:	bd80      	pop	{r7, pc}
 80002e4:	08001504 	.word	0x08001504
 80002e8:	08001514 	.word	0x08001514

080002ec <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b086      	sub	sp, #24
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	60f8      	str	r0, [r7, #12]
 80002f4:	60b9      	str	r1, [r7, #8]
 80002f6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00a      	b.n	8000314 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002fe:	f3af 8000 	nop.w
 8000302:	4601      	mov	r1, r0
 8000304:	68bb      	ldr	r3, [r7, #8]
 8000306:	1c5a      	adds	r2, r3, #1
 8000308:	60ba      	str	r2, [r7, #8]
 800030a:	b2ca      	uxtb	r2, r1
 800030c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030e:	697b      	ldr	r3, [r7, #20]
 8000310:	3301      	adds	r3, #1
 8000312:	617b      	str	r3, [r7, #20]
 8000314:	697a      	ldr	r2, [r7, #20]
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf0      	blt.n	80002fe <_read+0x12>
	}

return len;
 800031c:	687b      	ldr	r3, [r7, #4]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3718      	adds	r7, #24
 8000322:	46bd      	mov	sp, r7
 8000324:	bd80      	pop	{r7, pc}

08000326 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000326:	b580      	push	{r7, lr}
 8000328:	b086      	sub	sp, #24
 800032a:	af00      	add	r7, sp, #0
 800032c:	60f8      	str	r0, [r7, #12]
 800032e:	60b9      	str	r1, [r7, #8]
 8000330:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000332:	2300      	movs	r3, #0
 8000334:	617b      	str	r3, [r7, #20]
 8000336:	e009      	b.n	800034c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	1c5a      	adds	r2, r3, #1
 800033c:	60ba      	str	r2, [r7, #8]
 800033e:	781b      	ldrb	r3, [r3, #0]
 8000340:	4618      	mov	r0, r3
 8000342:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	3301      	adds	r3, #1
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	697a      	ldr	r2, [r7, #20]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	429a      	cmp	r2, r3
 8000352:	dbf1      	blt.n	8000338 <_write+0x12>
	}
	return len;
 8000354:	687b      	ldr	r3, [r7, #4]
}
 8000356:	4618      	mov	r0, r3
 8000358:	3718      	adds	r7, #24
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}

0800035e <_close>:

int _close(int file)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
	return -1;
 8000366:	f04f 33ff 	mov.w	r3, #4294967295
}
 800036a:	4618      	mov	r0, r3
 800036c:	370c      	adds	r7, #12
 800036e:	46bd      	mov	sp, r7
 8000370:	bc80      	pop	{r7}
 8000372:	4770      	bx	lr

08000374 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000374:	b480      	push	{r7}
 8000376:	b083      	sub	sp, #12
 8000378:	af00      	add	r7, sp, #0
 800037a:	6078      	str	r0, [r7, #4]
 800037c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800037e:	683b      	ldr	r3, [r7, #0]
 8000380:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000384:	605a      	str	r2, [r3, #4]
	return 0;
 8000386:	2300      	movs	r3, #0
}
 8000388:	4618      	mov	r0, r3
 800038a:	370c      	adds	r7, #12
 800038c:	46bd      	mov	sp, r7
 800038e:	bc80      	pop	{r7}
 8000390:	4770      	bx	lr

08000392 <_isatty>:

int _isatty(int file)
{
 8000392:	b480      	push	{r7}
 8000394:	b083      	sub	sp, #12
 8000396:	af00      	add	r7, sp, #0
 8000398:	6078      	str	r0, [r7, #4]
	return 1;
 800039a:	2301      	movs	r3, #1
}
 800039c:	4618      	mov	r0, r3
 800039e:	370c      	adds	r7, #12
 80003a0:	46bd      	mov	sp, r7
 80003a2:	bc80      	pop	{r7}
 80003a4:	4770      	bx	lr

080003a6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003a6:	b480      	push	{r7}
 80003a8:	b085      	sub	sp, #20
 80003aa:	af00      	add	r7, sp, #0
 80003ac:	60f8      	str	r0, [r7, #12]
 80003ae:	60b9      	str	r1, [r7, #8]
 80003b0:	607a      	str	r2, [r7, #4]
	return 0;
 80003b2:	2300      	movs	r3, #0
}
 80003b4:	4618      	mov	r0, r3
 80003b6:	3714      	adds	r7, #20
 80003b8:	46bd      	mov	sp, r7
 80003ba:	bc80      	pop	{r7}
 80003bc:	4770      	bx	lr
	...

080003c0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b086      	sub	sp, #24
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003c8:	4a14      	ldr	r2, [pc, #80]	; (800041c <_sbrk+0x5c>)
 80003ca:	4b15      	ldr	r3, [pc, #84]	; (8000420 <_sbrk+0x60>)
 80003cc:	1ad3      	subs	r3, r2, r3
 80003ce:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003d0:	697b      	ldr	r3, [r7, #20]
 80003d2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003d4:	4b13      	ldr	r3, [pc, #76]	; (8000424 <_sbrk+0x64>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	2b00      	cmp	r3, #0
 80003da:	d102      	bne.n	80003e2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003dc:	4b11      	ldr	r3, [pc, #68]	; (8000424 <_sbrk+0x64>)
 80003de:	4a12      	ldr	r2, [pc, #72]	; (8000428 <_sbrk+0x68>)
 80003e0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003e2:	4b10      	ldr	r3, [pc, #64]	; (8000424 <_sbrk+0x64>)
 80003e4:	681a      	ldr	r2, [r3, #0]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4413      	add	r3, r2
 80003ea:	693a      	ldr	r2, [r7, #16]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	d207      	bcs.n	8000400 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003f0:	f000 f846 	bl	8000480 <__errno>
 80003f4:	4603      	mov	r3, r0
 80003f6:	220c      	movs	r2, #12
 80003f8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003fa:	f04f 33ff 	mov.w	r3, #4294967295
 80003fe:	e009      	b.n	8000414 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000400:	4b08      	ldr	r3, [pc, #32]	; (8000424 <_sbrk+0x64>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000406:	4b07      	ldr	r3, [pc, #28]	; (8000424 <_sbrk+0x64>)
 8000408:	681a      	ldr	r2, [r3, #0]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4413      	add	r3, r2
 800040e:	4a05      	ldr	r2, [pc, #20]	; (8000424 <_sbrk+0x64>)
 8000410:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000412:	68fb      	ldr	r3, [r7, #12]
}
 8000414:	4618      	mov	r0, r3
 8000416:	3718      	adds	r7, #24
 8000418:	46bd      	mov	sp, r7
 800041a:	bd80      	pop	{r7, pc}
 800041c:	20010000 	.word	0x20010000
 8000420:	00000400 	.word	0x00000400
 8000424:	20000080 	.word	0x20000080
 8000428:	20000098 	.word	0x20000098

0800042c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800042c:	480d      	ldr	r0, [pc, #52]	; (8000464 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800042e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000430:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000434:	480c      	ldr	r0, [pc, #48]	; (8000468 <LoopForever+0x6>)
  ldr r1, =_edata
 8000436:	490d      	ldr	r1, [pc, #52]	; (800046c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000438:	4a0d      	ldr	r2, [pc, #52]	; (8000470 <LoopForever+0xe>)
  movs r3, #0
 800043a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800043c:	e002      	b.n	8000444 <LoopCopyDataInit>

0800043e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800043e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000440:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000442:	3304      	adds	r3, #4

08000444 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000444:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000446:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000448:	d3f9      	bcc.n	800043e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800044a:	4a0a      	ldr	r2, [pc, #40]	; (8000474 <LoopForever+0x12>)
  ldr r4, =_ebss
 800044c:	4c0a      	ldr	r4, [pc, #40]	; (8000478 <LoopForever+0x16>)
  movs r3, #0
 800044e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000450:	e001      	b.n	8000456 <LoopFillZerobss>

08000452 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000452:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000454:	3204      	adds	r2, #4

08000456 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000456:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000458:	d3fb      	bcc.n	8000452 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800045a:	f000 f817 	bl	800048c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800045e:	f7ff ff0f 	bl	8000280 <main>

08000462 <LoopForever>:

LoopForever:
    b LoopForever
 8000462:	e7fe      	b.n	8000462 <LoopForever>
  ldr   r0, =_estack
 8000464:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000468:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800046c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000470:	080015c8 	.word	0x080015c8
  ldr r2, =_sbss
 8000474:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000478:	20000094 	.word	0x20000094

0800047c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800047c:	e7fe      	b.n	800047c <ADC1_2_IRQHandler>
	...

08000480 <__errno>:
 8000480:	4b01      	ldr	r3, [pc, #4]	; (8000488 <__errno+0x8>)
 8000482:	6818      	ldr	r0, [r3, #0]
 8000484:	4770      	bx	lr
 8000486:	bf00      	nop
 8000488:	20000000 	.word	0x20000000

0800048c <__libc_init_array>:
 800048c:	b570      	push	{r4, r5, r6, lr}
 800048e:	4d0d      	ldr	r5, [pc, #52]	; (80004c4 <__libc_init_array+0x38>)
 8000490:	4c0d      	ldr	r4, [pc, #52]	; (80004c8 <__libc_init_array+0x3c>)
 8000492:	1b64      	subs	r4, r4, r5
 8000494:	10a4      	asrs	r4, r4, #2
 8000496:	2600      	movs	r6, #0
 8000498:	42a6      	cmp	r6, r4
 800049a:	d109      	bne.n	80004b0 <__libc_init_array+0x24>
 800049c:	4d0b      	ldr	r5, [pc, #44]	; (80004cc <__libc_init_array+0x40>)
 800049e:	4c0c      	ldr	r4, [pc, #48]	; (80004d0 <__libc_init_array+0x44>)
 80004a0:	f001 f81c 	bl	80014dc <_init>
 80004a4:	1b64      	subs	r4, r4, r5
 80004a6:	10a4      	asrs	r4, r4, #2
 80004a8:	2600      	movs	r6, #0
 80004aa:	42a6      	cmp	r6, r4
 80004ac:	d105      	bne.n	80004ba <__libc_init_array+0x2e>
 80004ae:	bd70      	pop	{r4, r5, r6, pc}
 80004b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80004b4:	4798      	blx	r3
 80004b6:	3601      	adds	r6, #1
 80004b8:	e7ee      	b.n	8000498 <__libc_init_array+0xc>
 80004ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80004be:	4798      	blx	r3
 80004c0:	3601      	adds	r6, #1
 80004c2:	e7f2      	b.n	80004aa <__libc_init_array+0x1e>
 80004c4:	080015c0 	.word	0x080015c0
 80004c8:	080015c0 	.word	0x080015c0
 80004cc:	080015c0 	.word	0x080015c0
 80004d0:	080015c4 	.word	0x080015c4

080004d4 <memset>:
 80004d4:	4402      	add	r2, r0
 80004d6:	4603      	mov	r3, r0
 80004d8:	4293      	cmp	r3, r2
 80004da:	d100      	bne.n	80004de <memset+0xa>
 80004dc:	4770      	bx	lr
 80004de:	f803 1b01 	strb.w	r1, [r3], #1
 80004e2:	e7f9      	b.n	80004d8 <memset+0x4>

080004e4 <iprintf>:
 80004e4:	b40f      	push	{r0, r1, r2, r3}
 80004e6:	4b0a      	ldr	r3, [pc, #40]	; (8000510 <iprintf+0x2c>)
 80004e8:	b513      	push	{r0, r1, r4, lr}
 80004ea:	681c      	ldr	r4, [r3, #0]
 80004ec:	b124      	cbz	r4, 80004f8 <iprintf+0x14>
 80004ee:	69a3      	ldr	r3, [r4, #24]
 80004f0:	b913      	cbnz	r3, 80004f8 <iprintf+0x14>
 80004f2:	4620      	mov	r0, r4
 80004f4:	f000 fa5a 	bl	80009ac <__sinit>
 80004f8:	ab05      	add	r3, sp, #20
 80004fa:	9a04      	ldr	r2, [sp, #16]
 80004fc:	68a1      	ldr	r1, [r4, #8]
 80004fe:	9301      	str	r3, [sp, #4]
 8000500:	4620      	mov	r0, r4
 8000502:	f000 fc5f 	bl	8000dc4 <_vfiprintf_r>
 8000506:	b002      	add	sp, #8
 8000508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800050c:	b004      	add	sp, #16
 800050e:	4770      	bx	lr
 8000510:	20000000 	.word	0x20000000

08000514 <_puts_r>:
 8000514:	b570      	push	{r4, r5, r6, lr}
 8000516:	460e      	mov	r6, r1
 8000518:	4605      	mov	r5, r0
 800051a:	b118      	cbz	r0, 8000524 <_puts_r+0x10>
 800051c:	6983      	ldr	r3, [r0, #24]
 800051e:	b90b      	cbnz	r3, 8000524 <_puts_r+0x10>
 8000520:	f000 fa44 	bl	80009ac <__sinit>
 8000524:	69ab      	ldr	r3, [r5, #24]
 8000526:	68ac      	ldr	r4, [r5, #8]
 8000528:	b913      	cbnz	r3, 8000530 <_puts_r+0x1c>
 800052a:	4628      	mov	r0, r5
 800052c:	f000 fa3e 	bl	80009ac <__sinit>
 8000530:	4b2c      	ldr	r3, [pc, #176]	; (80005e4 <_puts_r+0xd0>)
 8000532:	429c      	cmp	r4, r3
 8000534:	d120      	bne.n	8000578 <_puts_r+0x64>
 8000536:	686c      	ldr	r4, [r5, #4]
 8000538:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800053a:	07db      	lsls	r3, r3, #31
 800053c:	d405      	bmi.n	800054a <_puts_r+0x36>
 800053e:	89a3      	ldrh	r3, [r4, #12]
 8000540:	0598      	lsls	r0, r3, #22
 8000542:	d402      	bmi.n	800054a <_puts_r+0x36>
 8000544:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000546:	f000 facf 	bl	8000ae8 <__retarget_lock_acquire_recursive>
 800054a:	89a3      	ldrh	r3, [r4, #12]
 800054c:	0719      	lsls	r1, r3, #28
 800054e:	d51d      	bpl.n	800058c <_puts_r+0x78>
 8000550:	6923      	ldr	r3, [r4, #16]
 8000552:	b1db      	cbz	r3, 800058c <_puts_r+0x78>
 8000554:	3e01      	subs	r6, #1
 8000556:	68a3      	ldr	r3, [r4, #8]
 8000558:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800055c:	3b01      	subs	r3, #1
 800055e:	60a3      	str	r3, [r4, #8]
 8000560:	bb39      	cbnz	r1, 80005b2 <_puts_r+0x9e>
 8000562:	2b00      	cmp	r3, #0
 8000564:	da38      	bge.n	80005d8 <_puts_r+0xc4>
 8000566:	4622      	mov	r2, r4
 8000568:	210a      	movs	r1, #10
 800056a:	4628      	mov	r0, r5
 800056c:	f000 f848 	bl	8000600 <__swbuf_r>
 8000570:	3001      	adds	r0, #1
 8000572:	d011      	beq.n	8000598 <_puts_r+0x84>
 8000574:	250a      	movs	r5, #10
 8000576:	e011      	b.n	800059c <_puts_r+0x88>
 8000578:	4b1b      	ldr	r3, [pc, #108]	; (80005e8 <_puts_r+0xd4>)
 800057a:	429c      	cmp	r4, r3
 800057c:	d101      	bne.n	8000582 <_puts_r+0x6e>
 800057e:	68ac      	ldr	r4, [r5, #8]
 8000580:	e7da      	b.n	8000538 <_puts_r+0x24>
 8000582:	4b1a      	ldr	r3, [pc, #104]	; (80005ec <_puts_r+0xd8>)
 8000584:	429c      	cmp	r4, r3
 8000586:	bf08      	it	eq
 8000588:	68ec      	ldreq	r4, [r5, #12]
 800058a:	e7d5      	b.n	8000538 <_puts_r+0x24>
 800058c:	4621      	mov	r1, r4
 800058e:	4628      	mov	r0, r5
 8000590:	f000 f888 	bl	80006a4 <__swsetup_r>
 8000594:	2800      	cmp	r0, #0
 8000596:	d0dd      	beq.n	8000554 <_puts_r+0x40>
 8000598:	f04f 35ff 	mov.w	r5, #4294967295
 800059c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800059e:	07da      	lsls	r2, r3, #31
 80005a0:	d405      	bmi.n	80005ae <_puts_r+0x9a>
 80005a2:	89a3      	ldrh	r3, [r4, #12]
 80005a4:	059b      	lsls	r3, r3, #22
 80005a6:	d402      	bmi.n	80005ae <_puts_r+0x9a>
 80005a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005aa:	f000 fa9e 	bl	8000aea <__retarget_lock_release_recursive>
 80005ae:	4628      	mov	r0, r5
 80005b0:	bd70      	pop	{r4, r5, r6, pc}
 80005b2:	2b00      	cmp	r3, #0
 80005b4:	da04      	bge.n	80005c0 <_puts_r+0xac>
 80005b6:	69a2      	ldr	r2, [r4, #24]
 80005b8:	429a      	cmp	r2, r3
 80005ba:	dc06      	bgt.n	80005ca <_puts_r+0xb6>
 80005bc:	290a      	cmp	r1, #10
 80005be:	d004      	beq.n	80005ca <_puts_r+0xb6>
 80005c0:	6823      	ldr	r3, [r4, #0]
 80005c2:	1c5a      	adds	r2, r3, #1
 80005c4:	6022      	str	r2, [r4, #0]
 80005c6:	7019      	strb	r1, [r3, #0]
 80005c8:	e7c5      	b.n	8000556 <_puts_r+0x42>
 80005ca:	4622      	mov	r2, r4
 80005cc:	4628      	mov	r0, r5
 80005ce:	f000 f817 	bl	8000600 <__swbuf_r>
 80005d2:	3001      	adds	r0, #1
 80005d4:	d1bf      	bne.n	8000556 <_puts_r+0x42>
 80005d6:	e7df      	b.n	8000598 <_puts_r+0x84>
 80005d8:	6823      	ldr	r3, [r4, #0]
 80005da:	250a      	movs	r5, #10
 80005dc:	1c5a      	adds	r2, r3, #1
 80005de:	6022      	str	r2, [r4, #0]
 80005e0:	701d      	strb	r5, [r3, #0]
 80005e2:	e7db      	b.n	800059c <_puts_r+0x88>
 80005e4:	0800154c 	.word	0x0800154c
 80005e8:	0800156c 	.word	0x0800156c
 80005ec:	0800152c 	.word	0x0800152c

080005f0 <puts>:
 80005f0:	4b02      	ldr	r3, [pc, #8]	; (80005fc <puts+0xc>)
 80005f2:	4601      	mov	r1, r0
 80005f4:	6818      	ldr	r0, [r3, #0]
 80005f6:	f7ff bf8d 	b.w	8000514 <_puts_r>
 80005fa:	bf00      	nop
 80005fc:	20000000 	.word	0x20000000

08000600 <__swbuf_r>:
 8000600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000602:	460e      	mov	r6, r1
 8000604:	4614      	mov	r4, r2
 8000606:	4605      	mov	r5, r0
 8000608:	b118      	cbz	r0, 8000612 <__swbuf_r+0x12>
 800060a:	6983      	ldr	r3, [r0, #24]
 800060c:	b90b      	cbnz	r3, 8000612 <__swbuf_r+0x12>
 800060e:	f000 f9cd 	bl	80009ac <__sinit>
 8000612:	4b21      	ldr	r3, [pc, #132]	; (8000698 <__swbuf_r+0x98>)
 8000614:	429c      	cmp	r4, r3
 8000616:	d12b      	bne.n	8000670 <__swbuf_r+0x70>
 8000618:	686c      	ldr	r4, [r5, #4]
 800061a:	69a3      	ldr	r3, [r4, #24]
 800061c:	60a3      	str	r3, [r4, #8]
 800061e:	89a3      	ldrh	r3, [r4, #12]
 8000620:	071a      	lsls	r2, r3, #28
 8000622:	d52f      	bpl.n	8000684 <__swbuf_r+0x84>
 8000624:	6923      	ldr	r3, [r4, #16]
 8000626:	b36b      	cbz	r3, 8000684 <__swbuf_r+0x84>
 8000628:	6923      	ldr	r3, [r4, #16]
 800062a:	6820      	ldr	r0, [r4, #0]
 800062c:	1ac0      	subs	r0, r0, r3
 800062e:	6963      	ldr	r3, [r4, #20]
 8000630:	b2f6      	uxtb	r6, r6
 8000632:	4283      	cmp	r3, r0
 8000634:	4637      	mov	r7, r6
 8000636:	dc04      	bgt.n	8000642 <__swbuf_r+0x42>
 8000638:	4621      	mov	r1, r4
 800063a:	4628      	mov	r0, r5
 800063c:	f000 f922 	bl	8000884 <_fflush_r>
 8000640:	bb30      	cbnz	r0, 8000690 <__swbuf_r+0x90>
 8000642:	68a3      	ldr	r3, [r4, #8]
 8000644:	3b01      	subs	r3, #1
 8000646:	60a3      	str	r3, [r4, #8]
 8000648:	6823      	ldr	r3, [r4, #0]
 800064a:	1c5a      	adds	r2, r3, #1
 800064c:	6022      	str	r2, [r4, #0]
 800064e:	701e      	strb	r6, [r3, #0]
 8000650:	6963      	ldr	r3, [r4, #20]
 8000652:	3001      	adds	r0, #1
 8000654:	4283      	cmp	r3, r0
 8000656:	d004      	beq.n	8000662 <__swbuf_r+0x62>
 8000658:	89a3      	ldrh	r3, [r4, #12]
 800065a:	07db      	lsls	r3, r3, #31
 800065c:	d506      	bpl.n	800066c <__swbuf_r+0x6c>
 800065e:	2e0a      	cmp	r6, #10
 8000660:	d104      	bne.n	800066c <__swbuf_r+0x6c>
 8000662:	4621      	mov	r1, r4
 8000664:	4628      	mov	r0, r5
 8000666:	f000 f90d 	bl	8000884 <_fflush_r>
 800066a:	b988      	cbnz	r0, 8000690 <__swbuf_r+0x90>
 800066c:	4638      	mov	r0, r7
 800066e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000670:	4b0a      	ldr	r3, [pc, #40]	; (800069c <__swbuf_r+0x9c>)
 8000672:	429c      	cmp	r4, r3
 8000674:	d101      	bne.n	800067a <__swbuf_r+0x7a>
 8000676:	68ac      	ldr	r4, [r5, #8]
 8000678:	e7cf      	b.n	800061a <__swbuf_r+0x1a>
 800067a:	4b09      	ldr	r3, [pc, #36]	; (80006a0 <__swbuf_r+0xa0>)
 800067c:	429c      	cmp	r4, r3
 800067e:	bf08      	it	eq
 8000680:	68ec      	ldreq	r4, [r5, #12]
 8000682:	e7ca      	b.n	800061a <__swbuf_r+0x1a>
 8000684:	4621      	mov	r1, r4
 8000686:	4628      	mov	r0, r5
 8000688:	f000 f80c 	bl	80006a4 <__swsetup_r>
 800068c:	2800      	cmp	r0, #0
 800068e:	d0cb      	beq.n	8000628 <__swbuf_r+0x28>
 8000690:	f04f 37ff 	mov.w	r7, #4294967295
 8000694:	e7ea      	b.n	800066c <__swbuf_r+0x6c>
 8000696:	bf00      	nop
 8000698:	0800154c 	.word	0x0800154c
 800069c:	0800156c 	.word	0x0800156c
 80006a0:	0800152c 	.word	0x0800152c

080006a4 <__swsetup_r>:
 80006a4:	4b32      	ldr	r3, [pc, #200]	; (8000770 <__swsetup_r+0xcc>)
 80006a6:	b570      	push	{r4, r5, r6, lr}
 80006a8:	681d      	ldr	r5, [r3, #0]
 80006aa:	4606      	mov	r6, r0
 80006ac:	460c      	mov	r4, r1
 80006ae:	b125      	cbz	r5, 80006ba <__swsetup_r+0x16>
 80006b0:	69ab      	ldr	r3, [r5, #24]
 80006b2:	b913      	cbnz	r3, 80006ba <__swsetup_r+0x16>
 80006b4:	4628      	mov	r0, r5
 80006b6:	f000 f979 	bl	80009ac <__sinit>
 80006ba:	4b2e      	ldr	r3, [pc, #184]	; (8000774 <__swsetup_r+0xd0>)
 80006bc:	429c      	cmp	r4, r3
 80006be:	d10f      	bne.n	80006e0 <__swsetup_r+0x3c>
 80006c0:	686c      	ldr	r4, [r5, #4]
 80006c2:	89a3      	ldrh	r3, [r4, #12]
 80006c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006c8:	0719      	lsls	r1, r3, #28
 80006ca:	d42c      	bmi.n	8000726 <__swsetup_r+0x82>
 80006cc:	06dd      	lsls	r5, r3, #27
 80006ce:	d411      	bmi.n	80006f4 <__swsetup_r+0x50>
 80006d0:	2309      	movs	r3, #9
 80006d2:	6033      	str	r3, [r6, #0]
 80006d4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006d8:	81a3      	strh	r3, [r4, #12]
 80006da:	f04f 30ff 	mov.w	r0, #4294967295
 80006de:	e03e      	b.n	800075e <__swsetup_r+0xba>
 80006e0:	4b25      	ldr	r3, [pc, #148]	; (8000778 <__swsetup_r+0xd4>)
 80006e2:	429c      	cmp	r4, r3
 80006e4:	d101      	bne.n	80006ea <__swsetup_r+0x46>
 80006e6:	68ac      	ldr	r4, [r5, #8]
 80006e8:	e7eb      	b.n	80006c2 <__swsetup_r+0x1e>
 80006ea:	4b24      	ldr	r3, [pc, #144]	; (800077c <__swsetup_r+0xd8>)
 80006ec:	429c      	cmp	r4, r3
 80006ee:	bf08      	it	eq
 80006f0:	68ec      	ldreq	r4, [r5, #12]
 80006f2:	e7e6      	b.n	80006c2 <__swsetup_r+0x1e>
 80006f4:	0758      	lsls	r0, r3, #29
 80006f6:	d512      	bpl.n	800071e <__swsetup_r+0x7a>
 80006f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006fa:	b141      	cbz	r1, 800070e <__swsetup_r+0x6a>
 80006fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000700:	4299      	cmp	r1, r3
 8000702:	d002      	beq.n	800070a <__swsetup_r+0x66>
 8000704:	4630      	mov	r0, r6
 8000706:	f000 fa57 	bl	8000bb8 <_free_r>
 800070a:	2300      	movs	r3, #0
 800070c:	6363      	str	r3, [r4, #52]	; 0x34
 800070e:	89a3      	ldrh	r3, [r4, #12]
 8000710:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000714:	81a3      	strh	r3, [r4, #12]
 8000716:	2300      	movs	r3, #0
 8000718:	6063      	str	r3, [r4, #4]
 800071a:	6923      	ldr	r3, [r4, #16]
 800071c:	6023      	str	r3, [r4, #0]
 800071e:	89a3      	ldrh	r3, [r4, #12]
 8000720:	f043 0308 	orr.w	r3, r3, #8
 8000724:	81a3      	strh	r3, [r4, #12]
 8000726:	6923      	ldr	r3, [r4, #16]
 8000728:	b94b      	cbnz	r3, 800073e <__swsetup_r+0x9a>
 800072a:	89a3      	ldrh	r3, [r4, #12]
 800072c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000730:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000734:	d003      	beq.n	800073e <__swsetup_r+0x9a>
 8000736:	4621      	mov	r1, r4
 8000738:	4630      	mov	r0, r6
 800073a:	f000 f9fd 	bl	8000b38 <__smakebuf_r>
 800073e:	89a0      	ldrh	r0, [r4, #12]
 8000740:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000744:	f010 0301 	ands.w	r3, r0, #1
 8000748:	d00a      	beq.n	8000760 <__swsetup_r+0xbc>
 800074a:	2300      	movs	r3, #0
 800074c:	60a3      	str	r3, [r4, #8]
 800074e:	6963      	ldr	r3, [r4, #20]
 8000750:	425b      	negs	r3, r3
 8000752:	61a3      	str	r3, [r4, #24]
 8000754:	6923      	ldr	r3, [r4, #16]
 8000756:	b943      	cbnz	r3, 800076a <__swsetup_r+0xc6>
 8000758:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800075c:	d1ba      	bne.n	80006d4 <__swsetup_r+0x30>
 800075e:	bd70      	pop	{r4, r5, r6, pc}
 8000760:	0781      	lsls	r1, r0, #30
 8000762:	bf58      	it	pl
 8000764:	6963      	ldrpl	r3, [r4, #20]
 8000766:	60a3      	str	r3, [r4, #8]
 8000768:	e7f4      	b.n	8000754 <__swsetup_r+0xb0>
 800076a:	2000      	movs	r0, #0
 800076c:	e7f7      	b.n	800075e <__swsetup_r+0xba>
 800076e:	bf00      	nop
 8000770:	20000000 	.word	0x20000000
 8000774:	0800154c 	.word	0x0800154c
 8000778:	0800156c 	.word	0x0800156c
 800077c:	0800152c 	.word	0x0800152c

08000780 <__sflush_r>:
 8000780:	898a      	ldrh	r2, [r1, #12]
 8000782:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000784:	4605      	mov	r5, r0
 8000786:	0710      	lsls	r0, r2, #28
 8000788:	460c      	mov	r4, r1
 800078a:	d457      	bmi.n	800083c <__sflush_r+0xbc>
 800078c:	684b      	ldr	r3, [r1, #4]
 800078e:	2b00      	cmp	r3, #0
 8000790:	dc04      	bgt.n	800079c <__sflush_r+0x1c>
 8000792:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000794:	2b00      	cmp	r3, #0
 8000796:	dc01      	bgt.n	800079c <__sflush_r+0x1c>
 8000798:	2000      	movs	r0, #0
 800079a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800079c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800079e:	2e00      	cmp	r6, #0
 80007a0:	d0fa      	beq.n	8000798 <__sflush_r+0x18>
 80007a2:	2300      	movs	r3, #0
 80007a4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80007a8:	682f      	ldr	r7, [r5, #0]
 80007aa:	602b      	str	r3, [r5, #0]
 80007ac:	d032      	beq.n	8000814 <__sflush_r+0x94>
 80007ae:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007b0:	89a3      	ldrh	r3, [r4, #12]
 80007b2:	075a      	lsls	r2, r3, #29
 80007b4:	d505      	bpl.n	80007c2 <__sflush_r+0x42>
 80007b6:	6863      	ldr	r3, [r4, #4]
 80007b8:	1ac0      	subs	r0, r0, r3
 80007ba:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007bc:	b10b      	cbz	r3, 80007c2 <__sflush_r+0x42>
 80007be:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007c0:	1ac0      	subs	r0, r0, r3
 80007c2:	2300      	movs	r3, #0
 80007c4:	4602      	mov	r2, r0
 80007c6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007c8:	6a21      	ldr	r1, [r4, #32]
 80007ca:	4628      	mov	r0, r5
 80007cc:	47b0      	blx	r6
 80007ce:	1c43      	adds	r3, r0, #1
 80007d0:	89a3      	ldrh	r3, [r4, #12]
 80007d2:	d106      	bne.n	80007e2 <__sflush_r+0x62>
 80007d4:	6829      	ldr	r1, [r5, #0]
 80007d6:	291d      	cmp	r1, #29
 80007d8:	d82c      	bhi.n	8000834 <__sflush_r+0xb4>
 80007da:	4a29      	ldr	r2, [pc, #164]	; (8000880 <__sflush_r+0x100>)
 80007dc:	40ca      	lsrs	r2, r1
 80007de:	07d6      	lsls	r6, r2, #31
 80007e0:	d528      	bpl.n	8000834 <__sflush_r+0xb4>
 80007e2:	2200      	movs	r2, #0
 80007e4:	6062      	str	r2, [r4, #4]
 80007e6:	04d9      	lsls	r1, r3, #19
 80007e8:	6922      	ldr	r2, [r4, #16]
 80007ea:	6022      	str	r2, [r4, #0]
 80007ec:	d504      	bpl.n	80007f8 <__sflush_r+0x78>
 80007ee:	1c42      	adds	r2, r0, #1
 80007f0:	d101      	bne.n	80007f6 <__sflush_r+0x76>
 80007f2:	682b      	ldr	r3, [r5, #0]
 80007f4:	b903      	cbnz	r3, 80007f8 <__sflush_r+0x78>
 80007f6:	6560      	str	r0, [r4, #84]	; 0x54
 80007f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007fa:	602f      	str	r7, [r5, #0]
 80007fc:	2900      	cmp	r1, #0
 80007fe:	d0cb      	beq.n	8000798 <__sflush_r+0x18>
 8000800:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000804:	4299      	cmp	r1, r3
 8000806:	d002      	beq.n	800080e <__sflush_r+0x8e>
 8000808:	4628      	mov	r0, r5
 800080a:	f000 f9d5 	bl	8000bb8 <_free_r>
 800080e:	2000      	movs	r0, #0
 8000810:	6360      	str	r0, [r4, #52]	; 0x34
 8000812:	e7c2      	b.n	800079a <__sflush_r+0x1a>
 8000814:	6a21      	ldr	r1, [r4, #32]
 8000816:	2301      	movs	r3, #1
 8000818:	4628      	mov	r0, r5
 800081a:	47b0      	blx	r6
 800081c:	1c41      	adds	r1, r0, #1
 800081e:	d1c7      	bne.n	80007b0 <__sflush_r+0x30>
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b00      	cmp	r3, #0
 8000824:	d0c4      	beq.n	80007b0 <__sflush_r+0x30>
 8000826:	2b1d      	cmp	r3, #29
 8000828:	d001      	beq.n	800082e <__sflush_r+0xae>
 800082a:	2b16      	cmp	r3, #22
 800082c:	d101      	bne.n	8000832 <__sflush_r+0xb2>
 800082e:	602f      	str	r7, [r5, #0]
 8000830:	e7b2      	b.n	8000798 <__sflush_r+0x18>
 8000832:	89a3      	ldrh	r3, [r4, #12]
 8000834:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000838:	81a3      	strh	r3, [r4, #12]
 800083a:	e7ae      	b.n	800079a <__sflush_r+0x1a>
 800083c:	690f      	ldr	r7, [r1, #16]
 800083e:	2f00      	cmp	r7, #0
 8000840:	d0aa      	beq.n	8000798 <__sflush_r+0x18>
 8000842:	0793      	lsls	r3, r2, #30
 8000844:	680e      	ldr	r6, [r1, #0]
 8000846:	bf08      	it	eq
 8000848:	694b      	ldreq	r3, [r1, #20]
 800084a:	600f      	str	r7, [r1, #0]
 800084c:	bf18      	it	ne
 800084e:	2300      	movne	r3, #0
 8000850:	1bf6      	subs	r6, r6, r7
 8000852:	608b      	str	r3, [r1, #8]
 8000854:	2e00      	cmp	r6, #0
 8000856:	dd9f      	ble.n	8000798 <__sflush_r+0x18>
 8000858:	6a21      	ldr	r1, [r4, #32]
 800085a:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800085e:	4633      	mov	r3, r6
 8000860:	463a      	mov	r2, r7
 8000862:	4628      	mov	r0, r5
 8000864:	47e0      	blx	ip
 8000866:	2800      	cmp	r0, #0
 8000868:	dc06      	bgt.n	8000878 <__sflush_r+0xf8>
 800086a:	89a3      	ldrh	r3, [r4, #12]
 800086c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000870:	81a3      	strh	r3, [r4, #12]
 8000872:	f04f 30ff 	mov.w	r0, #4294967295
 8000876:	e790      	b.n	800079a <__sflush_r+0x1a>
 8000878:	4407      	add	r7, r0
 800087a:	1a36      	subs	r6, r6, r0
 800087c:	e7ea      	b.n	8000854 <__sflush_r+0xd4>
 800087e:	bf00      	nop
 8000880:	20400001 	.word	0x20400001

08000884 <_fflush_r>:
 8000884:	b538      	push	{r3, r4, r5, lr}
 8000886:	690b      	ldr	r3, [r1, #16]
 8000888:	4605      	mov	r5, r0
 800088a:	460c      	mov	r4, r1
 800088c:	b913      	cbnz	r3, 8000894 <_fflush_r+0x10>
 800088e:	2500      	movs	r5, #0
 8000890:	4628      	mov	r0, r5
 8000892:	bd38      	pop	{r3, r4, r5, pc}
 8000894:	b118      	cbz	r0, 800089e <_fflush_r+0x1a>
 8000896:	6983      	ldr	r3, [r0, #24]
 8000898:	b90b      	cbnz	r3, 800089e <_fflush_r+0x1a>
 800089a:	f000 f887 	bl	80009ac <__sinit>
 800089e:	4b14      	ldr	r3, [pc, #80]	; (80008f0 <_fflush_r+0x6c>)
 80008a0:	429c      	cmp	r4, r3
 80008a2:	d11b      	bne.n	80008dc <_fflush_r+0x58>
 80008a4:	686c      	ldr	r4, [r5, #4]
 80008a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008aa:	2b00      	cmp	r3, #0
 80008ac:	d0ef      	beq.n	800088e <_fflush_r+0xa>
 80008ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008b0:	07d0      	lsls	r0, r2, #31
 80008b2:	d404      	bmi.n	80008be <_fflush_r+0x3a>
 80008b4:	0599      	lsls	r1, r3, #22
 80008b6:	d402      	bmi.n	80008be <_fflush_r+0x3a>
 80008b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008ba:	f000 f915 	bl	8000ae8 <__retarget_lock_acquire_recursive>
 80008be:	4628      	mov	r0, r5
 80008c0:	4621      	mov	r1, r4
 80008c2:	f7ff ff5d 	bl	8000780 <__sflush_r>
 80008c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008c8:	07da      	lsls	r2, r3, #31
 80008ca:	4605      	mov	r5, r0
 80008cc:	d4e0      	bmi.n	8000890 <_fflush_r+0xc>
 80008ce:	89a3      	ldrh	r3, [r4, #12]
 80008d0:	059b      	lsls	r3, r3, #22
 80008d2:	d4dd      	bmi.n	8000890 <_fflush_r+0xc>
 80008d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008d6:	f000 f908 	bl	8000aea <__retarget_lock_release_recursive>
 80008da:	e7d9      	b.n	8000890 <_fflush_r+0xc>
 80008dc:	4b05      	ldr	r3, [pc, #20]	; (80008f4 <_fflush_r+0x70>)
 80008de:	429c      	cmp	r4, r3
 80008e0:	d101      	bne.n	80008e6 <_fflush_r+0x62>
 80008e2:	68ac      	ldr	r4, [r5, #8]
 80008e4:	e7df      	b.n	80008a6 <_fflush_r+0x22>
 80008e6:	4b04      	ldr	r3, [pc, #16]	; (80008f8 <_fflush_r+0x74>)
 80008e8:	429c      	cmp	r4, r3
 80008ea:	bf08      	it	eq
 80008ec:	68ec      	ldreq	r4, [r5, #12]
 80008ee:	e7da      	b.n	80008a6 <_fflush_r+0x22>
 80008f0:	0800154c 	.word	0x0800154c
 80008f4:	0800156c 	.word	0x0800156c
 80008f8:	0800152c 	.word	0x0800152c

080008fc <std>:
 80008fc:	2300      	movs	r3, #0
 80008fe:	b510      	push	{r4, lr}
 8000900:	4604      	mov	r4, r0
 8000902:	e9c0 3300 	strd	r3, r3, [r0]
 8000906:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800090a:	6083      	str	r3, [r0, #8]
 800090c:	8181      	strh	r1, [r0, #12]
 800090e:	6643      	str	r3, [r0, #100]	; 0x64
 8000910:	81c2      	strh	r2, [r0, #14]
 8000912:	6183      	str	r3, [r0, #24]
 8000914:	4619      	mov	r1, r3
 8000916:	2208      	movs	r2, #8
 8000918:	305c      	adds	r0, #92	; 0x5c
 800091a:	f7ff fddb 	bl	80004d4 <memset>
 800091e:	4b05      	ldr	r3, [pc, #20]	; (8000934 <std+0x38>)
 8000920:	6263      	str	r3, [r4, #36]	; 0x24
 8000922:	4b05      	ldr	r3, [pc, #20]	; (8000938 <std+0x3c>)
 8000924:	62a3      	str	r3, [r4, #40]	; 0x28
 8000926:	4b05      	ldr	r3, [pc, #20]	; (800093c <std+0x40>)
 8000928:	62e3      	str	r3, [r4, #44]	; 0x2c
 800092a:	4b05      	ldr	r3, [pc, #20]	; (8000940 <std+0x44>)
 800092c:	6224      	str	r4, [r4, #32]
 800092e:	6323      	str	r3, [r4, #48]	; 0x30
 8000930:	bd10      	pop	{r4, pc}
 8000932:	bf00      	nop
 8000934:	0800136d 	.word	0x0800136d
 8000938:	0800138f 	.word	0x0800138f
 800093c:	080013c7 	.word	0x080013c7
 8000940:	080013eb 	.word	0x080013eb

08000944 <_cleanup_r>:
 8000944:	4901      	ldr	r1, [pc, #4]	; (800094c <_cleanup_r+0x8>)
 8000946:	f000 b8af 	b.w	8000aa8 <_fwalk_reent>
 800094a:	bf00      	nop
 800094c:	08000885 	.word	0x08000885

08000950 <__sfmoreglue>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	2268      	movs	r2, #104	; 0x68
 8000954:	1e4d      	subs	r5, r1, #1
 8000956:	4355      	muls	r5, r2
 8000958:	460e      	mov	r6, r1
 800095a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800095e:	f000 f995 	bl	8000c8c <_malloc_r>
 8000962:	4604      	mov	r4, r0
 8000964:	b140      	cbz	r0, 8000978 <__sfmoreglue+0x28>
 8000966:	2100      	movs	r1, #0
 8000968:	e9c0 1600 	strd	r1, r6, [r0]
 800096c:	300c      	adds	r0, #12
 800096e:	60a0      	str	r0, [r4, #8]
 8000970:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000974:	f7ff fdae 	bl	80004d4 <memset>
 8000978:	4620      	mov	r0, r4
 800097a:	bd70      	pop	{r4, r5, r6, pc}

0800097c <__sfp_lock_acquire>:
 800097c:	4801      	ldr	r0, [pc, #4]	; (8000984 <__sfp_lock_acquire+0x8>)
 800097e:	f000 b8b3 	b.w	8000ae8 <__retarget_lock_acquire_recursive>
 8000982:	bf00      	nop
 8000984:	20000085 	.word	0x20000085

08000988 <__sfp_lock_release>:
 8000988:	4801      	ldr	r0, [pc, #4]	; (8000990 <__sfp_lock_release+0x8>)
 800098a:	f000 b8ae 	b.w	8000aea <__retarget_lock_release_recursive>
 800098e:	bf00      	nop
 8000990:	20000085 	.word	0x20000085

08000994 <__sinit_lock_acquire>:
 8000994:	4801      	ldr	r0, [pc, #4]	; (800099c <__sinit_lock_acquire+0x8>)
 8000996:	f000 b8a7 	b.w	8000ae8 <__retarget_lock_acquire_recursive>
 800099a:	bf00      	nop
 800099c:	20000086 	.word	0x20000086

080009a0 <__sinit_lock_release>:
 80009a0:	4801      	ldr	r0, [pc, #4]	; (80009a8 <__sinit_lock_release+0x8>)
 80009a2:	f000 b8a2 	b.w	8000aea <__retarget_lock_release_recursive>
 80009a6:	bf00      	nop
 80009a8:	20000086 	.word	0x20000086

080009ac <__sinit>:
 80009ac:	b510      	push	{r4, lr}
 80009ae:	4604      	mov	r4, r0
 80009b0:	f7ff fff0 	bl	8000994 <__sinit_lock_acquire>
 80009b4:	69a3      	ldr	r3, [r4, #24]
 80009b6:	b11b      	cbz	r3, 80009c0 <__sinit+0x14>
 80009b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009bc:	f7ff bff0 	b.w	80009a0 <__sinit_lock_release>
 80009c0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009c4:	6523      	str	r3, [r4, #80]	; 0x50
 80009c6:	4b13      	ldr	r3, [pc, #76]	; (8000a14 <__sinit+0x68>)
 80009c8:	4a13      	ldr	r2, [pc, #76]	; (8000a18 <__sinit+0x6c>)
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	62a2      	str	r2, [r4, #40]	; 0x28
 80009ce:	42a3      	cmp	r3, r4
 80009d0:	bf04      	itt	eq
 80009d2:	2301      	moveq	r3, #1
 80009d4:	61a3      	streq	r3, [r4, #24]
 80009d6:	4620      	mov	r0, r4
 80009d8:	f000 f820 	bl	8000a1c <__sfp>
 80009dc:	6060      	str	r0, [r4, #4]
 80009de:	4620      	mov	r0, r4
 80009e0:	f000 f81c 	bl	8000a1c <__sfp>
 80009e4:	60a0      	str	r0, [r4, #8]
 80009e6:	4620      	mov	r0, r4
 80009e8:	f000 f818 	bl	8000a1c <__sfp>
 80009ec:	2200      	movs	r2, #0
 80009ee:	60e0      	str	r0, [r4, #12]
 80009f0:	2104      	movs	r1, #4
 80009f2:	6860      	ldr	r0, [r4, #4]
 80009f4:	f7ff ff82 	bl	80008fc <std>
 80009f8:	68a0      	ldr	r0, [r4, #8]
 80009fa:	2201      	movs	r2, #1
 80009fc:	2109      	movs	r1, #9
 80009fe:	f7ff ff7d 	bl	80008fc <std>
 8000a02:	68e0      	ldr	r0, [r4, #12]
 8000a04:	2202      	movs	r2, #2
 8000a06:	2112      	movs	r1, #18
 8000a08:	f7ff ff78 	bl	80008fc <std>
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	61a3      	str	r3, [r4, #24]
 8000a10:	e7d2      	b.n	80009b8 <__sinit+0xc>
 8000a12:	bf00      	nop
 8000a14:	08001528 	.word	0x08001528
 8000a18:	08000945 	.word	0x08000945

08000a1c <__sfp>:
 8000a1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a1e:	4607      	mov	r7, r0
 8000a20:	f7ff ffac 	bl	800097c <__sfp_lock_acquire>
 8000a24:	4b1e      	ldr	r3, [pc, #120]	; (8000aa0 <__sfp+0x84>)
 8000a26:	681e      	ldr	r6, [r3, #0]
 8000a28:	69b3      	ldr	r3, [r6, #24]
 8000a2a:	b913      	cbnz	r3, 8000a32 <__sfp+0x16>
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	f7ff ffbd 	bl	80009ac <__sinit>
 8000a32:	3648      	adds	r6, #72	; 0x48
 8000a34:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a38:	3b01      	subs	r3, #1
 8000a3a:	d503      	bpl.n	8000a44 <__sfp+0x28>
 8000a3c:	6833      	ldr	r3, [r6, #0]
 8000a3e:	b30b      	cbz	r3, 8000a84 <__sfp+0x68>
 8000a40:	6836      	ldr	r6, [r6, #0]
 8000a42:	e7f7      	b.n	8000a34 <__sfp+0x18>
 8000a44:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a48:	b9d5      	cbnz	r5, 8000a80 <__sfp+0x64>
 8000a4a:	4b16      	ldr	r3, [pc, #88]	; (8000aa4 <__sfp+0x88>)
 8000a4c:	60e3      	str	r3, [r4, #12]
 8000a4e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a52:	6665      	str	r5, [r4, #100]	; 0x64
 8000a54:	f000 f847 	bl	8000ae6 <__retarget_lock_init_recursive>
 8000a58:	f7ff ff96 	bl	8000988 <__sfp_lock_release>
 8000a5c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a60:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a64:	6025      	str	r5, [r4, #0]
 8000a66:	61a5      	str	r5, [r4, #24]
 8000a68:	2208      	movs	r2, #8
 8000a6a:	4629      	mov	r1, r5
 8000a6c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a70:	f7ff fd30 	bl	80004d4 <memset>
 8000a74:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a78:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a7c:	4620      	mov	r0, r4
 8000a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a80:	3468      	adds	r4, #104	; 0x68
 8000a82:	e7d9      	b.n	8000a38 <__sfp+0x1c>
 8000a84:	2104      	movs	r1, #4
 8000a86:	4638      	mov	r0, r7
 8000a88:	f7ff ff62 	bl	8000950 <__sfmoreglue>
 8000a8c:	4604      	mov	r4, r0
 8000a8e:	6030      	str	r0, [r6, #0]
 8000a90:	2800      	cmp	r0, #0
 8000a92:	d1d5      	bne.n	8000a40 <__sfp+0x24>
 8000a94:	f7ff ff78 	bl	8000988 <__sfp_lock_release>
 8000a98:	230c      	movs	r3, #12
 8000a9a:	603b      	str	r3, [r7, #0]
 8000a9c:	e7ee      	b.n	8000a7c <__sfp+0x60>
 8000a9e:	bf00      	nop
 8000aa0:	08001528 	.word	0x08001528
 8000aa4:	ffff0001 	.word	0xffff0001

08000aa8 <_fwalk_reent>:
 8000aa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000aac:	4606      	mov	r6, r0
 8000aae:	4688      	mov	r8, r1
 8000ab0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000ab4:	2700      	movs	r7, #0
 8000ab6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000aba:	f1b9 0901 	subs.w	r9, r9, #1
 8000abe:	d505      	bpl.n	8000acc <_fwalk_reent+0x24>
 8000ac0:	6824      	ldr	r4, [r4, #0]
 8000ac2:	2c00      	cmp	r4, #0
 8000ac4:	d1f7      	bne.n	8000ab6 <_fwalk_reent+0xe>
 8000ac6:	4638      	mov	r0, r7
 8000ac8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000acc:	89ab      	ldrh	r3, [r5, #12]
 8000ace:	2b01      	cmp	r3, #1
 8000ad0:	d907      	bls.n	8000ae2 <_fwalk_reent+0x3a>
 8000ad2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000ad6:	3301      	adds	r3, #1
 8000ad8:	d003      	beq.n	8000ae2 <_fwalk_reent+0x3a>
 8000ada:	4629      	mov	r1, r5
 8000adc:	4630      	mov	r0, r6
 8000ade:	47c0      	blx	r8
 8000ae0:	4307      	orrs	r7, r0
 8000ae2:	3568      	adds	r5, #104	; 0x68
 8000ae4:	e7e9      	b.n	8000aba <_fwalk_reent+0x12>

08000ae6 <__retarget_lock_init_recursive>:
 8000ae6:	4770      	bx	lr

08000ae8 <__retarget_lock_acquire_recursive>:
 8000ae8:	4770      	bx	lr

08000aea <__retarget_lock_release_recursive>:
 8000aea:	4770      	bx	lr

08000aec <__swhatbuf_r>:
 8000aec:	b570      	push	{r4, r5, r6, lr}
 8000aee:	460e      	mov	r6, r1
 8000af0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000af4:	2900      	cmp	r1, #0
 8000af6:	b096      	sub	sp, #88	; 0x58
 8000af8:	4614      	mov	r4, r2
 8000afa:	461d      	mov	r5, r3
 8000afc:	da08      	bge.n	8000b10 <__swhatbuf_r+0x24>
 8000afe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000b02:	2200      	movs	r2, #0
 8000b04:	602a      	str	r2, [r5, #0]
 8000b06:	061a      	lsls	r2, r3, #24
 8000b08:	d410      	bmi.n	8000b2c <__swhatbuf_r+0x40>
 8000b0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b0e:	e00e      	b.n	8000b2e <__swhatbuf_r+0x42>
 8000b10:	466a      	mov	r2, sp
 8000b12:	f000 fc91 	bl	8001438 <_fstat_r>
 8000b16:	2800      	cmp	r0, #0
 8000b18:	dbf1      	blt.n	8000afe <__swhatbuf_r+0x12>
 8000b1a:	9a01      	ldr	r2, [sp, #4]
 8000b1c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b20:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b24:	425a      	negs	r2, r3
 8000b26:	415a      	adcs	r2, r3
 8000b28:	602a      	str	r2, [r5, #0]
 8000b2a:	e7ee      	b.n	8000b0a <__swhatbuf_r+0x1e>
 8000b2c:	2340      	movs	r3, #64	; 0x40
 8000b2e:	2000      	movs	r0, #0
 8000b30:	6023      	str	r3, [r4, #0]
 8000b32:	b016      	add	sp, #88	; 0x58
 8000b34:	bd70      	pop	{r4, r5, r6, pc}
	...

08000b38 <__smakebuf_r>:
 8000b38:	898b      	ldrh	r3, [r1, #12]
 8000b3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b3c:	079d      	lsls	r5, r3, #30
 8000b3e:	4606      	mov	r6, r0
 8000b40:	460c      	mov	r4, r1
 8000b42:	d507      	bpl.n	8000b54 <__smakebuf_r+0x1c>
 8000b44:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b48:	6023      	str	r3, [r4, #0]
 8000b4a:	6123      	str	r3, [r4, #16]
 8000b4c:	2301      	movs	r3, #1
 8000b4e:	6163      	str	r3, [r4, #20]
 8000b50:	b002      	add	sp, #8
 8000b52:	bd70      	pop	{r4, r5, r6, pc}
 8000b54:	ab01      	add	r3, sp, #4
 8000b56:	466a      	mov	r2, sp
 8000b58:	f7ff ffc8 	bl	8000aec <__swhatbuf_r>
 8000b5c:	9900      	ldr	r1, [sp, #0]
 8000b5e:	4605      	mov	r5, r0
 8000b60:	4630      	mov	r0, r6
 8000b62:	f000 f893 	bl	8000c8c <_malloc_r>
 8000b66:	b948      	cbnz	r0, 8000b7c <__smakebuf_r+0x44>
 8000b68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b6c:	059a      	lsls	r2, r3, #22
 8000b6e:	d4ef      	bmi.n	8000b50 <__smakebuf_r+0x18>
 8000b70:	f023 0303 	bic.w	r3, r3, #3
 8000b74:	f043 0302 	orr.w	r3, r3, #2
 8000b78:	81a3      	strh	r3, [r4, #12]
 8000b7a:	e7e3      	b.n	8000b44 <__smakebuf_r+0xc>
 8000b7c:	4b0d      	ldr	r3, [pc, #52]	; (8000bb4 <__smakebuf_r+0x7c>)
 8000b7e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b80:	89a3      	ldrh	r3, [r4, #12]
 8000b82:	6020      	str	r0, [r4, #0]
 8000b84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b88:	81a3      	strh	r3, [r4, #12]
 8000b8a:	9b00      	ldr	r3, [sp, #0]
 8000b8c:	6163      	str	r3, [r4, #20]
 8000b8e:	9b01      	ldr	r3, [sp, #4]
 8000b90:	6120      	str	r0, [r4, #16]
 8000b92:	b15b      	cbz	r3, 8000bac <__smakebuf_r+0x74>
 8000b94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b98:	4630      	mov	r0, r6
 8000b9a:	f000 fc5f 	bl	800145c <_isatty_r>
 8000b9e:	b128      	cbz	r0, 8000bac <__smakebuf_r+0x74>
 8000ba0:	89a3      	ldrh	r3, [r4, #12]
 8000ba2:	f023 0303 	bic.w	r3, r3, #3
 8000ba6:	f043 0301 	orr.w	r3, r3, #1
 8000baa:	81a3      	strh	r3, [r4, #12]
 8000bac:	89a0      	ldrh	r0, [r4, #12]
 8000bae:	4305      	orrs	r5, r0
 8000bb0:	81a5      	strh	r5, [r4, #12]
 8000bb2:	e7cd      	b.n	8000b50 <__smakebuf_r+0x18>
 8000bb4:	08000945 	.word	0x08000945

08000bb8 <_free_r>:
 8000bb8:	b538      	push	{r3, r4, r5, lr}
 8000bba:	4605      	mov	r5, r0
 8000bbc:	2900      	cmp	r1, #0
 8000bbe:	d041      	beq.n	8000c44 <_free_r+0x8c>
 8000bc0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bc4:	1f0c      	subs	r4, r1, #4
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	bfb8      	it	lt
 8000bca:	18e4      	addlt	r4, r4, r3
 8000bcc:	f000 fc68 	bl	80014a0 <__malloc_lock>
 8000bd0:	4a1d      	ldr	r2, [pc, #116]	; (8000c48 <_free_r+0x90>)
 8000bd2:	6813      	ldr	r3, [r2, #0]
 8000bd4:	b933      	cbnz	r3, 8000be4 <_free_r+0x2c>
 8000bd6:	6063      	str	r3, [r4, #4]
 8000bd8:	6014      	str	r4, [r2, #0]
 8000bda:	4628      	mov	r0, r5
 8000bdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000be0:	f000 bc64 	b.w	80014ac <__malloc_unlock>
 8000be4:	42a3      	cmp	r3, r4
 8000be6:	d908      	bls.n	8000bfa <_free_r+0x42>
 8000be8:	6820      	ldr	r0, [r4, #0]
 8000bea:	1821      	adds	r1, r4, r0
 8000bec:	428b      	cmp	r3, r1
 8000bee:	bf01      	itttt	eq
 8000bf0:	6819      	ldreq	r1, [r3, #0]
 8000bf2:	685b      	ldreq	r3, [r3, #4]
 8000bf4:	1809      	addeq	r1, r1, r0
 8000bf6:	6021      	streq	r1, [r4, #0]
 8000bf8:	e7ed      	b.n	8000bd6 <_free_r+0x1e>
 8000bfa:	461a      	mov	r2, r3
 8000bfc:	685b      	ldr	r3, [r3, #4]
 8000bfe:	b10b      	cbz	r3, 8000c04 <_free_r+0x4c>
 8000c00:	42a3      	cmp	r3, r4
 8000c02:	d9fa      	bls.n	8000bfa <_free_r+0x42>
 8000c04:	6811      	ldr	r1, [r2, #0]
 8000c06:	1850      	adds	r0, r2, r1
 8000c08:	42a0      	cmp	r0, r4
 8000c0a:	d10b      	bne.n	8000c24 <_free_r+0x6c>
 8000c0c:	6820      	ldr	r0, [r4, #0]
 8000c0e:	4401      	add	r1, r0
 8000c10:	1850      	adds	r0, r2, r1
 8000c12:	4283      	cmp	r3, r0
 8000c14:	6011      	str	r1, [r2, #0]
 8000c16:	d1e0      	bne.n	8000bda <_free_r+0x22>
 8000c18:	6818      	ldr	r0, [r3, #0]
 8000c1a:	685b      	ldr	r3, [r3, #4]
 8000c1c:	6053      	str	r3, [r2, #4]
 8000c1e:	4401      	add	r1, r0
 8000c20:	6011      	str	r1, [r2, #0]
 8000c22:	e7da      	b.n	8000bda <_free_r+0x22>
 8000c24:	d902      	bls.n	8000c2c <_free_r+0x74>
 8000c26:	230c      	movs	r3, #12
 8000c28:	602b      	str	r3, [r5, #0]
 8000c2a:	e7d6      	b.n	8000bda <_free_r+0x22>
 8000c2c:	6820      	ldr	r0, [r4, #0]
 8000c2e:	1821      	adds	r1, r4, r0
 8000c30:	428b      	cmp	r3, r1
 8000c32:	bf04      	itt	eq
 8000c34:	6819      	ldreq	r1, [r3, #0]
 8000c36:	685b      	ldreq	r3, [r3, #4]
 8000c38:	6063      	str	r3, [r4, #4]
 8000c3a:	bf04      	itt	eq
 8000c3c:	1809      	addeq	r1, r1, r0
 8000c3e:	6021      	streq	r1, [r4, #0]
 8000c40:	6054      	str	r4, [r2, #4]
 8000c42:	e7ca      	b.n	8000bda <_free_r+0x22>
 8000c44:	bd38      	pop	{r3, r4, r5, pc}
 8000c46:	bf00      	nop
 8000c48:	20000088 	.word	0x20000088

08000c4c <sbrk_aligned>:
 8000c4c:	b570      	push	{r4, r5, r6, lr}
 8000c4e:	4e0e      	ldr	r6, [pc, #56]	; (8000c88 <sbrk_aligned+0x3c>)
 8000c50:	460c      	mov	r4, r1
 8000c52:	6831      	ldr	r1, [r6, #0]
 8000c54:	4605      	mov	r5, r0
 8000c56:	b911      	cbnz	r1, 8000c5e <sbrk_aligned+0x12>
 8000c58:	f000 fb78 	bl	800134c <_sbrk_r>
 8000c5c:	6030      	str	r0, [r6, #0]
 8000c5e:	4621      	mov	r1, r4
 8000c60:	4628      	mov	r0, r5
 8000c62:	f000 fb73 	bl	800134c <_sbrk_r>
 8000c66:	1c43      	adds	r3, r0, #1
 8000c68:	d00a      	beq.n	8000c80 <sbrk_aligned+0x34>
 8000c6a:	1cc4      	adds	r4, r0, #3
 8000c6c:	f024 0403 	bic.w	r4, r4, #3
 8000c70:	42a0      	cmp	r0, r4
 8000c72:	d007      	beq.n	8000c84 <sbrk_aligned+0x38>
 8000c74:	1a21      	subs	r1, r4, r0
 8000c76:	4628      	mov	r0, r5
 8000c78:	f000 fb68 	bl	800134c <_sbrk_r>
 8000c7c:	3001      	adds	r0, #1
 8000c7e:	d101      	bne.n	8000c84 <sbrk_aligned+0x38>
 8000c80:	f04f 34ff 	mov.w	r4, #4294967295
 8000c84:	4620      	mov	r0, r4
 8000c86:	bd70      	pop	{r4, r5, r6, pc}
 8000c88:	2000008c 	.word	0x2000008c

08000c8c <_malloc_r>:
 8000c8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c90:	1ccd      	adds	r5, r1, #3
 8000c92:	f025 0503 	bic.w	r5, r5, #3
 8000c96:	3508      	adds	r5, #8
 8000c98:	2d0c      	cmp	r5, #12
 8000c9a:	bf38      	it	cc
 8000c9c:	250c      	movcc	r5, #12
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	4607      	mov	r7, r0
 8000ca2:	db01      	blt.n	8000ca8 <_malloc_r+0x1c>
 8000ca4:	42a9      	cmp	r1, r5
 8000ca6:	d905      	bls.n	8000cb4 <_malloc_r+0x28>
 8000ca8:	230c      	movs	r3, #12
 8000caa:	603b      	str	r3, [r7, #0]
 8000cac:	2600      	movs	r6, #0
 8000cae:	4630      	mov	r0, r6
 8000cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000cb4:	4e2e      	ldr	r6, [pc, #184]	; (8000d70 <_malloc_r+0xe4>)
 8000cb6:	f000 fbf3 	bl	80014a0 <__malloc_lock>
 8000cba:	6833      	ldr	r3, [r6, #0]
 8000cbc:	461c      	mov	r4, r3
 8000cbe:	bb34      	cbnz	r4, 8000d0e <_malloc_r+0x82>
 8000cc0:	4629      	mov	r1, r5
 8000cc2:	4638      	mov	r0, r7
 8000cc4:	f7ff ffc2 	bl	8000c4c <sbrk_aligned>
 8000cc8:	1c43      	adds	r3, r0, #1
 8000cca:	4604      	mov	r4, r0
 8000ccc:	d14d      	bne.n	8000d6a <_malloc_r+0xde>
 8000cce:	6834      	ldr	r4, [r6, #0]
 8000cd0:	4626      	mov	r6, r4
 8000cd2:	2e00      	cmp	r6, #0
 8000cd4:	d140      	bne.n	8000d58 <_malloc_r+0xcc>
 8000cd6:	6823      	ldr	r3, [r4, #0]
 8000cd8:	4631      	mov	r1, r6
 8000cda:	4638      	mov	r0, r7
 8000cdc:	eb04 0803 	add.w	r8, r4, r3
 8000ce0:	f000 fb34 	bl	800134c <_sbrk_r>
 8000ce4:	4580      	cmp	r8, r0
 8000ce6:	d13a      	bne.n	8000d5e <_malloc_r+0xd2>
 8000ce8:	6821      	ldr	r1, [r4, #0]
 8000cea:	3503      	adds	r5, #3
 8000cec:	1a6d      	subs	r5, r5, r1
 8000cee:	f025 0503 	bic.w	r5, r5, #3
 8000cf2:	3508      	adds	r5, #8
 8000cf4:	2d0c      	cmp	r5, #12
 8000cf6:	bf38      	it	cc
 8000cf8:	250c      	movcc	r5, #12
 8000cfa:	4629      	mov	r1, r5
 8000cfc:	4638      	mov	r0, r7
 8000cfe:	f7ff ffa5 	bl	8000c4c <sbrk_aligned>
 8000d02:	3001      	adds	r0, #1
 8000d04:	d02b      	beq.n	8000d5e <_malloc_r+0xd2>
 8000d06:	6823      	ldr	r3, [r4, #0]
 8000d08:	442b      	add	r3, r5
 8000d0a:	6023      	str	r3, [r4, #0]
 8000d0c:	e00e      	b.n	8000d2c <_malloc_r+0xa0>
 8000d0e:	6822      	ldr	r2, [r4, #0]
 8000d10:	1b52      	subs	r2, r2, r5
 8000d12:	d41e      	bmi.n	8000d52 <_malloc_r+0xc6>
 8000d14:	2a0b      	cmp	r2, #11
 8000d16:	d916      	bls.n	8000d46 <_malloc_r+0xba>
 8000d18:	1961      	adds	r1, r4, r5
 8000d1a:	42a3      	cmp	r3, r4
 8000d1c:	6025      	str	r5, [r4, #0]
 8000d1e:	bf18      	it	ne
 8000d20:	6059      	strne	r1, [r3, #4]
 8000d22:	6863      	ldr	r3, [r4, #4]
 8000d24:	bf08      	it	eq
 8000d26:	6031      	streq	r1, [r6, #0]
 8000d28:	5162      	str	r2, [r4, r5]
 8000d2a:	604b      	str	r3, [r1, #4]
 8000d2c:	4638      	mov	r0, r7
 8000d2e:	f104 060b 	add.w	r6, r4, #11
 8000d32:	f000 fbbb 	bl	80014ac <__malloc_unlock>
 8000d36:	f026 0607 	bic.w	r6, r6, #7
 8000d3a:	1d23      	adds	r3, r4, #4
 8000d3c:	1af2      	subs	r2, r6, r3
 8000d3e:	d0b6      	beq.n	8000cae <_malloc_r+0x22>
 8000d40:	1b9b      	subs	r3, r3, r6
 8000d42:	50a3      	str	r3, [r4, r2]
 8000d44:	e7b3      	b.n	8000cae <_malloc_r+0x22>
 8000d46:	6862      	ldr	r2, [r4, #4]
 8000d48:	42a3      	cmp	r3, r4
 8000d4a:	bf0c      	ite	eq
 8000d4c:	6032      	streq	r2, [r6, #0]
 8000d4e:	605a      	strne	r2, [r3, #4]
 8000d50:	e7ec      	b.n	8000d2c <_malloc_r+0xa0>
 8000d52:	4623      	mov	r3, r4
 8000d54:	6864      	ldr	r4, [r4, #4]
 8000d56:	e7b2      	b.n	8000cbe <_malloc_r+0x32>
 8000d58:	4634      	mov	r4, r6
 8000d5a:	6876      	ldr	r6, [r6, #4]
 8000d5c:	e7b9      	b.n	8000cd2 <_malloc_r+0x46>
 8000d5e:	230c      	movs	r3, #12
 8000d60:	603b      	str	r3, [r7, #0]
 8000d62:	4638      	mov	r0, r7
 8000d64:	f000 fba2 	bl	80014ac <__malloc_unlock>
 8000d68:	e7a1      	b.n	8000cae <_malloc_r+0x22>
 8000d6a:	6025      	str	r5, [r4, #0]
 8000d6c:	e7de      	b.n	8000d2c <_malloc_r+0xa0>
 8000d6e:	bf00      	nop
 8000d70:	20000088 	.word	0x20000088

08000d74 <__sfputc_r>:
 8000d74:	6893      	ldr	r3, [r2, #8]
 8000d76:	3b01      	subs	r3, #1
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	b410      	push	{r4}
 8000d7c:	6093      	str	r3, [r2, #8]
 8000d7e:	da07      	bge.n	8000d90 <__sfputc_r+0x1c>
 8000d80:	6994      	ldr	r4, [r2, #24]
 8000d82:	42a3      	cmp	r3, r4
 8000d84:	db01      	blt.n	8000d8a <__sfputc_r+0x16>
 8000d86:	290a      	cmp	r1, #10
 8000d88:	d102      	bne.n	8000d90 <__sfputc_r+0x1c>
 8000d8a:	bc10      	pop	{r4}
 8000d8c:	f7ff bc38 	b.w	8000600 <__swbuf_r>
 8000d90:	6813      	ldr	r3, [r2, #0]
 8000d92:	1c58      	adds	r0, r3, #1
 8000d94:	6010      	str	r0, [r2, #0]
 8000d96:	7019      	strb	r1, [r3, #0]
 8000d98:	4608      	mov	r0, r1
 8000d9a:	bc10      	pop	{r4}
 8000d9c:	4770      	bx	lr

08000d9e <__sfputs_r>:
 8000d9e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da0:	4606      	mov	r6, r0
 8000da2:	460f      	mov	r7, r1
 8000da4:	4614      	mov	r4, r2
 8000da6:	18d5      	adds	r5, r2, r3
 8000da8:	42ac      	cmp	r4, r5
 8000daa:	d101      	bne.n	8000db0 <__sfputs_r+0x12>
 8000dac:	2000      	movs	r0, #0
 8000dae:	e007      	b.n	8000dc0 <__sfputs_r+0x22>
 8000db0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000db4:	463a      	mov	r2, r7
 8000db6:	4630      	mov	r0, r6
 8000db8:	f7ff ffdc 	bl	8000d74 <__sfputc_r>
 8000dbc:	1c43      	adds	r3, r0, #1
 8000dbe:	d1f3      	bne.n	8000da8 <__sfputs_r+0xa>
 8000dc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000dc4 <_vfiprintf_r>:
 8000dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dc8:	460d      	mov	r5, r1
 8000dca:	b09d      	sub	sp, #116	; 0x74
 8000dcc:	4614      	mov	r4, r2
 8000dce:	4698      	mov	r8, r3
 8000dd0:	4606      	mov	r6, r0
 8000dd2:	b118      	cbz	r0, 8000ddc <_vfiprintf_r+0x18>
 8000dd4:	6983      	ldr	r3, [r0, #24]
 8000dd6:	b90b      	cbnz	r3, 8000ddc <_vfiprintf_r+0x18>
 8000dd8:	f7ff fde8 	bl	80009ac <__sinit>
 8000ddc:	4b89      	ldr	r3, [pc, #548]	; (8001004 <_vfiprintf_r+0x240>)
 8000dde:	429d      	cmp	r5, r3
 8000de0:	d11b      	bne.n	8000e1a <_vfiprintf_r+0x56>
 8000de2:	6875      	ldr	r5, [r6, #4]
 8000de4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000de6:	07d9      	lsls	r1, r3, #31
 8000de8:	d405      	bmi.n	8000df6 <_vfiprintf_r+0x32>
 8000dea:	89ab      	ldrh	r3, [r5, #12]
 8000dec:	059a      	lsls	r2, r3, #22
 8000dee:	d402      	bmi.n	8000df6 <_vfiprintf_r+0x32>
 8000df0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000df2:	f7ff fe79 	bl	8000ae8 <__retarget_lock_acquire_recursive>
 8000df6:	89ab      	ldrh	r3, [r5, #12]
 8000df8:	071b      	lsls	r3, r3, #28
 8000dfa:	d501      	bpl.n	8000e00 <_vfiprintf_r+0x3c>
 8000dfc:	692b      	ldr	r3, [r5, #16]
 8000dfe:	b9eb      	cbnz	r3, 8000e3c <_vfiprintf_r+0x78>
 8000e00:	4629      	mov	r1, r5
 8000e02:	4630      	mov	r0, r6
 8000e04:	f7ff fc4e 	bl	80006a4 <__swsetup_r>
 8000e08:	b1c0      	cbz	r0, 8000e3c <_vfiprintf_r+0x78>
 8000e0a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e0c:	07dc      	lsls	r4, r3, #31
 8000e0e:	d50e      	bpl.n	8000e2e <_vfiprintf_r+0x6a>
 8000e10:	f04f 30ff 	mov.w	r0, #4294967295
 8000e14:	b01d      	add	sp, #116	; 0x74
 8000e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e1a:	4b7b      	ldr	r3, [pc, #492]	; (8001008 <_vfiprintf_r+0x244>)
 8000e1c:	429d      	cmp	r5, r3
 8000e1e:	d101      	bne.n	8000e24 <_vfiprintf_r+0x60>
 8000e20:	68b5      	ldr	r5, [r6, #8]
 8000e22:	e7df      	b.n	8000de4 <_vfiprintf_r+0x20>
 8000e24:	4b79      	ldr	r3, [pc, #484]	; (800100c <_vfiprintf_r+0x248>)
 8000e26:	429d      	cmp	r5, r3
 8000e28:	bf08      	it	eq
 8000e2a:	68f5      	ldreq	r5, [r6, #12]
 8000e2c:	e7da      	b.n	8000de4 <_vfiprintf_r+0x20>
 8000e2e:	89ab      	ldrh	r3, [r5, #12]
 8000e30:	0598      	lsls	r0, r3, #22
 8000e32:	d4ed      	bmi.n	8000e10 <_vfiprintf_r+0x4c>
 8000e34:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e36:	f7ff fe58 	bl	8000aea <__retarget_lock_release_recursive>
 8000e3a:	e7e9      	b.n	8000e10 <_vfiprintf_r+0x4c>
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	9309      	str	r3, [sp, #36]	; 0x24
 8000e40:	2320      	movs	r3, #32
 8000e42:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e46:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e4a:	2330      	movs	r3, #48	; 0x30
 8000e4c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001010 <_vfiprintf_r+0x24c>
 8000e50:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e54:	f04f 0901 	mov.w	r9, #1
 8000e58:	4623      	mov	r3, r4
 8000e5a:	469a      	mov	sl, r3
 8000e5c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e60:	b10a      	cbz	r2, 8000e66 <_vfiprintf_r+0xa2>
 8000e62:	2a25      	cmp	r2, #37	; 0x25
 8000e64:	d1f9      	bne.n	8000e5a <_vfiprintf_r+0x96>
 8000e66:	ebba 0b04 	subs.w	fp, sl, r4
 8000e6a:	d00b      	beq.n	8000e84 <_vfiprintf_r+0xc0>
 8000e6c:	465b      	mov	r3, fp
 8000e6e:	4622      	mov	r2, r4
 8000e70:	4629      	mov	r1, r5
 8000e72:	4630      	mov	r0, r6
 8000e74:	f7ff ff93 	bl	8000d9e <__sfputs_r>
 8000e78:	3001      	adds	r0, #1
 8000e7a:	f000 80aa 	beq.w	8000fd2 <_vfiprintf_r+0x20e>
 8000e7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000e80:	445a      	add	r2, fp
 8000e82:	9209      	str	r2, [sp, #36]	; 0x24
 8000e84:	f89a 3000 	ldrb.w	r3, [sl]
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	f000 80a2 	beq.w	8000fd2 <_vfiprintf_r+0x20e>
 8000e8e:	2300      	movs	r3, #0
 8000e90:	f04f 32ff 	mov.w	r2, #4294967295
 8000e94:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e98:	f10a 0a01 	add.w	sl, sl, #1
 8000e9c:	9304      	str	r3, [sp, #16]
 8000e9e:	9307      	str	r3, [sp, #28]
 8000ea0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ea4:	931a      	str	r3, [sp, #104]	; 0x68
 8000ea6:	4654      	mov	r4, sl
 8000ea8:	2205      	movs	r2, #5
 8000eaa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000eae:	4858      	ldr	r0, [pc, #352]	; (8001010 <_vfiprintf_r+0x24c>)
 8000eb0:	f7ff f996 	bl	80001e0 <memchr>
 8000eb4:	9a04      	ldr	r2, [sp, #16]
 8000eb6:	b9d8      	cbnz	r0, 8000ef0 <_vfiprintf_r+0x12c>
 8000eb8:	06d1      	lsls	r1, r2, #27
 8000eba:	bf44      	itt	mi
 8000ebc:	2320      	movmi	r3, #32
 8000ebe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ec2:	0713      	lsls	r3, r2, #28
 8000ec4:	bf44      	itt	mi
 8000ec6:	232b      	movmi	r3, #43	; 0x2b
 8000ec8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ecc:	f89a 3000 	ldrb.w	r3, [sl]
 8000ed0:	2b2a      	cmp	r3, #42	; 0x2a
 8000ed2:	d015      	beq.n	8000f00 <_vfiprintf_r+0x13c>
 8000ed4:	9a07      	ldr	r2, [sp, #28]
 8000ed6:	4654      	mov	r4, sl
 8000ed8:	2000      	movs	r0, #0
 8000eda:	f04f 0c0a 	mov.w	ip, #10
 8000ede:	4621      	mov	r1, r4
 8000ee0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ee4:	3b30      	subs	r3, #48	; 0x30
 8000ee6:	2b09      	cmp	r3, #9
 8000ee8:	d94e      	bls.n	8000f88 <_vfiprintf_r+0x1c4>
 8000eea:	b1b0      	cbz	r0, 8000f1a <_vfiprintf_r+0x156>
 8000eec:	9207      	str	r2, [sp, #28]
 8000eee:	e014      	b.n	8000f1a <_vfiprintf_r+0x156>
 8000ef0:	eba0 0308 	sub.w	r3, r0, r8
 8000ef4:	fa09 f303 	lsl.w	r3, r9, r3
 8000ef8:	4313      	orrs	r3, r2
 8000efa:	9304      	str	r3, [sp, #16]
 8000efc:	46a2      	mov	sl, r4
 8000efe:	e7d2      	b.n	8000ea6 <_vfiprintf_r+0xe2>
 8000f00:	9b03      	ldr	r3, [sp, #12]
 8000f02:	1d19      	adds	r1, r3, #4
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	9103      	str	r1, [sp, #12]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	bfbb      	ittet	lt
 8000f0c:	425b      	neglt	r3, r3
 8000f0e:	f042 0202 	orrlt.w	r2, r2, #2
 8000f12:	9307      	strge	r3, [sp, #28]
 8000f14:	9307      	strlt	r3, [sp, #28]
 8000f16:	bfb8      	it	lt
 8000f18:	9204      	strlt	r2, [sp, #16]
 8000f1a:	7823      	ldrb	r3, [r4, #0]
 8000f1c:	2b2e      	cmp	r3, #46	; 0x2e
 8000f1e:	d10c      	bne.n	8000f3a <_vfiprintf_r+0x176>
 8000f20:	7863      	ldrb	r3, [r4, #1]
 8000f22:	2b2a      	cmp	r3, #42	; 0x2a
 8000f24:	d135      	bne.n	8000f92 <_vfiprintf_r+0x1ce>
 8000f26:	9b03      	ldr	r3, [sp, #12]
 8000f28:	1d1a      	adds	r2, r3, #4
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	9203      	str	r2, [sp, #12]
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	bfb8      	it	lt
 8000f32:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f36:	3402      	adds	r4, #2
 8000f38:	9305      	str	r3, [sp, #20]
 8000f3a:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8001014 <_vfiprintf_r+0x250>
 8000f3e:	7821      	ldrb	r1, [r4, #0]
 8000f40:	2203      	movs	r2, #3
 8000f42:	4650      	mov	r0, sl
 8000f44:	f7ff f94c 	bl	80001e0 <memchr>
 8000f48:	b140      	cbz	r0, 8000f5c <_vfiprintf_r+0x198>
 8000f4a:	2340      	movs	r3, #64	; 0x40
 8000f4c:	eba0 000a 	sub.w	r0, r0, sl
 8000f50:	fa03 f000 	lsl.w	r0, r3, r0
 8000f54:	9b04      	ldr	r3, [sp, #16]
 8000f56:	4303      	orrs	r3, r0
 8000f58:	3401      	adds	r4, #1
 8000f5a:	9304      	str	r3, [sp, #16]
 8000f5c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f60:	482d      	ldr	r0, [pc, #180]	; (8001018 <_vfiprintf_r+0x254>)
 8000f62:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f66:	2206      	movs	r2, #6
 8000f68:	f7ff f93a 	bl	80001e0 <memchr>
 8000f6c:	2800      	cmp	r0, #0
 8000f6e:	d03f      	beq.n	8000ff0 <_vfiprintf_r+0x22c>
 8000f70:	4b2a      	ldr	r3, [pc, #168]	; (800101c <_vfiprintf_r+0x258>)
 8000f72:	bb1b      	cbnz	r3, 8000fbc <_vfiprintf_r+0x1f8>
 8000f74:	9b03      	ldr	r3, [sp, #12]
 8000f76:	3307      	adds	r3, #7
 8000f78:	f023 0307 	bic.w	r3, r3, #7
 8000f7c:	3308      	adds	r3, #8
 8000f7e:	9303      	str	r3, [sp, #12]
 8000f80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f82:	443b      	add	r3, r7
 8000f84:	9309      	str	r3, [sp, #36]	; 0x24
 8000f86:	e767      	b.n	8000e58 <_vfiprintf_r+0x94>
 8000f88:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f8c:	460c      	mov	r4, r1
 8000f8e:	2001      	movs	r0, #1
 8000f90:	e7a5      	b.n	8000ede <_vfiprintf_r+0x11a>
 8000f92:	2300      	movs	r3, #0
 8000f94:	3401      	adds	r4, #1
 8000f96:	9305      	str	r3, [sp, #20]
 8000f98:	4619      	mov	r1, r3
 8000f9a:	f04f 0c0a 	mov.w	ip, #10
 8000f9e:	4620      	mov	r0, r4
 8000fa0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fa4:	3a30      	subs	r2, #48	; 0x30
 8000fa6:	2a09      	cmp	r2, #9
 8000fa8:	d903      	bls.n	8000fb2 <_vfiprintf_r+0x1ee>
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d0c5      	beq.n	8000f3a <_vfiprintf_r+0x176>
 8000fae:	9105      	str	r1, [sp, #20]
 8000fb0:	e7c3      	b.n	8000f3a <_vfiprintf_r+0x176>
 8000fb2:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fb6:	4604      	mov	r4, r0
 8000fb8:	2301      	movs	r3, #1
 8000fba:	e7f0      	b.n	8000f9e <_vfiprintf_r+0x1da>
 8000fbc:	ab03      	add	r3, sp, #12
 8000fbe:	9300      	str	r3, [sp, #0]
 8000fc0:	462a      	mov	r2, r5
 8000fc2:	4b17      	ldr	r3, [pc, #92]	; (8001020 <_vfiprintf_r+0x25c>)
 8000fc4:	a904      	add	r1, sp, #16
 8000fc6:	4630      	mov	r0, r6
 8000fc8:	f3af 8000 	nop.w
 8000fcc:	4607      	mov	r7, r0
 8000fce:	1c78      	adds	r0, r7, #1
 8000fd0:	d1d6      	bne.n	8000f80 <_vfiprintf_r+0x1bc>
 8000fd2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000fd4:	07d9      	lsls	r1, r3, #31
 8000fd6:	d405      	bmi.n	8000fe4 <_vfiprintf_r+0x220>
 8000fd8:	89ab      	ldrh	r3, [r5, #12]
 8000fda:	059a      	lsls	r2, r3, #22
 8000fdc:	d402      	bmi.n	8000fe4 <_vfiprintf_r+0x220>
 8000fde:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000fe0:	f7ff fd83 	bl	8000aea <__retarget_lock_release_recursive>
 8000fe4:	89ab      	ldrh	r3, [r5, #12]
 8000fe6:	065b      	lsls	r3, r3, #25
 8000fe8:	f53f af12 	bmi.w	8000e10 <_vfiprintf_r+0x4c>
 8000fec:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000fee:	e711      	b.n	8000e14 <_vfiprintf_r+0x50>
 8000ff0:	ab03      	add	r3, sp, #12
 8000ff2:	9300      	str	r3, [sp, #0]
 8000ff4:	462a      	mov	r2, r5
 8000ff6:	4b0a      	ldr	r3, [pc, #40]	; (8001020 <_vfiprintf_r+0x25c>)
 8000ff8:	a904      	add	r1, sp, #16
 8000ffa:	4630      	mov	r0, r6
 8000ffc:	f000 f880 	bl	8001100 <_printf_i>
 8001000:	e7e4      	b.n	8000fcc <_vfiprintf_r+0x208>
 8001002:	bf00      	nop
 8001004:	0800154c 	.word	0x0800154c
 8001008:	0800156c 	.word	0x0800156c
 800100c:	0800152c 	.word	0x0800152c
 8001010:	0800158c 	.word	0x0800158c
 8001014:	08001592 	.word	0x08001592
 8001018:	08001596 	.word	0x08001596
 800101c:	00000000 	.word	0x00000000
 8001020:	08000d9f 	.word	0x08000d9f

08001024 <_printf_common>:
 8001024:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001028:	4616      	mov	r6, r2
 800102a:	4699      	mov	r9, r3
 800102c:	688a      	ldr	r2, [r1, #8]
 800102e:	690b      	ldr	r3, [r1, #16]
 8001030:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001034:	4293      	cmp	r3, r2
 8001036:	bfb8      	it	lt
 8001038:	4613      	movlt	r3, r2
 800103a:	6033      	str	r3, [r6, #0]
 800103c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001040:	4607      	mov	r7, r0
 8001042:	460c      	mov	r4, r1
 8001044:	b10a      	cbz	r2, 800104a <_printf_common+0x26>
 8001046:	3301      	adds	r3, #1
 8001048:	6033      	str	r3, [r6, #0]
 800104a:	6823      	ldr	r3, [r4, #0]
 800104c:	0699      	lsls	r1, r3, #26
 800104e:	bf42      	ittt	mi
 8001050:	6833      	ldrmi	r3, [r6, #0]
 8001052:	3302      	addmi	r3, #2
 8001054:	6033      	strmi	r3, [r6, #0]
 8001056:	6825      	ldr	r5, [r4, #0]
 8001058:	f015 0506 	ands.w	r5, r5, #6
 800105c:	d106      	bne.n	800106c <_printf_common+0x48>
 800105e:	f104 0a19 	add.w	sl, r4, #25
 8001062:	68e3      	ldr	r3, [r4, #12]
 8001064:	6832      	ldr	r2, [r6, #0]
 8001066:	1a9b      	subs	r3, r3, r2
 8001068:	42ab      	cmp	r3, r5
 800106a:	dc26      	bgt.n	80010ba <_printf_common+0x96>
 800106c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001070:	1e13      	subs	r3, r2, #0
 8001072:	6822      	ldr	r2, [r4, #0]
 8001074:	bf18      	it	ne
 8001076:	2301      	movne	r3, #1
 8001078:	0692      	lsls	r2, r2, #26
 800107a:	d42b      	bmi.n	80010d4 <_printf_common+0xb0>
 800107c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001080:	4649      	mov	r1, r9
 8001082:	4638      	mov	r0, r7
 8001084:	47c0      	blx	r8
 8001086:	3001      	adds	r0, #1
 8001088:	d01e      	beq.n	80010c8 <_printf_common+0xa4>
 800108a:	6823      	ldr	r3, [r4, #0]
 800108c:	68e5      	ldr	r5, [r4, #12]
 800108e:	6832      	ldr	r2, [r6, #0]
 8001090:	f003 0306 	and.w	r3, r3, #6
 8001094:	2b04      	cmp	r3, #4
 8001096:	bf08      	it	eq
 8001098:	1aad      	subeq	r5, r5, r2
 800109a:	68a3      	ldr	r3, [r4, #8]
 800109c:	6922      	ldr	r2, [r4, #16]
 800109e:	bf0c      	ite	eq
 80010a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010a4:	2500      	movne	r5, #0
 80010a6:	4293      	cmp	r3, r2
 80010a8:	bfc4      	itt	gt
 80010aa:	1a9b      	subgt	r3, r3, r2
 80010ac:	18ed      	addgt	r5, r5, r3
 80010ae:	2600      	movs	r6, #0
 80010b0:	341a      	adds	r4, #26
 80010b2:	42b5      	cmp	r5, r6
 80010b4:	d11a      	bne.n	80010ec <_printf_common+0xc8>
 80010b6:	2000      	movs	r0, #0
 80010b8:	e008      	b.n	80010cc <_printf_common+0xa8>
 80010ba:	2301      	movs	r3, #1
 80010bc:	4652      	mov	r2, sl
 80010be:	4649      	mov	r1, r9
 80010c0:	4638      	mov	r0, r7
 80010c2:	47c0      	blx	r8
 80010c4:	3001      	adds	r0, #1
 80010c6:	d103      	bne.n	80010d0 <_printf_common+0xac>
 80010c8:	f04f 30ff 	mov.w	r0, #4294967295
 80010cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010d0:	3501      	adds	r5, #1
 80010d2:	e7c6      	b.n	8001062 <_printf_common+0x3e>
 80010d4:	18e1      	adds	r1, r4, r3
 80010d6:	1c5a      	adds	r2, r3, #1
 80010d8:	2030      	movs	r0, #48	; 0x30
 80010da:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80010de:	4422      	add	r2, r4
 80010e0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010e4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80010e8:	3302      	adds	r3, #2
 80010ea:	e7c7      	b.n	800107c <_printf_common+0x58>
 80010ec:	2301      	movs	r3, #1
 80010ee:	4622      	mov	r2, r4
 80010f0:	4649      	mov	r1, r9
 80010f2:	4638      	mov	r0, r7
 80010f4:	47c0      	blx	r8
 80010f6:	3001      	adds	r0, #1
 80010f8:	d0e6      	beq.n	80010c8 <_printf_common+0xa4>
 80010fa:	3601      	adds	r6, #1
 80010fc:	e7d9      	b.n	80010b2 <_printf_common+0x8e>
	...

08001100 <_printf_i>:
 8001100:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001104:	7e0f      	ldrb	r7, [r1, #24]
 8001106:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001108:	2f78      	cmp	r7, #120	; 0x78
 800110a:	4691      	mov	r9, r2
 800110c:	4680      	mov	r8, r0
 800110e:	460c      	mov	r4, r1
 8001110:	469a      	mov	sl, r3
 8001112:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001116:	d807      	bhi.n	8001128 <_printf_i+0x28>
 8001118:	2f62      	cmp	r7, #98	; 0x62
 800111a:	d80a      	bhi.n	8001132 <_printf_i+0x32>
 800111c:	2f00      	cmp	r7, #0
 800111e:	f000 80d8 	beq.w	80012d2 <_printf_i+0x1d2>
 8001122:	2f58      	cmp	r7, #88	; 0x58
 8001124:	f000 80a3 	beq.w	800126e <_printf_i+0x16e>
 8001128:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800112c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001130:	e03a      	b.n	80011a8 <_printf_i+0xa8>
 8001132:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001136:	2b15      	cmp	r3, #21
 8001138:	d8f6      	bhi.n	8001128 <_printf_i+0x28>
 800113a:	a101      	add	r1, pc, #4	; (adr r1, 8001140 <_printf_i+0x40>)
 800113c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001140:	08001199 	.word	0x08001199
 8001144:	080011ad 	.word	0x080011ad
 8001148:	08001129 	.word	0x08001129
 800114c:	08001129 	.word	0x08001129
 8001150:	08001129 	.word	0x08001129
 8001154:	08001129 	.word	0x08001129
 8001158:	080011ad 	.word	0x080011ad
 800115c:	08001129 	.word	0x08001129
 8001160:	08001129 	.word	0x08001129
 8001164:	08001129 	.word	0x08001129
 8001168:	08001129 	.word	0x08001129
 800116c:	080012b9 	.word	0x080012b9
 8001170:	080011dd 	.word	0x080011dd
 8001174:	0800129b 	.word	0x0800129b
 8001178:	08001129 	.word	0x08001129
 800117c:	08001129 	.word	0x08001129
 8001180:	080012db 	.word	0x080012db
 8001184:	08001129 	.word	0x08001129
 8001188:	080011dd 	.word	0x080011dd
 800118c:	08001129 	.word	0x08001129
 8001190:	08001129 	.word	0x08001129
 8001194:	080012a3 	.word	0x080012a3
 8001198:	682b      	ldr	r3, [r5, #0]
 800119a:	1d1a      	adds	r2, r3, #4
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	602a      	str	r2, [r5, #0]
 80011a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011a8:	2301      	movs	r3, #1
 80011aa:	e0a3      	b.n	80012f4 <_printf_i+0x1f4>
 80011ac:	6820      	ldr	r0, [r4, #0]
 80011ae:	6829      	ldr	r1, [r5, #0]
 80011b0:	0606      	lsls	r6, r0, #24
 80011b2:	f101 0304 	add.w	r3, r1, #4
 80011b6:	d50a      	bpl.n	80011ce <_printf_i+0xce>
 80011b8:	680e      	ldr	r6, [r1, #0]
 80011ba:	602b      	str	r3, [r5, #0]
 80011bc:	2e00      	cmp	r6, #0
 80011be:	da03      	bge.n	80011c8 <_printf_i+0xc8>
 80011c0:	232d      	movs	r3, #45	; 0x2d
 80011c2:	4276      	negs	r6, r6
 80011c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011c8:	485e      	ldr	r0, [pc, #376]	; (8001344 <_printf_i+0x244>)
 80011ca:	230a      	movs	r3, #10
 80011cc:	e019      	b.n	8001202 <_printf_i+0x102>
 80011ce:	680e      	ldr	r6, [r1, #0]
 80011d0:	602b      	str	r3, [r5, #0]
 80011d2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80011d6:	bf18      	it	ne
 80011d8:	b236      	sxthne	r6, r6
 80011da:	e7ef      	b.n	80011bc <_printf_i+0xbc>
 80011dc:	682b      	ldr	r3, [r5, #0]
 80011de:	6820      	ldr	r0, [r4, #0]
 80011e0:	1d19      	adds	r1, r3, #4
 80011e2:	6029      	str	r1, [r5, #0]
 80011e4:	0601      	lsls	r1, r0, #24
 80011e6:	d501      	bpl.n	80011ec <_printf_i+0xec>
 80011e8:	681e      	ldr	r6, [r3, #0]
 80011ea:	e002      	b.n	80011f2 <_printf_i+0xf2>
 80011ec:	0646      	lsls	r6, r0, #25
 80011ee:	d5fb      	bpl.n	80011e8 <_printf_i+0xe8>
 80011f0:	881e      	ldrh	r6, [r3, #0]
 80011f2:	4854      	ldr	r0, [pc, #336]	; (8001344 <_printf_i+0x244>)
 80011f4:	2f6f      	cmp	r7, #111	; 0x6f
 80011f6:	bf0c      	ite	eq
 80011f8:	2308      	moveq	r3, #8
 80011fa:	230a      	movne	r3, #10
 80011fc:	2100      	movs	r1, #0
 80011fe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001202:	6865      	ldr	r5, [r4, #4]
 8001204:	60a5      	str	r5, [r4, #8]
 8001206:	2d00      	cmp	r5, #0
 8001208:	bfa2      	ittt	ge
 800120a:	6821      	ldrge	r1, [r4, #0]
 800120c:	f021 0104 	bicge.w	r1, r1, #4
 8001210:	6021      	strge	r1, [r4, #0]
 8001212:	b90e      	cbnz	r6, 8001218 <_printf_i+0x118>
 8001214:	2d00      	cmp	r5, #0
 8001216:	d04d      	beq.n	80012b4 <_printf_i+0x1b4>
 8001218:	4615      	mov	r5, r2
 800121a:	fbb6 f1f3 	udiv	r1, r6, r3
 800121e:	fb03 6711 	mls	r7, r3, r1, r6
 8001222:	5dc7      	ldrb	r7, [r0, r7]
 8001224:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001228:	4637      	mov	r7, r6
 800122a:	42bb      	cmp	r3, r7
 800122c:	460e      	mov	r6, r1
 800122e:	d9f4      	bls.n	800121a <_printf_i+0x11a>
 8001230:	2b08      	cmp	r3, #8
 8001232:	d10b      	bne.n	800124c <_printf_i+0x14c>
 8001234:	6823      	ldr	r3, [r4, #0]
 8001236:	07de      	lsls	r6, r3, #31
 8001238:	d508      	bpl.n	800124c <_printf_i+0x14c>
 800123a:	6923      	ldr	r3, [r4, #16]
 800123c:	6861      	ldr	r1, [r4, #4]
 800123e:	4299      	cmp	r1, r3
 8001240:	bfde      	ittt	le
 8001242:	2330      	movle	r3, #48	; 0x30
 8001244:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001248:	f105 35ff 	addle.w	r5, r5, #4294967295
 800124c:	1b52      	subs	r2, r2, r5
 800124e:	6122      	str	r2, [r4, #16]
 8001250:	f8cd a000 	str.w	sl, [sp]
 8001254:	464b      	mov	r3, r9
 8001256:	aa03      	add	r2, sp, #12
 8001258:	4621      	mov	r1, r4
 800125a:	4640      	mov	r0, r8
 800125c:	f7ff fee2 	bl	8001024 <_printf_common>
 8001260:	3001      	adds	r0, #1
 8001262:	d14c      	bne.n	80012fe <_printf_i+0x1fe>
 8001264:	f04f 30ff 	mov.w	r0, #4294967295
 8001268:	b004      	add	sp, #16
 800126a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800126e:	4835      	ldr	r0, [pc, #212]	; (8001344 <_printf_i+0x244>)
 8001270:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001274:	6829      	ldr	r1, [r5, #0]
 8001276:	6823      	ldr	r3, [r4, #0]
 8001278:	f851 6b04 	ldr.w	r6, [r1], #4
 800127c:	6029      	str	r1, [r5, #0]
 800127e:	061d      	lsls	r5, r3, #24
 8001280:	d514      	bpl.n	80012ac <_printf_i+0x1ac>
 8001282:	07df      	lsls	r7, r3, #31
 8001284:	bf44      	itt	mi
 8001286:	f043 0320 	orrmi.w	r3, r3, #32
 800128a:	6023      	strmi	r3, [r4, #0]
 800128c:	b91e      	cbnz	r6, 8001296 <_printf_i+0x196>
 800128e:	6823      	ldr	r3, [r4, #0]
 8001290:	f023 0320 	bic.w	r3, r3, #32
 8001294:	6023      	str	r3, [r4, #0]
 8001296:	2310      	movs	r3, #16
 8001298:	e7b0      	b.n	80011fc <_printf_i+0xfc>
 800129a:	6823      	ldr	r3, [r4, #0]
 800129c:	f043 0320 	orr.w	r3, r3, #32
 80012a0:	6023      	str	r3, [r4, #0]
 80012a2:	2378      	movs	r3, #120	; 0x78
 80012a4:	4828      	ldr	r0, [pc, #160]	; (8001348 <_printf_i+0x248>)
 80012a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80012aa:	e7e3      	b.n	8001274 <_printf_i+0x174>
 80012ac:	0659      	lsls	r1, r3, #25
 80012ae:	bf48      	it	mi
 80012b0:	b2b6      	uxthmi	r6, r6
 80012b2:	e7e6      	b.n	8001282 <_printf_i+0x182>
 80012b4:	4615      	mov	r5, r2
 80012b6:	e7bb      	b.n	8001230 <_printf_i+0x130>
 80012b8:	682b      	ldr	r3, [r5, #0]
 80012ba:	6826      	ldr	r6, [r4, #0]
 80012bc:	6961      	ldr	r1, [r4, #20]
 80012be:	1d18      	adds	r0, r3, #4
 80012c0:	6028      	str	r0, [r5, #0]
 80012c2:	0635      	lsls	r5, r6, #24
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	d501      	bpl.n	80012cc <_printf_i+0x1cc>
 80012c8:	6019      	str	r1, [r3, #0]
 80012ca:	e002      	b.n	80012d2 <_printf_i+0x1d2>
 80012cc:	0670      	lsls	r0, r6, #25
 80012ce:	d5fb      	bpl.n	80012c8 <_printf_i+0x1c8>
 80012d0:	8019      	strh	r1, [r3, #0]
 80012d2:	2300      	movs	r3, #0
 80012d4:	6123      	str	r3, [r4, #16]
 80012d6:	4615      	mov	r5, r2
 80012d8:	e7ba      	b.n	8001250 <_printf_i+0x150>
 80012da:	682b      	ldr	r3, [r5, #0]
 80012dc:	1d1a      	adds	r2, r3, #4
 80012de:	602a      	str	r2, [r5, #0]
 80012e0:	681d      	ldr	r5, [r3, #0]
 80012e2:	6862      	ldr	r2, [r4, #4]
 80012e4:	2100      	movs	r1, #0
 80012e6:	4628      	mov	r0, r5
 80012e8:	f7fe ff7a 	bl	80001e0 <memchr>
 80012ec:	b108      	cbz	r0, 80012f2 <_printf_i+0x1f2>
 80012ee:	1b40      	subs	r0, r0, r5
 80012f0:	6060      	str	r0, [r4, #4]
 80012f2:	6863      	ldr	r3, [r4, #4]
 80012f4:	6123      	str	r3, [r4, #16]
 80012f6:	2300      	movs	r3, #0
 80012f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012fc:	e7a8      	b.n	8001250 <_printf_i+0x150>
 80012fe:	6923      	ldr	r3, [r4, #16]
 8001300:	462a      	mov	r2, r5
 8001302:	4649      	mov	r1, r9
 8001304:	4640      	mov	r0, r8
 8001306:	47d0      	blx	sl
 8001308:	3001      	adds	r0, #1
 800130a:	d0ab      	beq.n	8001264 <_printf_i+0x164>
 800130c:	6823      	ldr	r3, [r4, #0]
 800130e:	079b      	lsls	r3, r3, #30
 8001310:	d413      	bmi.n	800133a <_printf_i+0x23a>
 8001312:	68e0      	ldr	r0, [r4, #12]
 8001314:	9b03      	ldr	r3, [sp, #12]
 8001316:	4298      	cmp	r0, r3
 8001318:	bfb8      	it	lt
 800131a:	4618      	movlt	r0, r3
 800131c:	e7a4      	b.n	8001268 <_printf_i+0x168>
 800131e:	2301      	movs	r3, #1
 8001320:	4632      	mov	r2, r6
 8001322:	4649      	mov	r1, r9
 8001324:	4640      	mov	r0, r8
 8001326:	47d0      	blx	sl
 8001328:	3001      	adds	r0, #1
 800132a:	d09b      	beq.n	8001264 <_printf_i+0x164>
 800132c:	3501      	adds	r5, #1
 800132e:	68e3      	ldr	r3, [r4, #12]
 8001330:	9903      	ldr	r1, [sp, #12]
 8001332:	1a5b      	subs	r3, r3, r1
 8001334:	42ab      	cmp	r3, r5
 8001336:	dcf2      	bgt.n	800131e <_printf_i+0x21e>
 8001338:	e7eb      	b.n	8001312 <_printf_i+0x212>
 800133a:	2500      	movs	r5, #0
 800133c:	f104 0619 	add.w	r6, r4, #25
 8001340:	e7f5      	b.n	800132e <_printf_i+0x22e>
 8001342:	bf00      	nop
 8001344:	0800159d 	.word	0x0800159d
 8001348:	080015ae 	.word	0x080015ae

0800134c <_sbrk_r>:
 800134c:	b538      	push	{r3, r4, r5, lr}
 800134e:	4d06      	ldr	r5, [pc, #24]	; (8001368 <_sbrk_r+0x1c>)
 8001350:	2300      	movs	r3, #0
 8001352:	4604      	mov	r4, r0
 8001354:	4608      	mov	r0, r1
 8001356:	602b      	str	r3, [r5, #0]
 8001358:	f7ff f832 	bl	80003c0 <_sbrk>
 800135c:	1c43      	adds	r3, r0, #1
 800135e:	d102      	bne.n	8001366 <_sbrk_r+0x1a>
 8001360:	682b      	ldr	r3, [r5, #0]
 8001362:	b103      	cbz	r3, 8001366 <_sbrk_r+0x1a>
 8001364:	6023      	str	r3, [r4, #0]
 8001366:	bd38      	pop	{r3, r4, r5, pc}
 8001368:	20000090 	.word	0x20000090

0800136c <__sread>:
 800136c:	b510      	push	{r4, lr}
 800136e:	460c      	mov	r4, r1
 8001370:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001374:	f000 f8a0 	bl	80014b8 <_read_r>
 8001378:	2800      	cmp	r0, #0
 800137a:	bfab      	itete	ge
 800137c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800137e:	89a3      	ldrhlt	r3, [r4, #12]
 8001380:	181b      	addge	r3, r3, r0
 8001382:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001386:	bfac      	ite	ge
 8001388:	6563      	strge	r3, [r4, #84]	; 0x54
 800138a:	81a3      	strhlt	r3, [r4, #12]
 800138c:	bd10      	pop	{r4, pc}

0800138e <__swrite>:
 800138e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001392:	461f      	mov	r7, r3
 8001394:	898b      	ldrh	r3, [r1, #12]
 8001396:	05db      	lsls	r3, r3, #23
 8001398:	4605      	mov	r5, r0
 800139a:	460c      	mov	r4, r1
 800139c:	4616      	mov	r6, r2
 800139e:	d505      	bpl.n	80013ac <__swrite+0x1e>
 80013a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013a4:	2302      	movs	r3, #2
 80013a6:	2200      	movs	r2, #0
 80013a8:	f000 f868 	bl	800147c <_lseek_r>
 80013ac:	89a3      	ldrh	r3, [r4, #12]
 80013ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013b2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013b6:	81a3      	strh	r3, [r4, #12]
 80013b8:	4632      	mov	r2, r6
 80013ba:	463b      	mov	r3, r7
 80013bc:	4628      	mov	r0, r5
 80013be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013c2:	f000 b817 	b.w	80013f4 <_write_r>

080013c6 <__sseek>:
 80013c6:	b510      	push	{r4, lr}
 80013c8:	460c      	mov	r4, r1
 80013ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ce:	f000 f855 	bl	800147c <_lseek_r>
 80013d2:	1c43      	adds	r3, r0, #1
 80013d4:	89a3      	ldrh	r3, [r4, #12]
 80013d6:	bf15      	itete	ne
 80013d8:	6560      	strne	r0, [r4, #84]	; 0x54
 80013da:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013de:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013e2:	81a3      	strheq	r3, [r4, #12]
 80013e4:	bf18      	it	ne
 80013e6:	81a3      	strhne	r3, [r4, #12]
 80013e8:	bd10      	pop	{r4, pc}

080013ea <__sclose>:
 80013ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ee:	f000 b813 	b.w	8001418 <_close_r>
	...

080013f4 <_write_r>:
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4d07      	ldr	r5, [pc, #28]	; (8001414 <_write_r+0x20>)
 80013f8:	4604      	mov	r4, r0
 80013fa:	4608      	mov	r0, r1
 80013fc:	4611      	mov	r1, r2
 80013fe:	2200      	movs	r2, #0
 8001400:	602a      	str	r2, [r5, #0]
 8001402:	461a      	mov	r2, r3
 8001404:	f7fe ff8f 	bl	8000326 <_write>
 8001408:	1c43      	adds	r3, r0, #1
 800140a:	d102      	bne.n	8001412 <_write_r+0x1e>
 800140c:	682b      	ldr	r3, [r5, #0]
 800140e:	b103      	cbz	r3, 8001412 <_write_r+0x1e>
 8001410:	6023      	str	r3, [r4, #0]
 8001412:	bd38      	pop	{r3, r4, r5, pc}
 8001414:	20000090 	.word	0x20000090

08001418 <_close_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	4d06      	ldr	r5, [pc, #24]	; (8001434 <_close_r+0x1c>)
 800141c:	2300      	movs	r3, #0
 800141e:	4604      	mov	r4, r0
 8001420:	4608      	mov	r0, r1
 8001422:	602b      	str	r3, [r5, #0]
 8001424:	f7fe ff9b 	bl	800035e <_close>
 8001428:	1c43      	adds	r3, r0, #1
 800142a:	d102      	bne.n	8001432 <_close_r+0x1a>
 800142c:	682b      	ldr	r3, [r5, #0]
 800142e:	b103      	cbz	r3, 8001432 <_close_r+0x1a>
 8001430:	6023      	str	r3, [r4, #0]
 8001432:	bd38      	pop	{r3, r4, r5, pc}
 8001434:	20000090 	.word	0x20000090

08001438 <_fstat_r>:
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4d07      	ldr	r5, [pc, #28]	; (8001458 <_fstat_r+0x20>)
 800143c:	2300      	movs	r3, #0
 800143e:	4604      	mov	r4, r0
 8001440:	4608      	mov	r0, r1
 8001442:	4611      	mov	r1, r2
 8001444:	602b      	str	r3, [r5, #0]
 8001446:	f7fe ff95 	bl	8000374 <_fstat>
 800144a:	1c43      	adds	r3, r0, #1
 800144c:	d102      	bne.n	8001454 <_fstat_r+0x1c>
 800144e:	682b      	ldr	r3, [r5, #0]
 8001450:	b103      	cbz	r3, 8001454 <_fstat_r+0x1c>
 8001452:	6023      	str	r3, [r4, #0]
 8001454:	bd38      	pop	{r3, r4, r5, pc}
 8001456:	bf00      	nop
 8001458:	20000090 	.word	0x20000090

0800145c <_isatty_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4d06      	ldr	r5, [pc, #24]	; (8001478 <_isatty_r+0x1c>)
 8001460:	2300      	movs	r3, #0
 8001462:	4604      	mov	r4, r0
 8001464:	4608      	mov	r0, r1
 8001466:	602b      	str	r3, [r5, #0]
 8001468:	f7fe ff93 	bl	8000392 <_isatty>
 800146c:	1c43      	adds	r3, r0, #1
 800146e:	d102      	bne.n	8001476 <_isatty_r+0x1a>
 8001470:	682b      	ldr	r3, [r5, #0]
 8001472:	b103      	cbz	r3, 8001476 <_isatty_r+0x1a>
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	bd38      	pop	{r3, r4, r5, pc}
 8001478:	20000090 	.word	0x20000090

0800147c <_lseek_r>:
 800147c:	b538      	push	{r3, r4, r5, lr}
 800147e:	4d07      	ldr	r5, [pc, #28]	; (800149c <_lseek_r+0x20>)
 8001480:	4604      	mov	r4, r0
 8001482:	4608      	mov	r0, r1
 8001484:	4611      	mov	r1, r2
 8001486:	2200      	movs	r2, #0
 8001488:	602a      	str	r2, [r5, #0]
 800148a:	461a      	mov	r2, r3
 800148c:	f7fe ff8b 	bl	80003a6 <_lseek>
 8001490:	1c43      	adds	r3, r0, #1
 8001492:	d102      	bne.n	800149a <_lseek_r+0x1e>
 8001494:	682b      	ldr	r3, [r5, #0]
 8001496:	b103      	cbz	r3, 800149a <_lseek_r+0x1e>
 8001498:	6023      	str	r3, [r4, #0]
 800149a:	bd38      	pop	{r3, r4, r5, pc}
 800149c:	20000090 	.word	0x20000090

080014a0 <__malloc_lock>:
 80014a0:	4801      	ldr	r0, [pc, #4]	; (80014a8 <__malloc_lock+0x8>)
 80014a2:	f7ff bb21 	b.w	8000ae8 <__retarget_lock_acquire_recursive>
 80014a6:	bf00      	nop
 80014a8:	20000084 	.word	0x20000084

080014ac <__malloc_unlock>:
 80014ac:	4801      	ldr	r0, [pc, #4]	; (80014b4 <__malloc_unlock+0x8>)
 80014ae:	f7ff bb1c 	b.w	8000aea <__retarget_lock_release_recursive>
 80014b2:	bf00      	nop
 80014b4:	20000084 	.word	0x20000084

080014b8 <_read_r>:
 80014b8:	b538      	push	{r3, r4, r5, lr}
 80014ba:	4d07      	ldr	r5, [pc, #28]	; (80014d8 <_read_r+0x20>)
 80014bc:	4604      	mov	r4, r0
 80014be:	4608      	mov	r0, r1
 80014c0:	4611      	mov	r1, r2
 80014c2:	2200      	movs	r2, #0
 80014c4:	602a      	str	r2, [r5, #0]
 80014c6:	461a      	mov	r2, r3
 80014c8:	f7fe ff10 	bl	80002ec <_read>
 80014cc:	1c43      	adds	r3, r0, #1
 80014ce:	d102      	bne.n	80014d6 <_read_r+0x1e>
 80014d0:	682b      	ldr	r3, [r5, #0]
 80014d2:	b103      	cbz	r3, 80014d6 <_read_r+0x1e>
 80014d4:	6023      	str	r3, [r4, #0]
 80014d6:	bd38      	pop	{r3, r4, r5, pc}
 80014d8:	20000090 	.word	0x20000090

080014dc <_init>:
 80014dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014de:	bf00      	nop
 80014e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014e2:	bc08      	pop	{r3}
 80014e4:	469e      	mov	lr, r3
 80014e6:	4770      	bx	lr

080014e8 <_fini>:
 80014e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014ea:	bf00      	nop
 80014ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ee:	bc08      	pop	{r3}
 80014f0:	469e      	mov	lr, r3
 80014f2:	4770      	bx	lr
