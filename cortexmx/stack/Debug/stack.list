
stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001378  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  08001518  08001518  00011518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015d0  080015d0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015d0  080015d0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015d0  080015d0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015d0  080015d0  000115d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015d4  080015d4  000115d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009be  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000370  00000000  00000000  00020a4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000130  00000000  00000000  00020dc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000f8  00000000  00000000  00020ef0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bf8  00000000  00000000  00020fe8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000131e  00000000  00000000  00023be0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009372  00000000  00000000  00024efe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e270  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000be8  00000000  00000000  0002e2c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001500 	.word	0x08001500

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08001500 	.word	0x08001500

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <fun_add>:
#define STACK_MSP_START STACK_START
#define STACK_MSP_END	(STACK_MSP_START + 512)
#define STACK_PSP_START	STACK_MSP_END

int fun_add (int a, int b, int c, int d)
{
 8000280:	b480      	push	{r7}
 8000282:	b085      	sub	sp, #20
 8000284:	af00      	add	r7, sp, #0
 8000286:	60f8      	str	r0, [r7, #12]
 8000288:	60b9      	str	r1, [r7, #8]
 800028a:	607a      	str	r2, [r7, #4]
 800028c:	603b      	str	r3, [r7, #0]
	return a + b + c + d;
 800028e:	68fa      	ldr	r2, [r7, #12]
 8000290:	68bb      	ldr	r3, [r7, #8]
 8000292:	441a      	add	r2, r3
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	441a      	add	r2, r3
 8000298:	683b      	ldr	r3, [r7, #0]
 800029a:	4413      	add	r3, r2
}
 800029c:	4618      	mov	r0, r3
 800029e:	3714      	adds	r7, #20
 80002a0:	46bd      	mov	sp, r7
 80002a2:	bc80      	pop	{r7}
 80002a4:	4770      	bx	lr
	...

080002a8 <change_sp_to_psp>:

__attribute__((naked)) void change_sp_to_psp(void)
{
	__asm volatile(".equ SRAM_END, (0x20000000 + (128 * 1024))");
	__asm volatile(".equ PSP_START, (SRAM_END - 512)");
	__asm volatile("LDR R0,=PSP_START");	// R0 initialization, 這裡不能用 MOV 因為 MOV 必須是 16 bits
 80002a8:	4804      	ldr	r0, [pc, #16]	; (80002bc <change_sp_to_psp+0x14>)
	__asm volatile("MSR PSP, R0");
 80002aa:	f380 8809 	msr	PSP, r0
	__asm volatile("MOV R0,#0X02");
 80002ae:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL,R0");
 80002b2:	f380 8814 	msr	CONTROL, r0
	__asm volatile("BX LR");	// BH: branch indirect, the LR is the register which captures the return address.
 80002b6:	4770      	bx	lr
								// LR knows where to go back when this function finish.
}
 80002b8:	bf00      	nop
 80002ba:	0000      	.short	0x0000
 80002bc:	2001fe00 	.word	0x2001fe00

080002c0 <generate_exception>:

void generate_exception(void)
{
 80002c0:	b480      	push	{r7}
 80002c2:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0X2");
 80002c4:	df02      	svc	2
}
 80002c6:	bf00      	nop
 80002c8:	46bd      	mov	sp, r7
 80002ca:	bc80      	pop	{r7}
 80002cc:	4770      	bx	lr
	...

080002d0 <main>:

int main(void)
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b082      	sub	sp, #8
 80002d4:	af00      	add	r7, sp, #0
	change_sp_to_psp();	// 進入 PSP
 80002d6:	f7ff ffe7 	bl	80002a8 <change_sp_to_psp>
	int ret;
	ret = fun_add(1, 4, 5, 6);
 80002da:	2306      	movs	r3, #6
 80002dc:	2205      	movs	r2, #5
 80002de:	2104      	movs	r1, #4
 80002e0:	2001      	movs	r0, #1
 80002e2:	f7ff ffcd 	bl	8000280 <fun_add>
 80002e6:	6078      	str	r0, [r7, #4]

	printf("result = %d\n", ret);
 80002e8:	6879      	ldr	r1, [r7, #4]
 80002ea:	4803      	ldr	r0, [pc, #12]	; (80002f8 <main+0x28>)
 80002ec:	f000 f90c 	bl	8000508 <iprintf>

	generate_exception();	// 回到 MSP (因為 handler mode)
 80002f0:	f7ff ffe6 	bl	80002c0 <generate_exception>

    /* Loop forever */
	for(;;);
 80002f4:	e7fe      	b.n	80002f4 <main+0x24>
 80002f6:	bf00      	nop
 80002f8:	08001518 	.word	0x08001518

080002fc <SVC_Handler>:
}


void SVC_Handler(void)
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	af00      	add	r7, sp, #0
	printf("in SVC_Handler\n");	 // 這裡 run 完後再次回到 thread mode
 8000300:	4802      	ldr	r0, [pc, #8]	; (800030c <SVC_Handler+0x10>)
 8000302:	f000 f987 	bl	8000614 <puts>
}
 8000306:	bf00      	nop
 8000308:	bd80      	pop	{r7, pc}
 800030a:	bf00      	nop
 800030c:	08001528 	.word	0x08001528

08000310 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000310:	b580      	push	{r7, lr}
 8000312:	b086      	sub	sp, #24
 8000314:	af00      	add	r7, sp, #0
 8000316:	60f8      	str	r0, [r7, #12]
 8000318:	60b9      	str	r1, [r7, #8]
 800031a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031c:	2300      	movs	r3, #0
 800031e:	617b      	str	r3, [r7, #20]
 8000320:	e00a      	b.n	8000338 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000322:	f3af 8000 	nop.w
 8000326:	4601      	mov	r1, r0
 8000328:	68bb      	ldr	r3, [r7, #8]
 800032a:	1c5a      	adds	r2, r3, #1
 800032c:	60ba      	str	r2, [r7, #8]
 800032e:	b2ca      	uxtb	r2, r1
 8000330:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000332:	697b      	ldr	r3, [r7, #20]
 8000334:	3301      	adds	r3, #1
 8000336:	617b      	str	r3, [r7, #20]
 8000338:	697a      	ldr	r2, [r7, #20]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	429a      	cmp	r2, r3
 800033e:	dbf0      	blt.n	8000322 <_read+0x12>
	}

return len;
 8000340:	687b      	ldr	r3, [r7, #4]
}
 8000342:	4618      	mov	r0, r3
 8000344:	3718      	adds	r7, #24
 8000346:	46bd      	mov	sp, r7
 8000348:	bd80      	pop	{r7, pc}

0800034a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800034a:	b580      	push	{r7, lr}
 800034c:	b086      	sub	sp, #24
 800034e:	af00      	add	r7, sp, #0
 8000350:	60f8      	str	r0, [r7, #12]
 8000352:	60b9      	str	r1, [r7, #8]
 8000354:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000356:	2300      	movs	r3, #0
 8000358:	617b      	str	r3, [r7, #20]
 800035a:	e009      	b.n	8000370 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800035c:	68bb      	ldr	r3, [r7, #8]
 800035e:	1c5a      	adds	r2, r3, #1
 8000360:	60ba      	str	r2, [r7, #8]
 8000362:	781b      	ldrb	r3, [r3, #0]
 8000364:	4618      	mov	r0, r3
 8000366:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036a:	697b      	ldr	r3, [r7, #20]
 800036c:	3301      	adds	r3, #1
 800036e:	617b      	str	r3, [r7, #20]
 8000370:	697a      	ldr	r2, [r7, #20]
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	429a      	cmp	r2, r3
 8000376:	dbf1      	blt.n	800035c <_write+0x12>
	}
	return len;
 8000378:	687b      	ldr	r3, [r7, #4]
}
 800037a:	4618      	mov	r0, r3
 800037c:	3718      	adds	r7, #24
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}

08000382 <_close>:

int _close(int file)
{
 8000382:	b480      	push	{r7}
 8000384:	b083      	sub	sp, #12
 8000386:	af00      	add	r7, sp, #0
 8000388:	6078      	str	r0, [r7, #4]
	return -1;
 800038a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800038e:	4618      	mov	r0, r3
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	bc80      	pop	{r7}
 8000396:	4770      	bx	lr

08000398 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
 80003a0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003a2:	683b      	ldr	r3, [r7, #0]
 80003a4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003a8:	605a      	str	r2, [r3, #4]
	return 0;
 80003aa:	2300      	movs	r3, #0
}
 80003ac:	4618      	mov	r0, r3
 80003ae:	370c      	adds	r7, #12
 80003b0:	46bd      	mov	sp, r7
 80003b2:	bc80      	pop	{r7}
 80003b4:	4770      	bx	lr

080003b6 <_isatty>:

int _isatty(int file)
{
 80003b6:	b480      	push	{r7}
 80003b8:	b083      	sub	sp, #12
 80003ba:	af00      	add	r7, sp, #0
 80003bc:	6078      	str	r0, [r7, #4]
	return 1;
 80003be:	2301      	movs	r3, #1
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	370c      	adds	r7, #12
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bc80      	pop	{r7}
 80003c8:	4770      	bx	lr

080003ca <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003ca:	b480      	push	{r7}
 80003cc:	b085      	sub	sp, #20
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	60f8      	str	r0, [r7, #12]
 80003d2:	60b9      	str	r1, [r7, #8]
 80003d4:	607a      	str	r2, [r7, #4]
	return 0;
 80003d6:	2300      	movs	r3, #0
}
 80003d8:	4618      	mov	r0, r3
 80003da:	3714      	adds	r7, #20
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr
	...

080003e4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b086      	sub	sp, #24
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003ec:	4a14      	ldr	r2, [pc, #80]	; (8000440 <_sbrk+0x5c>)
 80003ee:	4b15      	ldr	r3, [pc, #84]	; (8000444 <_sbrk+0x60>)
 80003f0:	1ad3      	subs	r3, r2, r3
 80003f2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003f4:	697b      	ldr	r3, [r7, #20]
 80003f6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003f8:	4b13      	ldr	r3, [pc, #76]	; (8000448 <_sbrk+0x64>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	2b00      	cmp	r3, #0
 80003fe:	d102      	bne.n	8000406 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000400:	4b11      	ldr	r3, [pc, #68]	; (8000448 <_sbrk+0x64>)
 8000402:	4a12      	ldr	r2, [pc, #72]	; (800044c <_sbrk+0x68>)
 8000404:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000406:	4b10      	ldr	r3, [pc, #64]	; (8000448 <_sbrk+0x64>)
 8000408:	681a      	ldr	r2, [r3, #0]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4413      	add	r3, r2
 800040e:	693a      	ldr	r2, [r7, #16]
 8000410:	429a      	cmp	r2, r3
 8000412:	d207      	bcs.n	8000424 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000414:	f000 f846 	bl	80004a4 <__errno>
 8000418:	4603      	mov	r3, r0
 800041a:	220c      	movs	r2, #12
 800041c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800041e:	f04f 33ff 	mov.w	r3, #4294967295
 8000422:	e009      	b.n	8000438 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000424:	4b08      	ldr	r3, [pc, #32]	; (8000448 <_sbrk+0x64>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800042a:	4b07      	ldr	r3, [pc, #28]	; (8000448 <_sbrk+0x64>)
 800042c:	681a      	ldr	r2, [r3, #0]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4413      	add	r3, r2
 8000432:	4a05      	ldr	r2, [pc, #20]	; (8000448 <_sbrk+0x64>)
 8000434:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000436:	68fb      	ldr	r3, [r7, #12]
}
 8000438:	4618      	mov	r0, r3
 800043a:	3718      	adds	r7, #24
 800043c:	46bd      	mov	sp, r7
 800043e:	bd80      	pop	{r7, pc}
 8000440:	20010000 	.word	0x20010000
 8000444:	00000400 	.word	0x00000400
 8000448:	20000080 	.word	0x20000080
 800044c:	20000098 	.word	0x20000098

08000450 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000450:	480d      	ldr	r0, [pc, #52]	; (8000488 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000452:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000454:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000458:	480c      	ldr	r0, [pc, #48]	; (800048c <LoopForever+0x6>)
  ldr r1, =_edata
 800045a:	490d      	ldr	r1, [pc, #52]	; (8000490 <LoopForever+0xa>)
  ldr r2, =_sidata
 800045c:	4a0d      	ldr	r2, [pc, #52]	; (8000494 <LoopForever+0xe>)
  movs r3, #0
 800045e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000460:	e002      	b.n	8000468 <LoopCopyDataInit>

08000462 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000462:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000464:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000466:	3304      	adds	r3, #4

08000468 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000468:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800046a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800046c:	d3f9      	bcc.n	8000462 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800046e:	4a0a      	ldr	r2, [pc, #40]	; (8000498 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000470:	4c0a      	ldr	r4, [pc, #40]	; (800049c <LoopForever+0x16>)
  movs r3, #0
 8000472:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000474:	e001      	b.n	800047a <LoopFillZerobss>

08000476 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000476:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000478:	3204      	adds	r2, #4

0800047a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800047a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800047c:	d3fb      	bcc.n	8000476 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800047e:	f000 f817 	bl	80004b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000482:	f7ff ff25 	bl	80002d0 <main>

08000486 <LoopForever>:

LoopForever:
    b LoopForever
 8000486:	e7fe      	b.n	8000486 <LoopForever>
  ldr   r0, =_estack
 8000488:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800048c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000490:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000494:	080015d8 	.word	0x080015d8
  ldr r2, =_sbss
 8000498:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800049c:	20000094 	.word	0x20000094

080004a0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004a0:	e7fe      	b.n	80004a0 <ADC1_2_IRQHandler>
	...

080004a4 <__errno>:
 80004a4:	4b01      	ldr	r3, [pc, #4]	; (80004ac <__errno+0x8>)
 80004a6:	6818      	ldr	r0, [r3, #0]
 80004a8:	4770      	bx	lr
 80004aa:	bf00      	nop
 80004ac:	20000000 	.word	0x20000000

080004b0 <__libc_init_array>:
 80004b0:	b570      	push	{r4, r5, r6, lr}
 80004b2:	4d0d      	ldr	r5, [pc, #52]	; (80004e8 <__libc_init_array+0x38>)
 80004b4:	4c0d      	ldr	r4, [pc, #52]	; (80004ec <__libc_init_array+0x3c>)
 80004b6:	1b64      	subs	r4, r4, r5
 80004b8:	10a4      	asrs	r4, r4, #2
 80004ba:	2600      	movs	r6, #0
 80004bc:	42a6      	cmp	r6, r4
 80004be:	d109      	bne.n	80004d4 <__libc_init_array+0x24>
 80004c0:	4d0b      	ldr	r5, [pc, #44]	; (80004f0 <__libc_init_array+0x40>)
 80004c2:	4c0c      	ldr	r4, [pc, #48]	; (80004f4 <__libc_init_array+0x44>)
 80004c4:	f001 f81c 	bl	8001500 <_init>
 80004c8:	1b64      	subs	r4, r4, r5
 80004ca:	10a4      	asrs	r4, r4, #2
 80004cc:	2600      	movs	r6, #0
 80004ce:	42a6      	cmp	r6, r4
 80004d0:	d105      	bne.n	80004de <__libc_init_array+0x2e>
 80004d2:	bd70      	pop	{r4, r5, r6, pc}
 80004d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d8:	4798      	blx	r3
 80004da:	3601      	adds	r6, #1
 80004dc:	e7ee      	b.n	80004bc <__libc_init_array+0xc>
 80004de:	f855 3b04 	ldr.w	r3, [r5], #4
 80004e2:	4798      	blx	r3
 80004e4:	3601      	adds	r6, #1
 80004e6:	e7f2      	b.n	80004ce <__libc_init_array+0x1e>
 80004e8:	080015d0 	.word	0x080015d0
 80004ec:	080015d0 	.word	0x080015d0
 80004f0:	080015d0 	.word	0x080015d0
 80004f4:	080015d4 	.word	0x080015d4

080004f8 <memset>:
 80004f8:	4402      	add	r2, r0
 80004fa:	4603      	mov	r3, r0
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d100      	bne.n	8000502 <memset+0xa>
 8000500:	4770      	bx	lr
 8000502:	f803 1b01 	strb.w	r1, [r3], #1
 8000506:	e7f9      	b.n	80004fc <memset+0x4>

08000508 <iprintf>:
 8000508:	b40f      	push	{r0, r1, r2, r3}
 800050a:	4b0a      	ldr	r3, [pc, #40]	; (8000534 <iprintf+0x2c>)
 800050c:	b513      	push	{r0, r1, r4, lr}
 800050e:	681c      	ldr	r4, [r3, #0]
 8000510:	b124      	cbz	r4, 800051c <iprintf+0x14>
 8000512:	69a3      	ldr	r3, [r4, #24]
 8000514:	b913      	cbnz	r3, 800051c <iprintf+0x14>
 8000516:	4620      	mov	r0, r4
 8000518:	f000 fa5a 	bl	80009d0 <__sinit>
 800051c:	ab05      	add	r3, sp, #20
 800051e:	9a04      	ldr	r2, [sp, #16]
 8000520:	68a1      	ldr	r1, [r4, #8]
 8000522:	9301      	str	r3, [sp, #4]
 8000524:	4620      	mov	r0, r4
 8000526:	f000 fc5f 	bl	8000de8 <_vfiprintf_r>
 800052a:	b002      	add	sp, #8
 800052c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000530:	b004      	add	sp, #16
 8000532:	4770      	bx	lr
 8000534:	20000000 	.word	0x20000000

08000538 <_puts_r>:
 8000538:	b570      	push	{r4, r5, r6, lr}
 800053a:	460e      	mov	r6, r1
 800053c:	4605      	mov	r5, r0
 800053e:	b118      	cbz	r0, 8000548 <_puts_r+0x10>
 8000540:	6983      	ldr	r3, [r0, #24]
 8000542:	b90b      	cbnz	r3, 8000548 <_puts_r+0x10>
 8000544:	f000 fa44 	bl	80009d0 <__sinit>
 8000548:	69ab      	ldr	r3, [r5, #24]
 800054a:	68ac      	ldr	r4, [r5, #8]
 800054c:	b913      	cbnz	r3, 8000554 <_puts_r+0x1c>
 800054e:	4628      	mov	r0, r5
 8000550:	f000 fa3e 	bl	80009d0 <__sinit>
 8000554:	4b2c      	ldr	r3, [pc, #176]	; (8000608 <_puts_r+0xd0>)
 8000556:	429c      	cmp	r4, r3
 8000558:	d120      	bne.n	800059c <_puts_r+0x64>
 800055a:	686c      	ldr	r4, [r5, #4]
 800055c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800055e:	07db      	lsls	r3, r3, #31
 8000560:	d405      	bmi.n	800056e <_puts_r+0x36>
 8000562:	89a3      	ldrh	r3, [r4, #12]
 8000564:	0598      	lsls	r0, r3, #22
 8000566:	d402      	bmi.n	800056e <_puts_r+0x36>
 8000568:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800056a:	f000 facf 	bl	8000b0c <__retarget_lock_acquire_recursive>
 800056e:	89a3      	ldrh	r3, [r4, #12]
 8000570:	0719      	lsls	r1, r3, #28
 8000572:	d51d      	bpl.n	80005b0 <_puts_r+0x78>
 8000574:	6923      	ldr	r3, [r4, #16]
 8000576:	b1db      	cbz	r3, 80005b0 <_puts_r+0x78>
 8000578:	3e01      	subs	r6, #1
 800057a:	68a3      	ldr	r3, [r4, #8]
 800057c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000580:	3b01      	subs	r3, #1
 8000582:	60a3      	str	r3, [r4, #8]
 8000584:	bb39      	cbnz	r1, 80005d6 <_puts_r+0x9e>
 8000586:	2b00      	cmp	r3, #0
 8000588:	da38      	bge.n	80005fc <_puts_r+0xc4>
 800058a:	4622      	mov	r2, r4
 800058c:	210a      	movs	r1, #10
 800058e:	4628      	mov	r0, r5
 8000590:	f000 f848 	bl	8000624 <__swbuf_r>
 8000594:	3001      	adds	r0, #1
 8000596:	d011      	beq.n	80005bc <_puts_r+0x84>
 8000598:	250a      	movs	r5, #10
 800059a:	e011      	b.n	80005c0 <_puts_r+0x88>
 800059c:	4b1b      	ldr	r3, [pc, #108]	; (800060c <_puts_r+0xd4>)
 800059e:	429c      	cmp	r4, r3
 80005a0:	d101      	bne.n	80005a6 <_puts_r+0x6e>
 80005a2:	68ac      	ldr	r4, [r5, #8]
 80005a4:	e7da      	b.n	800055c <_puts_r+0x24>
 80005a6:	4b1a      	ldr	r3, [pc, #104]	; (8000610 <_puts_r+0xd8>)
 80005a8:	429c      	cmp	r4, r3
 80005aa:	bf08      	it	eq
 80005ac:	68ec      	ldreq	r4, [r5, #12]
 80005ae:	e7d5      	b.n	800055c <_puts_r+0x24>
 80005b0:	4621      	mov	r1, r4
 80005b2:	4628      	mov	r0, r5
 80005b4:	f000 f888 	bl	80006c8 <__swsetup_r>
 80005b8:	2800      	cmp	r0, #0
 80005ba:	d0dd      	beq.n	8000578 <_puts_r+0x40>
 80005bc:	f04f 35ff 	mov.w	r5, #4294967295
 80005c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80005c2:	07da      	lsls	r2, r3, #31
 80005c4:	d405      	bmi.n	80005d2 <_puts_r+0x9a>
 80005c6:	89a3      	ldrh	r3, [r4, #12]
 80005c8:	059b      	lsls	r3, r3, #22
 80005ca:	d402      	bmi.n	80005d2 <_puts_r+0x9a>
 80005cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005ce:	f000 fa9e 	bl	8000b0e <__retarget_lock_release_recursive>
 80005d2:	4628      	mov	r0, r5
 80005d4:	bd70      	pop	{r4, r5, r6, pc}
 80005d6:	2b00      	cmp	r3, #0
 80005d8:	da04      	bge.n	80005e4 <_puts_r+0xac>
 80005da:	69a2      	ldr	r2, [r4, #24]
 80005dc:	429a      	cmp	r2, r3
 80005de:	dc06      	bgt.n	80005ee <_puts_r+0xb6>
 80005e0:	290a      	cmp	r1, #10
 80005e2:	d004      	beq.n	80005ee <_puts_r+0xb6>
 80005e4:	6823      	ldr	r3, [r4, #0]
 80005e6:	1c5a      	adds	r2, r3, #1
 80005e8:	6022      	str	r2, [r4, #0]
 80005ea:	7019      	strb	r1, [r3, #0]
 80005ec:	e7c5      	b.n	800057a <_puts_r+0x42>
 80005ee:	4622      	mov	r2, r4
 80005f0:	4628      	mov	r0, r5
 80005f2:	f000 f817 	bl	8000624 <__swbuf_r>
 80005f6:	3001      	adds	r0, #1
 80005f8:	d1bf      	bne.n	800057a <_puts_r+0x42>
 80005fa:	e7df      	b.n	80005bc <_puts_r+0x84>
 80005fc:	6823      	ldr	r3, [r4, #0]
 80005fe:	250a      	movs	r5, #10
 8000600:	1c5a      	adds	r2, r3, #1
 8000602:	6022      	str	r2, [r4, #0]
 8000604:	701d      	strb	r5, [r3, #0]
 8000606:	e7db      	b.n	80005c0 <_puts_r+0x88>
 8000608:	0800155c 	.word	0x0800155c
 800060c:	0800157c 	.word	0x0800157c
 8000610:	0800153c 	.word	0x0800153c

08000614 <puts>:
 8000614:	4b02      	ldr	r3, [pc, #8]	; (8000620 <puts+0xc>)
 8000616:	4601      	mov	r1, r0
 8000618:	6818      	ldr	r0, [r3, #0]
 800061a:	f7ff bf8d 	b.w	8000538 <_puts_r>
 800061e:	bf00      	nop
 8000620:	20000000 	.word	0x20000000

08000624 <__swbuf_r>:
 8000624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000626:	460e      	mov	r6, r1
 8000628:	4614      	mov	r4, r2
 800062a:	4605      	mov	r5, r0
 800062c:	b118      	cbz	r0, 8000636 <__swbuf_r+0x12>
 800062e:	6983      	ldr	r3, [r0, #24]
 8000630:	b90b      	cbnz	r3, 8000636 <__swbuf_r+0x12>
 8000632:	f000 f9cd 	bl	80009d0 <__sinit>
 8000636:	4b21      	ldr	r3, [pc, #132]	; (80006bc <__swbuf_r+0x98>)
 8000638:	429c      	cmp	r4, r3
 800063a:	d12b      	bne.n	8000694 <__swbuf_r+0x70>
 800063c:	686c      	ldr	r4, [r5, #4]
 800063e:	69a3      	ldr	r3, [r4, #24]
 8000640:	60a3      	str	r3, [r4, #8]
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	071a      	lsls	r2, r3, #28
 8000646:	d52f      	bpl.n	80006a8 <__swbuf_r+0x84>
 8000648:	6923      	ldr	r3, [r4, #16]
 800064a:	b36b      	cbz	r3, 80006a8 <__swbuf_r+0x84>
 800064c:	6923      	ldr	r3, [r4, #16]
 800064e:	6820      	ldr	r0, [r4, #0]
 8000650:	1ac0      	subs	r0, r0, r3
 8000652:	6963      	ldr	r3, [r4, #20]
 8000654:	b2f6      	uxtb	r6, r6
 8000656:	4283      	cmp	r3, r0
 8000658:	4637      	mov	r7, r6
 800065a:	dc04      	bgt.n	8000666 <__swbuf_r+0x42>
 800065c:	4621      	mov	r1, r4
 800065e:	4628      	mov	r0, r5
 8000660:	f000 f922 	bl	80008a8 <_fflush_r>
 8000664:	bb30      	cbnz	r0, 80006b4 <__swbuf_r+0x90>
 8000666:	68a3      	ldr	r3, [r4, #8]
 8000668:	3b01      	subs	r3, #1
 800066a:	60a3      	str	r3, [r4, #8]
 800066c:	6823      	ldr	r3, [r4, #0]
 800066e:	1c5a      	adds	r2, r3, #1
 8000670:	6022      	str	r2, [r4, #0]
 8000672:	701e      	strb	r6, [r3, #0]
 8000674:	6963      	ldr	r3, [r4, #20]
 8000676:	3001      	adds	r0, #1
 8000678:	4283      	cmp	r3, r0
 800067a:	d004      	beq.n	8000686 <__swbuf_r+0x62>
 800067c:	89a3      	ldrh	r3, [r4, #12]
 800067e:	07db      	lsls	r3, r3, #31
 8000680:	d506      	bpl.n	8000690 <__swbuf_r+0x6c>
 8000682:	2e0a      	cmp	r6, #10
 8000684:	d104      	bne.n	8000690 <__swbuf_r+0x6c>
 8000686:	4621      	mov	r1, r4
 8000688:	4628      	mov	r0, r5
 800068a:	f000 f90d 	bl	80008a8 <_fflush_r>
 800068e:	b988      	cbnz	r0, 80006b4 <__swbuf_r+0x90>
 8000690:	4638      	mov	r0, r7
 8000692:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000694:	4b0a      	ldr	r3, [pc, #40]	; (80006c0 <__swbuf_r+0x9c>)
 8000696:	429c      	cmp	r4, r3
 8000698:	d101      	bne.n	800069e <__swbuf_r+0x7a>
 800069a:	68ac      	ldr	r4, [r5, #8]
 800069c:	e7cf      	b.n	800063e <__swbuf_r+0x1a>
 800069e:	4b09      	ldr	r3, [pc, #36]	; (80006c4 <__swbuf_r+0xa0>)
 80006a0:	429c      	cmp	r4, r3
 80006a2:	bf08      	it	eq
 80006a4:	68ec      	ldreq	r4, [r5, #12]
 80006a6:	e7ca      	b.n	800063e <__swbuf_r+0x1a>
 80006a8:	4621      	mov	r1, r4
 80006aa:	4628      	mov	r0, r5
 80006ac:	f000 f80c 	bl	80006c8 <__swsetup_r>
 80006b0:	2800      	cmp	r0, #0
 80006b2:	d0cb      	beq.n	800064c <__swbuf_r+0x28>
 80006b4:	f04f 37ff 	mov.w	r7, #4294967295
 80006b8:	e7ea      	b.n	8000690 <__swbuf_r+0x6c>
 80006ba:	bf00      	nop
 80006bc:	0800155c 	.word	0x0800155c
 80006c0:	0800157c 	.word	0x0800157c
 80006c4:	0800153c 	.word	0x0800153c

080006c8 <__swsetup_r>:
 80006c8:	4b32      	ldr	r3, [pc, #200]	; (8000794 <__swsetup_r+0xcc>)
 80006ca:	b570      	push	{r4, r5, r6, lr}
 80006cc:	681d      	ldr	r5, [r3, #0]
 80006ce:	4606      	mov	r6, r0
 80006d0:	460c      	mov	r4, r1
 80006d2:	b125      	cbz	r5, 80006de <__swsetup_r+0x16>
 80006d4:	69ab      	ldr	r3, [r5, #24]
 80006d6:	b913      	cbnz	r3, 80006de <__swsetup_r+0x16>
 80006d8:	4628      	mov	r0, r5
 80006da:	f000 f979 	bl	80009d0 <__sinit>
 80006de:	4b2e      	ldr	r3, [pc, #184]	; (8000798 <__swsetup_r+0xd0>)
 80006e0:	429c      	cmp	r4, r3
 80006e2:	d10f      	bne.n	8000704 <__swsetup_r+0x3c>
 80006e4:	686c      	ldr	r4, [r5, #4]
 80006e6:	89a3      	ldrh	r3, [r4, #12]
 80006e8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006ec:	0719      	lsls	r1, r3, #28
 80006ee:	d42c      	bmi.n	800074a <__swsetup_r+0x82>
 80006f0:	06dd      	lsls	r5, r3, #27
 80006f2:	d411      	bmi.n	8000718 <__swsetup_r+0x50>
 80006f4:	2309      	movs	r3, #9
 80006f6:	6033      	str	r3, [r6, #0]
 80006f8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006fc:	81a3      	strh	r3, [r4, #12]
 80006fe:	f04f 30ff 	mov.w	r0, #4294967295
 8000702:	e03e      	b.n	8000782 <__swsetup_r+0xba>
 8000704:	4b25      	ldr	r3, [pc, #148]	; (800079c <__swsetup_r+0xd4>)
 8000706:	429c      	cmp	r4, r3
 8000708:	d101      	bne.n	800070e <__swsetup_r+0x46>
 800070a:	68ac      	ldr	r4, [r5, #8]
 800070c:	e7eb      	b.n	80006e6 <__swsetup_r+0x1e>
 800070e:	4b24      	ldr	r3, [pc, #144]	; (80007a0 <__swsetup_r+0xd8>)
 8000710:	429c      	cmp	r4, r3
 8000712:	bf08      	it	eq
 8000714:	68ec      	ldreq	r4, [r5, #12]
 8000716:	e7e6      	b.n	80006e6 <__swsetup_r+0x1e>
 8000718:	0758      	lsls	r0, r3, #29
 800071a:	d512      	bpl.n	8000742 <__swsetup_r+0x7a>
 800071c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800071e:	b141      	cbz	r1, 8000732 <__swsetup_r+0x6a>
 8000720:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000724:	4299      	cmp	r1, r3
 8000726:	d002      	beq.n	800072e <__swsetup_r+0x66>
 8000728:	4630      	mov	r0, r6
 800072a:	f000 fa57 	bl	8000bdc <_free_r>
 800072e:	2300      	movs	r3, #0
 8000730:	6363      	str	r3, [r4, #52]	; 0x34
 8000732:	89a3      	ldrh	r3, [r4, #12]
 8000734:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000738:	81a3      	strh	r3, [r4, #12]
 800073a:	2300      	movs	r3, #0
 800073c:	6063      	str	r3, [r4, #4]
 800073e:	6923      	ldr	r3, [r4, #16]
 8000740:	6023      	str	r3, [r4, #0]
 8000742:	89a3      	ldrh	r3, [r4, #12]
 8000744:	f043 0308 	orr.w	r3, r3, #8
 8000748:	81a3      	strh	r3, [r4, #12]
 800074a:	6923      	ldr	r3, [r4, #16]
 800074c:	b94b      	cbnz	r3, 8000762 <__swsetup_r+0x9a>
 800074e:	89a3      	ldrh	r3, [r4, #12]
 8000750:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000754:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000758:	d003      	beq.n	8000762 <__swsetup_r+0x9a>
 800075a:	4621      	mov	r1, r4
 800075c:	4630      	mov	r0, r6
 800075e:	f000 f9fd 	bl	8000b5c <__smakebuf_r>
 8000762:	89a0      	ldrh	r0, [r4, #12]
 8000764:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000768:	f010 0301 	ands.w	r3, r0, #1
 800076c:	d00a      	beq.n	8000784 <__swsetup_r+0xbc>
 800076e:	2300      	movs	r3, #0
 8000770:	60a3      	str	r3, [r4, #8]
 8000772:	6963      	ldr	r3, [r4, #20]
 8000774:	425b      	negs	r3, r3
 8000776:	61a3      	str	r3, [r4, #24]
 8000778:	6923      	ldr	r3, [r4, #16]
 800077a:	b943      	cbnz	r3, 800078e <__swsetup_r+0xc6>
 800077c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000780:	d1ba      	bne.n	80006f8 <__swsetup_r+0x30>
 8000782:	bd70      	pop	{r4, r5, r6, pc}
 8000784:	0781      	lsls	r1, r0, #30
 8000786:	bf58      	it	pl
 8000788:	6963      	ldrpl	r3, [r4, #20]
 800078a:	60a3      	str	r3, [r4, #8]
 800078c:	e7f4      	b.n	8000778 <__swsetup_r+0xb0>
 800078e:	2000      	movs	r0, #0
 8000790:	e7f7      	b.n	8000782 <__swsetup_r+0xba>
 8000792:	bf00      	nop
 8000794:	20000000 	.word	0x20000000
 8000798:	0800155c 	.word	0x0800155c
 800079c:	0800157c 	.word	0x0800157c
 80007a0:	0800153c 	.word	0x0800153c

080007a4 <__sflush_r>:
 80007a4:	898a      	ldrh	r2, [r1, #12]
 80007a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007a8:	4605      	mov	r5, r0
 80007aa:	0710      	lsls	r0, r2, #28
 80007ac:	460c      	mov	r4, r1
 80007ae:	d457      	bmi.n	8000860 <__sflush_r+0xbc>
 80007b0:	684b      	ldr	r3, [r1, #4]
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	dc04      	bgt.n	80007c0 <__sflush_r+0x1c>
 80007b6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80007b8:	2b00      	cmp	r3, #0
 80007ba:	dc01      	bgt.n	80007c0 <__sflush_r+0x1c>
 80007bc:	2000      	movs	r0, #0
 80007be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007c0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007c2:	2e00      	cmp	r6, #0
 80007c4:	d0fa      	beq.n	80007bc <__sflush_r+0x18>
 80007c6:	2300      	movs	r3, #0
 80007c8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80007cc:	682f      	ldr	r7, [r5, #0]
 80007ce:	602b      	str	r3, [r5, #0]
 80007d0:	d032      	beq.n	8000838 <__sflush_r+0x94>
 80007d2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007d4:	89a3      	ldrh	r3, [r4, #12]
 80007d6:	075a      	lsls	r2, r3, #29
 80007d8:	d505      	bpl.n	80007e6 <__sflush_r+0x42>
 80007da:	6863      	ldr	r3, [r4, #4]
 80007dc:	1ac0      	subs	r0, r0, r3
 80007de:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007e0:	b10b      	cbz	r3, 80007e6 <__sflush_r+0x42>
 80007e2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007e4:	1ac0      	subs	r0, r0, r3
 80007e6:	2300      	movs	r3, #0
 80007e8:	4602      	mov	r2, r0
 80007ea:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007ec:	6a21      	ldr	r1, [r4, #32]
 80007ee:	4628      	mov	r0, r5
 80007f0:	47b0      	blx	r6
 80007f2:	1c43      	adds	r3, r0, #1
 80007f4:	89a3      	ldrh	r3, [r4, #12]
 80007f6:	d106      	bne.n	8000806 <__sflush_r+0x62>
 80007f8:	6829      	ldr	r1, [r5, #0]
 80007fa:	291d      	cmp	r1, #29
 80007fc:	d82c      	bhi.n	8000858 <__sflush_r+0xb4>
 80007fe:	4a29      	ldr	r2, [pc, #164]	; (80008a4 <__sflush_r+0x100>)
 8000800:	40ca      	lsrs	r2, r1
 8000802:	07d6      	lsls	r6, r2, #31
 8000804:	d528      	bpl.n	8000858 <__sflush_r+0xb4>
 8000806:	2200      	movs	r2, #0
 8000808:	6062      	str	r2, [r4, #4]
 800080a:	04d9      	lsls	r1, r3, #19
 800080c:	6922      	ldr	r2, [r4, #16]
 800080e:	6022      	str	r2, [r4, #0]
 8000810:	d504      	bpl.n	800081c <__sflush_r+0x78>
 8000812:	1c42      	adds	r2, r0, #1
 8000814:	d101      	bne.n	800081a <__sflush_r+0x76>
 8000816:	682b      	ldr	r3, [r5, #0]
 8000818:	b903      	cbnz	r3, 800081c <__sflush_r+0x78>
 800081a:	6560      	str	r0, [r4, #84]	; 0x54
 800081c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800081e:	602f      	str	r7, [r5, #0]
 8000820:	2900      	cmp	r1, #0
 8000822:	d0cb      	beq.n	80007bc <__sflush_r+0x18>
 8000824:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000828:	4299      	cmp	r1, r3
 800082a:	d002      	beq.n	8000832 <__sflush_r+0x8e>
 800082c:	4628      	mov	r0, r5
 800082e:	f000 f9d5 	bl	8000bdc <_free_r>
 8000832:	2000      	movs	r0, #0
 8000834:	6360      	str	r0, [r4, #52]	; 0x34
 8000836:	e7c2      	b.n	80007be <__sflush_r+0x1a>
 8000838:	6a21      	ldr	r1, [r4, #32]
 800083a:	2301      	movs	r3, #1
 800083c:	4628      	mov	r0, r5
 800083e:	47b0      	blx	r6
 8000840:	1c41      	adds	r1, r0, #1
 8000842:	d1c7      	bne.n	80007d4 <__sflush_r+0x30>
 8000844:	682b      	ldr	r3, [r5, #0]
 8000846:	2b00      	cmp	r3, #0
 8000848:	d0c4      	beq.n	80007d4 <__sflush_r+0x30>
 800084a:	2b1d      	cmp	r3, #29
 800084c:	d001      	beq.n	8000852 <__sflush_r+0xae>
 800084e:	2b16      	cmp	r3, #22
 8000850:	d101      	bne.n	8000856 <__sflush_r+0xb2>
 8000852:	602f      	str	r7, [r5, #0]
 8000854:	e7b2      	b.n	80007bc <__sflush_r+0x18>
 8000856:	89a3      	ldrh	r3, [r4, #12]
 8000858:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800085c:	81a3      	strh	r3, [r4, #12]
 800085e:	e7ae      	b.n	80007be <__sflush_r+0x1a>
 8000860:	690f      	ldr	r7, [r1, #16]
 8000862:	2f00      	cmp	r7, #0
 8000864:	d0aa      	beq.n	80007bc <__sflush_r+0x18>
 8000866:	0793      	lsls	r3, r2, #30
 8000868:	680e      	ldr	r6, [r1, #0]
 800086a:	bf08      	it	eq
 800086c:	694b      	ldreq	r3, [r1, #20]
 800086e:	600f      	str	r7, [r1, #0]
 8000870:	bf18      	it	ne
 8000872:	2300      	movne	r3, #0
 8000874:	1bf6      	subs	r6, r6, r7
 8000876:	608b      	str	r3, [r1, #8]
 8000878:	2e00      	cmp	r6, #0
 800087a:	dd9f      	ble.n	80007bc <__sflush_r+0x18>
 800087c:	6a21      	ldr	r1, [r4, #32]
 800087e:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000882:	4633      	mov	r3, r6
 8000884:	463a      	mov	r2, r7
 8000886:	4628      	mov	r0, r5
 8000888:	47e0      	blx	ip
 800088a:	2800      	cmp	r0, #0
 800088c:	dc06      	bgt.n	800089c <__sflush_r+0xf8>
 800088e:	89a3      	ldrh	r3, [r4, #12]
 8000890:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000894:	81a3      	strh	r3, [r4, #12]
 8000896:	f04f 30ff 	mov.w	r0, #4294967295
 800089a:	e790      	b.n	80007be <__sflush_r+0x1a>
 800089c:	4407      	add	r7, r0
 800089e:	1a36      	subs	r6, r6, r0
 80008a0:	e7ea      	b.n	8000878 <__sflush_r+0xd4>
 80008a2:	bf00      	nop
 80008a4:	20400001 	.word	0x20400001

080008a8 <_fflush_r>:
 80008a8:	b538      	push	{r3, r4, r5, lr}
 80008aa:	690b      	ldr	r3, [r1, #16]
 80008ac:	4605      	mov	r5, r0
 80008ae:	460c      	mov	r4, r1
 80008b0:	b913      	cbnz	r3, 80008b8 <_fflush_r+0x10>
 80008b2:	2500      	movs	r5, #0
 80008b4:	4628      	mov	r0, r5
 80008b6:	bd38      	pop	{r3, r4, r5, pc}
 80008b8:	b118      	cbz	r0, 80008c2 <_fflush_r+0x1a>
 80008ba:	6983      	ldr	r3, [r0, #24]
 80008bc:	b90b      	cbnz	r3, 80008c2 <_fflush_r+0x1a>
 80008be:	f000 f887 	bl	80009d0 <__sinit>
 80008c2:	4b14      	ldr	r3, [pc, #80]	; (8000914 <_fflush_r+0x6c>)
 80008c4:	429c      	cmp	r4, r3
 80008c6:	d11b      	bne.n	8000900 <_fflush_r+0x58>
 80008c8:	686c      	ldr	r4, [r5, #4]
 80008ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008ce:	2b00      	cmp	r3, #0
 80008d0:	d0ef      	beq.n	80008b2 <_fflush_r+0xa>
 80008d2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008d4:	07d0      	lsls	r0, r2, #31
 80008d6:	d404      	bmi.n	80008e2 <_fflush_r+0x3a>
 80008d8:	0599      	lsls	r1, r3, #22
 80008da:	d402      	bmi.n	80008e2 <_fflush_r+0x3a>
 80008dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008de:	f000 f915 	bl	8000b0c <__retarget_lock_acquire_recursive>
 80008e2:	4628      	mov	r0, r5
 80008e4:	4621      	mov	r1, r4
 80008e6:	f7ff ff5d 	bl	80007a4 <__sflush_r>
 80008ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008ec:	07da      	lsls	r2, r3, #31
 80008ee:	4605      	mov	r5, r0
 80008f0:	d4e0      	bmi.n	80008b4 <_fflush_r+0xc>
 80008f2:	89a3      	ldrh	r3, [r4, #12]
 80008f4:	059b      	lsls	r3, r3, #22
 80008f6:	d4dd      	bmi.n	80008b4 <_fflush_r+0xc>
 80008f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008fa:	f000 f908 	bl	8000b0e <__retarget_lock_release_recursive>
 80008fe:	e7d9      	b.n	80008b4 <_fflush_r+0xc>
 8000900:	4b05      	ldr	r3, [pc, #20]	; (8000918 <_fflush_r+0x70>)
 8000902:	429c      	cmp	r4, r3
 8000904:	d101      	bne.n	800090a <_fflush_r+0x62>
 8000906:	68ac      	ldr	r4, [r5, #8]
 8000908:	e7df      	b.n	80008ca <_fflush_r+0x22>
 800090a:	4b04      	ldr	r3, [pc, #16]	; (800091c <_fflush_r+0x74>)
 800090c:	429c      	cmp	r4, r3
 800090e:	bf08      	it	eq
 8000910:	68ec      	ldreq	r4, [r5, #12]
 8000912:	e7da      	b.n	80008ca <_fflush_r+0x22>
 8000914:	0800155c 	.word	0x0800155c
 8000918:	0800157c 	.word	0x0800157c
 800091c:	0800153c 	.word	0x0800153c

08000920 <std>:
 8000920:	2300      	movs	r3, #0
 8000922:	b510      	push	{r4, lr}
 8000924:	4604      	mov	r4, r0
 8000926:	e9c0 3300 	strd	r3, r3, [r0]
 800092a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800092e:	6083      	str	r3, [r0, #8]
 8000930:	8181      	strh	r1, [r0, #12]
 8000932:	6643      	str	r3, [r0, #100]	; 0x64
 8000934:	81c2      	strh	r2, [r0, #14]
 8000936:	6183      	str	r3, [r0, #24]
 8000938:	4619      	mov	r1, r3
 800093a:	2208      	movs	r2, #8
 800093c:	305c      	adds	r0, #92	; 0x5c
 800093e:	f7ff fddb 	bl	80004f8 <memset>
 8000942:	4b05      	ldr	r3, [pc, #20]	; (8000958 <std+0x38>)
 8000944:	6263      	str	r3, [r4, #36]	; 0x24
 8000946:	4b05      	ldr	r3, [pc, #20]	; (800095c <std+0x3c>)
 8000948:	62a3      	str	r3, [r4, #40]	; 0x28
 800094a:	4b05      	ldr	r3, [pc, #20]	; (8000960 <std+0x40>)
 800094c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800094e:	4b05      	ldr	r3, [pc, #20]	; (8000964 <std+0x44>)
 8000950:	6224      	str	r4, [r4, #32]
 8000952:	6323      	str	r3, [r4, #48]	; 0x30
 8000954:	bd10      	pop	{r4, pc}
 8000956:	bf00      	nop
 8000958:	08001391 	.word	0x08001391
 800095c:	080013b3 	.word	0x080013b3
 8000960:	080013eb 	.word	0x080013eb
 8000964:	0800140f 	.word	0x0800140f

08000968 <_cleanup_r>:
 8000968:	4901      	ldr	r1, [pc, #4]	; (8000970 <_cleanup_r+0x8>)
 800096a:	f000 b8af 	b.w	8000acc <_fwalk_reent>
 800096e:	bf00      	nop
 8000970:	080008a9 	.word	0x080008a9

08000974 <__sfmoreglue>:
 8000974:	b570      	push	{r4, r5, r6, lr}
 8000976:	2268      	movs	r2, #104	; 0x68
 8000978:	1e4d      	subs	r5, r1, #1
 800097a:	4355      	muls	r5, r2
 800097c:	460e      	mov	r6, r1
 800097e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000982:	f000 f995 	bl	8000cb0 <_malloc_r>
 8000986:	4604      	mov	r4, r0
 8000988:	b140      	cbz	r0, 800099c <__sfmoreglue+0x28>
 800098a:	2100      	movs	r1, #0
 800098c:	e9c0 1600 	strd	r1, r6, [r0]
 8000990:	300c      	adds	r0, #12
 8000992:	60a0      	str	r0, [r4, #8]
 8000994:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000998:	f7ff fdae 	bl	80004f8 <memset>
 800099c:	4620      	mov	r0, r4
 800099e:	bd70      	pop	{r4, r5, r6, pc}

080009a0 <__sfp_lock_acquire>:
 80009a0:	4801      	ldr	r0, [pc, #4]	; (80009a8 <__sfp_lock_acquire+0x8>)
 80009a2:	f000 b8b3 	b.w	8000b0c <__retarget_lock_acquire_recursive>
 80009a6:	bf00      	nop
 80009a8:	20000085 	.word	0x20000085

080009ac <__sfp_lock_release>:
 80009ac:	4801      	ldr	r0, [pc, #4]	; (80009b4 <__sfp_lock_release+0x8>)
 80009ae:	f000 b8ae 	b.w	8000b0e <__retarget_lock_release_recursive>
 80009b2:	bf00      	nop
 80009b4:	20000085 	.word	0x20000085

080009b8 <__sinit_lock_acquire>:
 80009b8:	4801      	ldr	r0, [pc, #4]	; (80009c0 <__sinit_lock_acquire+0x8>)
 80009ba:	f000 b8a7 	b.w	8000b0c <__retarget_lock_acquire_recursive>
 80009be:	bf00      	nop
 80009c0:	20000086 	.word	0x20000086

080009c4 <__sinit_lock_release>:
 80009c4:	4801      	ldr	r0, [pc, #4]	; (80009cc <__sinit_lock_release+0x8>)
 80009c6:	f000 b8a2 	b.w	8000b0e <__retarget_lock_release_recursive>
 80009ca:	bf00      	nop
 80009cc:	20000086 	.word	0x20000086

080009d0 <__sinit>:
 80009d0:	b510      	push	{r4, lr}
 80009d2:	4604      	mov	r4, r0
 80009d4:	f7ff fff0 	bl	80009b8 <__sinit_lock_acquire>
 80009d8:	69a3      	ldr	r3, [r4, #24]
 80009da:	b11b      	cbz	r3, 80009e4 <__sinit+0x14>
 80009dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009e0:	f7ff bff0 	b.w	80009c4 <__sinit_lock_release>
 80009e4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009e8:	6523      	str	r3, [r4, #80]	; 0x50
 80009ea:	4b13      	ldr	r3, [pc, #76]	; (8000a38 <__sinit+0x68>)
 80009ec:	4a13      	ldr	r2, [pc, #76]	; (8000a3c <__sinit+0x6c>)
 80009ee:	681b      	ldr	r3, [r3, #0]
 80009f0:	62a2      	str	r2, [r4, #40]	; 0x28
 80009f2:	42a3      	cmp	r3, r4
 80009f4:	bf04      	itt	eq
 80009f6:	2301      	moveq	r3, #1
 80009f8:	61a3      	streq	r3, [r4, #24]
 80009fa:	4620      	mov	r0, r4
 80009fc:	f000 f820 	bl	8000a40 <__sfp>
 8000a00:	6060      	str	r0, [r4, #4]
 8000a02:	4620      	mov	r0, r4
 8000a04:	f000 f81c 	bl	8000a40 <__sfp>
 8000a08:	60a0      	str	r0, [r4, #8]
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	f000 f818 	bl	8000a40 <__sfp>
 8000a10:	2200      	movs	r2, #0
 8000a12:	60e0      	str	r0, [r4, #12]
 8000a14:	2104      	movs	r1, #4
 8000a16:	6860      	ldr	r0, [r4, #4]
 8000a18:	f7ff ff82 	bl	8000920 <std>
 8000a1c:	68a0      	ldr	r0, [r4, #8]
 8000a1e:	2201      	movs	r2, #1
 8000a20:	2109      	movs	r1, #9
 8000a22:	f7ff ff7d 	bl	8000920 <std>
 8000a26:	68e0      	ldr	r0, [r4, #12]
 8000a28:	2202      	movs	r2, #2
 8000a2a:	2112      	movs	r1, #18
 8000a2c:	f7ff ff78 	bl	8000920 <std>
 8000a30:	2301      	movs	r3, #1
 8000a32:	61a3      	str	r3, [r4, #24]
 8000a34:	e7d2      	b.n	80009dc <__sinit+0xc>
 8000a36:	bf00      	nop
 8000a38:	08001538 	.word	0x08001538
 8000a3c:	08000969 	.word	0x08000969

08000a40 <__sfp>:
 8000a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a42:	4607      	mov	r7, r0
 8000a44:	f7ff ffac 	bl	80009a0 <__sfp_lock_acquire>
 8000a48:	4b1e      	ldr	r3, [pc, #120]	; (8000ac4 <__sfp+0x84>)
 8000a4a:	681e      	ldr	r6, [r3, #0]
 8000a4c:	69b3      	ldr	r3, [r6, #24]
 8000a4e:	b913      	cbnz	r3, 8000a56 <__sfp+0x16>
 8000a50:	4630      	mov	r0, r6
 8000a52:	f7ff ffbd 	bl	80009d0 <__sinit>
 8000a56:	3648      	adds	r6, #72	; 0x48
 8000a58:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a5c:	3b01      	subs	r3, #1
 8000a5e:	d503      	bpl.n	8000a68 <__sfp+0x28>
 8000a60:	6833      	ldr	r3, [r6, #0]
 8000a62:	b30b      	cbz	r3, 8000aa8 <__sfp+0x68>
 8000a64:	6836      	ldr	r6, [r6, #0]
 8000a66:	e7f7      	b.n	8000a58 <__sfp+0x18>
 8000a68:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a6c:	b9d5      	cbnz	r5, 8000aa4 <__sfp+0x64>
 8000a6e:	4b16      	ldr	r3, [pc, #88]	; (8000ac8 <__sfp+0x88>)
 8000a70:	60e3      	str	r3, [r4, #12]
 8000a72:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a76:	6665      	str	r5, [r4, #100]	; 0x64
 8000a78:	f000 f847 	bl	8000b0a <__retarget_lock_init_recursive>
 8000a7c:	f7ff ff96 	bl	80009ac <__sfp_lock_release>
 8000a80:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a84:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a88:	6025      	str	r5, [r4, #0]
 8000a8a:	61a5      	str	r5, [r4, #24]
 8000a8c:	2208      	movs	r2, #8
 8000a8e:	4629      	mov	r1, r5
 8000a90:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a94:	f7ff fd30 	bl	80004f8 <memset>
 8000a98:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a9c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000aa0:	4620      	mov	r0, r4
 8000aa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000aa4:	3468      	adds	r4, #104	; 0x68
 8000aa6:	e7d9      	b.n	8000a5c <__sfp+0x1c>
 8000aa8:	2104      	movs	r1, #4
 8000aaa:	4638      	mov	r0, r7
 8000aac:	f7ff ff62 	bl	8000974 <__sfmoreglue>
 8000ab0:	4604      	mov	r4, r0
 8000ab2:	6030      	str	r0, [r6, #0]
 8000ab4:	2800      	cmp	r0, #0
 8000ab6:	d1d5      	bne.n	8000a64 <__sfp+0x24>
 8000ab8:	f7ff ff78 	bl	80009ac <__sfp_lock_release>
 8000abc:	230c      	movs	r3, #12
 8000abe:	603b      	str	r3, [r7, #0]
 8000ac0:	e7ee      	b.n	8000aa0 <__sfp+0x60>
 8000ac2:	bf00      	nop
 8000ac4:	08001538 	.word	0x08001538
 8000ac8:	ffff0001 	.word	0xffff0001

08000acc <_fwalk_reent>:
 8000acc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ad0:	4606      	mov	r6, r0
 8000ad2:	4688      	mov	r8, r1
 8000ad4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000ad8:	2700      	movs	r7, #0
 8000ada:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000ade:	f1b9 0901 	subs.w	r9, r9, #1
 8000ae2:	d505      	bpl.n	8000af0 <_fwalk_reent+0x24>
 8000ae4:	6824      	ldr	r4, [r4, #0]
 8000ae6:	2c00      	cmp	r4, #0
 8000ae8:	d1f7      	bne.n	8000ada <_fwalk_reent+0xe>
 8000aea:	4638      	mov	r0, r7
 8000aec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000af0:	89ab      	ldrh	r3, [r5, #12]
 8000af2:	2b01      	cmp	r3, #1
 8000af4:	d907      	bls.n	8000b06 <_fwalk_reent+0x3a>
 8000af6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000afa:	3301      	adds	r3, #1
 8000afc:	d003      	beq.n	8000b06 <_fwalk_reent+0x3a>
 8000afe:	4629      	mov	r1, r5
 8000b00:	4630      	mov	r0, r6
 8000b02:	47c0      	blx	r8
 8000b04:	4307      	orrs	r7, r0
 8000b06:	3568      	adds	r5, #104	; 0x68
 8000b08:	e7e9      	b.n	8000ade <_fwalk_reent+0x12>

08000b0a <__retarget_lock_init_recursive>:
 8000b0a:	4770      	bx	lr

08000b0c <__retarget_lock_acquire_recursive>:
 8000b0c:	4770      	bx	lr

08000b0e <__retarget_lock_release_recursive>:
 8000b0e:	4770      	bx	lr

08000b10 <__swhatbuf_r>:
 8000b10:	b570      	push	{r4, r5, r6, lr}
 8000b12:	460e      	mov	r6, r1
 8000b14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b18:	2900      	cmp	r1, #0
 8000b1a:	b096      	sub	sp, #88	; 0x58
 8000b1c:	4614      	mov	r4, r2
 8000b1e:	461d      	mov	r5, r3
 8000b20:	da08      	bge.n	8000b34 <__swhatbuf_r+0x24>
 8000b22:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000b26:	2200      	movs	r2, #0
 8000b28:	602a      	str	r2, [r5, #0]
 8000b2a:	061a      	lsls	r2, r3, #24
 8000b2c:	d410      	bmi.n	8000b50 <__swhatbuf_r+0x40>
 8000b2e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b32:	e00e      	b.n	8000b52 <__swhatbuf_r+0x42>
 8000b34:	466a      	mov	r2, sp
 8000b36:	f000 fc91 	bl	800145c <_fstat_r>
 8000b3a:	2800      	cmp	r0, #0
 8000b3c:	dbf1      	blt.n	8000b22 <__swhatbuf_r+0x12>
 8000b3e:	9a01      	ldr	r2, [sp, #4]
 8000b40:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b44:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b48:	425a      	negs	r2, r3
 8000b4a:	415a      	adcs	r2, r3
 8000b4c:	602a      	str	r2, [r5, #0]
 8000b4e:	e7ee      	b.n	8000b2e <__swhatbuf_r+0x1e>
 8000b50:	2340      	movs	r3, #64	; 0x40
 8000b52:	2000      	movs	r0, #0
 8000b54:	6023      	str	r3, [r4, #0]
 8000b56:	b016      	add	sp, #88	; 0x58
 8000b58:	bd70      	pop	{r4, r5, r6, pc}
	...

08000b5c <__smakebuf_r>:
 8000b5c:	898b      	ldrh	r3, [r1, #12]
 8000b5e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b60:	079d      	lsls	r5, r3, #30
 8000b62:	4606      	mov	r6, r0
 8000b64:	460c      	mov	r4, r1
 8000b66:	d507      	bpl.n	8000b78 <__smakebuf_r+0x1c>
 8000b68:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b6c:	6023      	str	r3, [r4, #0]
 8000b6e:	6123      	str	r3, [r4, #16]
 8000b70:	2301      	movs	r3, #1
 8000b72:	6163      	str	r3, [r4, #20]
 8000b74:	b002      	add	sp, #8
 8000b76:	bd70      	pop	{r4, r5, r6, pc}
 8000b78:	ab01      	add	r3, sp, #4
 8000b7a:	466a      	mov	r2, sp
 8000b7c:	f7ff ffc8 	bl	8000b10 <__swhatbuf_r>
 8000b80:	9900      	ldr	r1, [sp, #0]
 8000b82:	4605      	mov	r5, r0
 8000b84:	4630      	mov	r0, r6
 8000b86:	f000 f893 	bl	8000cb0 <_malloc_r>
 8000b8a:	b948      	cbnz	r0, 8000ba0 <__smakebuf_r+0x44>
 8000b8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b90:	059a      	lsls	r2, r3, #22
 8000b92:	d4ef      	bmi.n	8000b74 <__smakebuf_r+0x18>
 8000b94:	f023 0303 	bic.w	r3, r3, #3
 8000b98:	f043 0302 	orr.w	r3, r3, #2
 8000b9c:	81a3      	strh	r3, [r4, #12]
 8000b9e:	e7e3      	b.n	8000b68 <__smakebuf_r+0xc>
 8000ba0:	4b0d      	ldr	r3, [pc, #52]	; (8000bd8 <__smakebuf_r+0x7c>)
 8000ba2:	62b3      	str	r3, [r6, #40]	; 0x28
 8000ba4:	89a3      	ldrh	r3, [r4, #12]
 8000ba6:	6020      	str	r0, [r4, #0]
 8000ba8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bac:	81a3      	strh	r3, [r4, #12]
 8000bae:	9b00      	ldr	r3, [sp, #0]
 8000bb0:	6163      	str	r3, [r4, #20]
 8000bb2:	9b01      	ldr	r3, [sp, #4]
 8000bb4:	6120      	str	r0, [r4, #16]
 8000bb6:	b15b      	cbz	r3, 8000bd0 <__smakebuf_r+0x74>
 8000bb8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bbc:	4630      	mov	r0, r6
 8000bbe:	f000 fc5f 	bl	8001480 <_isatty_r>
 8000bc2:	b128      	cbz	r0, 8000bd0 <__smakebuf_r+0x74>
 8000bc4:	89a3      	ldrh	r3, [r4, #12]
 8000bc6:	f023 0303 	bic.w	r3, r3, #3
 8000bca:	f043 0301 	orr.w	r3, r3, #1
 8000bce:	81a3      	strh	r3, [r4, #12]
 8000bd0:	89a0      	ldrh	r0, [r4, #12]
 8000bd2:	4305      	orrs	r5, r0
 8000bd4:	81a5      	strh	r5, [r4, #12]
 8000bd6:	e7cd      	b.n	8000b74 <__smakebuf_r+0x18>
 8000bd8:	08000969 	.word	0x08000969

08000bdc <_free_r>:
 8000bdc:	b538      	push	{r3, r4, r5, lr}
 8000bde:	4605      	mov	r5, r0
 8000be0:	2900      	cmp	r1, #0
 8000be2:	d041      	beq.n	8000c68 <_free_r+0x8c>
 8000be4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000be8:	1f0c      	subs	r4, r1, #4
 8000bea:	2b00      	cmp	r3, #0
 8000bec:	bfb8      	it	lt
 8000bee:	18e4      	addlt	r4, r4, r3
 8000bf0:	f000 fc68 	bl	80014c4 <__malloc_lock>
 8000bf4:	4a1d      	ldr	r2, [pc, #116]	; (8000c6c <_free_r+0x90>)
 8000bf6:	6813      	ldr	r3, [r2, #0]
 8000bf8:	b933      	cbnz	r3, 8000c08 <_free_r+0x2c>
 8000bfa:	6063      	str	r3, [r4, #4]
 8000bfc:	6014      	str	r4, [r2, #0]
 8000bfe:	4628      	mov	r0, r5
 8000c00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c04:	f000 bc64 	b.w	80014d0 <__malloc_unlock>
 8000c08:	42a3      	cmp	r3, r4
 8000c0a:	d908      	bls.n	8000c1e <_free_r+0x42>
 8000c0c:	6820      	ldr	r0, [r4, #0]
 8000c0e:	1821      	adds	r1, r4, r0
 8000c10:	428b      	cmp	r3, r1
 8000c12:	bf01      	itttt	eq
 8000c14:	6819      	ldreq	r1, [r3, #0]
 8000c16:	685b      	ldreq	r3, [r3, #4]
 8000c18:	1809      	addeq	r1, r1, r0
 8000c1a:	6021      	streq	r1, [r4, #0]
 8000c1c:	e7ed      	b.n	8000bfa <_free_r+0x1e>
 8000c1e:	461a      	mov	r2, r3
 8000c20:	685b      	ldr	r3, [r3, #4]
 8000c22:	b10b      	cbz	r3, 8000c28 <_free_r+0x4c>
 8000c24:	42a3      	cmp	r3, r4
 8000c26:	d9fa      	bls.n	8000c1e <_free_r+0x42>
 8000c28:	6811      	ldr	r1, [r2, #0]
 8000c2a:	1850      	adds	r0, r2, r1
 8000c2c:	42a0      	cmp	r0, r4
 8000c2e:	d10b      	bne.n	8000c48 <_free_r+0x6c>
 8000c30:	6820      	ldr	r0, [r4, #0]
 8000c32:	4401      	add	r1, r0
 8000c34:	1850      	adds	r0, r2, r1
 8000c36:	4283      	cmp	r3, r0
 8000c38:	6011      	str	r1, [r2, #0]
 8000c3a:	d1e0      	bne.n	8000bfe <_free_r+0x22>
 8000c3c:	6818      	ldr	r0, [r3, #0]
 8000c3e:	685b      	ldr	r3, [r3, #4]
 8000c40:	6053      	str	r3, [r2, #4]
 8000c42:	4401      	add	r1, r0
 8000c44:	6011      	str	r1, [r2, #0]
 8000c46:	e7da      	b.n	8000bfe <_free_r+0x22>
 8000c48:	d902      	bls.n	8000c50 <_free_r+0x74>
 8000c4a:	230c      	movs	r3, #12
 8000c4c:	602b      	str	r3, [r5, #0]
 8000c4e:	e7d6      	b.n	8000bfe <_free_r+0x22>
 8000c50:	6820      	ldr	r0, [r4, #0]
 8000c52:	1821      	adds	r1, r4, r0
 8000c54:	428b      	cmp	r3, r1
 8000c56:	bf04      	itt	eq
 8000c58:	6819      	ldreq	r1, [r3, #0]
 8000c5a:	685b      	ldreq	r3, [r3, #4]
 8000c5c:	6063      	str	r3, [r4, #4]
 8000c5e:	bf04      	itt	eq
 8000c60:	1809      	addeq	r1, r1, r0
 8000c62:	6021      	streq	r1, [r4, #0]
 8000c64:	6054      	str	r4, [r2, #4]
 8000c66:	e7ca      	b.n	8000bfe <_free_r+0x22>
 8000c68:	bd38      	pop	{r3, r4, r5, pc}
 8000c6a:	bf00      	nop
 8000c6c:	20000088 	.word	0x20000088

08000c70 <sbrk_aligned>:
 8000c70:	b570      	push	{r4, r5, r6, lr}
 8000c72:	4e0e      	ldr	r6, [pc, #56]	; (8000cac <sbrk_aligned+0x3c>)
 8000c74:	460c      	mov	r4, r1
 8000c76:	6831      	ldr	r1, [r6, #0]
 8000c78:	4605      	mov	r5, r0
 8000c7a:	b911      	cbnz	r1, 8000c82 <sbrk_aligned+0x12>
 8000c7c:	f000 fb78 	bl	8001370 <_sbrk_r>
 8000c80:	6030      	str	r0, [r6, #0]
 8000c82:	4621      	mov	r1, r4
 8000c84:	4628      	mov	r0, r5
 8000c86:	f000 fb73 	bl	8001370 <_sbrk_r>
 8000c8a:	1c43      	adds	r3, r0, #1
 8000c8c:	d00a      	beq.n	8000ca4 <sbrk_aligned+0x34>
 8000c8e:	1cc4      	adds	r4, r0, #3
 8000c90:	f024 0403 	bic.w	r4, r4, #3
 8000c94:	42a0      	cmp	r0, r4
 8000c96:	d007      	beq.n	8000ca8 <sbrk_aligned+0x38>
 8000c98:	1a21      	subs	r1, r4, r0
 8000c9a:	4628      	mov	r0, r5
 8000c9c:	f000 fb68 	bl	8001370 <_sbrk_r>
 8000ca0:	3001      	adds	r0, #1
 8000ca2:	d101      	bne.n	8000ca8 <sbrk_aligned+0x38>
 8000ca4:	f04f 34ff 	mov.w	r4, #4294967295
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd70      	pop	{r4, r5, r6, pc}
 8000cac:	2000008c 	.word	0x2000008c

08000cb0 <_malloc_r>:
 8000cb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cb4:	1ccd      	adds	r5, r1, #3
 8000cb6:	f025 0503 	bic.w	r5, r5, #3
 8000cba:	3508      	adds	r5, #8
 8000cbc:	2d0c      	cmp	r5, #12
 8000cbe:	bf38      	it	cc
 8000cc0:	250c      	movcc	r5, #12
 8000cc2:	2d00      	cmp	r5, #0
 8000cc4:	4607      	mov	r7, r0
 8000cc6:	db01      	blt.n	8000ccc <_malloc_r+0x1c>
 8000cc8:	42a9      	cmp	r1, r5
 8000cca:	d905      	bls.n	8000cd8 <_malloc_r+0x28>
 8000ccc:	230c      	movs	r3, #12
 8000cce:	603b      	str	r3, [r7, #0]
 8000cd0:	2600      	movs	r6, #0
 8000cd2:	4630      	mov	r0, r6
 8000cd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000cd8:	4e2e      	ldr	r6, [pc, #184]	; (8000d94 <_malloc_r+0xe4>)
 8000cda:	f000 fbf3 	bl	80014c4 <__malloc_lock>
 8000cde:	6833      	ldr	r3, [r6, #0]
 8000ce0:	461c      	mov	r4, r3
 8000ce2:	bb34      	cbnz	r4, 8000d32 <_malloc_r+0x82>
 8000ce4:	4629      	mov	r1, r5
 8000ce6:	4638      	mov	r0, r7
 8000ce8:	f7ff ffc2 	bl	8000c70 <sbrk_aligned>
 8000cec:	1c43      	adds	r3, r0, #1
 8000cee:	4604      	mov	r4, r0
 8000cf0:	d14d      	bne.n	8000d8e <_malloc_r+0xde>
 8000cf2:	6834      	ldr	r4, [r6, #0]
 8000cf4:	4626      	mov	r6, r4
 8000cf6:	2e00      	cmp	r6, #0
 8000cf8:	d140      	bne.n	8000d7c <_malloc_r+0xcc>
 8000cfa:	6823      	ldr	r3, [r4, #0]
 8000cfc:	4631      	mov	r1, r6
 8000cfe:	4638      	mov	r0, r7
 8000d00:	eb04 0803 	add.w	r8, r4, r3
 8000d04:	f000 fb34 	bl	8001370 <_sbrk_r>
 8000d08:	4580      	cmp	r8, r0
 8000d0a:	d13a      	bne.n	8000d82 <_malloc_r+0xd2>
 8000d0c:	6821      	ldr	r1, [r4, #0]
 8000d0e:	3503      	adds	r5, #3
 8000d10:	1a6d      	subs	r5, r5, r1
 8000d12:	f025 0503 	bic.w	r5, r5, #3
 8000d16:	3508      	adds	r5, #8
 8000d18:	2d0c      	cmp	r5, #12
 8000d1a:	bf38      	it	cc
 8000d1c:	250c      	movcc	r5, #12
 8000d1e:	4629      	mov	r1, r5
 8000d20:	4638      	mov	r0, r7
 8000d22:	f7ff ffa5 	bl	8000c70 <sbrk_aligned>
 8000d26:	3001      	adds	r0, #1
 8000d28:	d02b      	beq.n	8000d82 <_malloc_r+0xd2>
 8000d2a:	6823      	ldr	r3, [r4, #0]
 8000d2c:	442b      	add	r3, r5
 8000d2e:	6023      	str	r3, [r4, #0]
 8000d30:	e00e      	b.n	8000d50 <_malloc_r+0xa0>
 8000d32:	6822      	ldr	r2, [r4, #0]
 8000d34:	1b52      	subs	r2, r2, r5
 8000d36:	d41e      	bmi.n	8000d76 <_malloc_r+0xc6>
 8000d38:	2a0b      	cmp	r2, #11
 8000d3a:	d916      	bls.n	8000d6a <_malloc_r+0xba>
 8000d3c:	1961      	adds	r1, r4, r5
 8000d3e:	42a3      	cmp	r3, r4
 8000d40:	6025      	str	r5, [r4, #0]
 8000d42:	bf18      	it	ne
 8000d44:	6059      	strne	r1, [r3, #4]
 8000d46:	6863      	ldr	r3, [r4, #4]
 8000d48:	bf08      	it	eq
 8000d4a:	6031      	streq	r1, [r6, #0]
 8000d4c:	5162      	str	r2, [r4, r5]
 8000d4e:	604b      	str	r3, [r1, #4]
 8000d50:	4638      	mov	r0, r7
 8000d52:	f104 060b 	add.w	r6, r4, #11
 8000d56:	f000 fbbb 	bl	80014d0 <__malloc_unlock>
 8000d5a:	f026 0607 	bic.w	r6, r6, #7
 8000d5e:	1d23      	adds	r3, r4, #4
 8000d60:	1af2      	subs	r2, r6, r3
 8000d62:	d0b6      	beq.n	8000cd2 <_malloc_r+0x22>
 8000d64:	1b9b      	subs	r3, r3, r6
 8000d66:	50a3      	str	r3, [r4, r2]
 8000d68:	e7b3      	b.n	8000cd2 <_malloc_r+0x22>
 8000d6a:	6862      	ldr	r2, [r4, #4]
 8000d6c:	42a3      	cmp	r3, r4
 8000d6e:	bf0c      	ite	eq
 8000d70:	6032      	streq	r2, [r6, #0]
 8000d72:	605a      	strne	r2, [r3, #4]
 8000d74:	e7ec      	b.n	8000d50 <_malloc_r+0xa0>
 8000d76:	4623      	mov	r3, r4
 8000d78:	6864      	ldr	r4, [r4, #4]
 8000d7a:	e7b2      	b.n	8000ce2 <_malloc_r+0x32>
 8000d7c:	4634      	mov	r4, r6
 8000d7e:	6876      	ldr	r6, [r6, #4]
 8000d80:	e7b9      	b.n	8000cf6 <_malloc_r+0x46>
 8000d82:	230c      	movs	r3, #12
 8000d84:	603b      	str	r3, [r7, #0]
 8000d86:	4638      	mov	r0, r7
 8000d88:	f000 fba2 	bl	80014d0 <__malloc_unlock>
 8000d8c:	e7a1      	b.n	8000cd2 <_malloc_r+0x22>
 8000d8e:	6025      	str	r5, [r4, #0]
 8000d90:	e7de      	b.n	8000d50 <_malloc_r+0xa0>
 8000d92:	bf00      	nop
 8000d94:	20000088 	.word	0x20000088

08000d98 <__sfputc_r>:
 8000d98:	6893      	ldr	r3, [r2, #8]
 8000d9a:	3b01      	subs	r3, #1
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	b410      	push	{r4}
 8000da0:	6093      	str	r3, [r2, #8]
 8000da2:	da07      	bge.n	8000db4 <__sfputc_r+0x1c>
 8000da4:	6994      	ldr	r4, [r2, #24]
 8000da6:	42a3      	cmp	r3, r4
 8000da8:	db01      	blt.n	8000dae <__sfputc_r+0x16>
 8000daa:	290a      	cmp	r1, #10
 8000dac:	d102      	bne.n	8000db4 <__sfputc_r+0x1c>
 8000dae:	bc10      	pop	{r4}
 8000db0:	f7ff bc38 	b.w	8000624 <__swbuf_r>
 8000db4:	6813      	ldr	r3, [r2, #0]
 8000db6:	1c58      	adds	r0, r3, #1
 8000db8:	6010      	str	r0, [r2, #0]
 8000dba:	7019      	strb	r1, [r3, #0]
 8000dbc:	4608      	mov	r0, r1
 8000dbe:	bc10      	pop	{r4}
 8000dc0:	4770      	bx	lr

08000dc2 <__sfputs_r>:
 8000dc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dc4:	4606      	mov	r6, r0
 8000dc6:	460f      	mov	r7, r1
 8000dc8:	4614      	mov	r4, r2
 8000dca:	18d5      	adds	r5, r2, r3
 8000dcc:	42ac      	cmp	r4, r5
 8000dce:	d101      	bne.n	8000dd4 <__sfputs_r+0x12>
 8000dd0:	2000      	movs	r0, #0
 8000dd2:	e007      	b.n	8000de4 <__sfputs_r+0x22>
 8000dd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dd8:	463a      	mov	r2, r7
 8000dda:	4630      	mov	r0, r6
 8000ddc:	f7ff ffdc 	bl	8000d98 <__sfputc_r>
 8000de0:	1c43      	adds	r3, r0, #1
 8000de2:	d1f3      	bne.n	8000dcc <__sfputs_r+0xa>
 8000de4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000de8 <_vfiprintf_r>:
 8000de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dec:	460d      	mov	r5, r1
 8000dee:	b09d      	sub	sp, #116	; 0x74
 8000df0:	4614      	mov	r4, r2
 8000df2:	4698      	mov	r8, r3
 8000df4:	4606      	mov	r6, r0
 8000df6:	b118      	cbz	r0, 8000e00 <_vfiprintf_r+0x18>
 8000df8:	6983      	ldr	r3, [r0, #24]
 8000dfa:	b90b      	cbnz	r3, 8000e00 <_vfiprintf_r+0x18>
 8000dfc:	f7ff fde8 	bl	80009d0 <__sinit>
 8000e00:	4b89      	ldr	r3, [pc, #548]	; (8001028 <_vfiprintf_r+0x240>)
 8000e02:	429d      	cmp	r5, r3
 8000e04:	d11b      	bne.n	8000e3e <_vfiprintf_r+0x56>
 8000e06:	6875      	ldr	r5, [r6, #4]
 8000e08:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e0a:	07d9      	lsls	r1, r3, #31
 8000e0c:	d405      	bmi.n	8000e1a <_vfiprintf_r+0x32>
 8000e0e:	89ab      	ldrh	r3, [r5, #12]
 8000e10:	059a      	lsls	r2, r3, #22
 8000e12:	d402      	bmi.n	8000e1a <_vfiprintf_r+0x32>
 8000e14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e16:	f7ff fe79 	bl	8000b0c <__retarget_lock_acquire_recursive>
 8000e1a:	89ab      	ldrh	r3, [r5, #12]
 8000e1c:	071b      	lsls	r3, r3, #28
 8000e1e:	d501      	bpl.n	8000e24 <_vfiprintf_r+0x3c>
 8000e20:	692b      	ldr	r3, [r5, #16]
 8000e22:	b9eb      	cbnz	r3, 8000e60 <_vfiprintf_r+0x78>
 8000e24:	4629      	mov	r1, r5
 8000e26:	4630      	mov	r0, r6
 8000e28:	f7ff fc4e 	bl	80006c8 <__swsetup_r>
 8000e2c:	b1c0      	cbz	r0, 8000e60 <_vfiprintf_r+0x78>
 8000e2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e30:	07dc      	lsls	r4, r3, #31
 8000e32:	d50e      	bpl.n	8000e52 <_vfiprintf_r+0x6a>
 8000e34:	f04f 30ff 	mov.w	r0, #4294967295
 8000e38:	b01d      	add	sp, #116	; 0x74
 8000e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e3e:	4b7b      	ldr	r3, [pc, #492]	; (800102c <_vfiprintf_r+0x244>)
 8000e40:	429d      	cmp	r5, r3
 8000e42:	d101      	bne.n	8000e48 <_vfiprintf_r+0x60>
 8000e44:	68b5      	ldr	r5, [r6, #8]
 8000e46:	e7df      	b.n	8000e08 <_vfiprintf_r+0x20>
 8000e48:	4b79      	ldr	r3, [pc, #484]	; (8001030 <_vfiprintf_r+0x248>)
 8000e4a:	429d      	cmp	r5, r3
 8000e4c:	bf08      	it	eq
 8000e4e:	68f5      	ldreq	r5, [r6, #12]
 8000e50:	e7da      	b.n	8000e08 <_vfiprintf_r+0x20>
 8000e52:	89ab      	ldrh	r3, [r5, #12]
 8000e54:	0598      	lsls	r0, r3, #22
 8000e56:	d4ed      	bmi.n	8000e34 <_vfiprintf_r+0x4c>
 8000e58:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e5a:	f7ff fe58 	bl	8000b0e <__retarget_lock_release_recursive>
 8000e5e:	e7e9      	b.n	8000e34 <_vfiprintf_r+0x4c>
 8000e60:	2300      	movs	r3, #0
 8000e62:	9309      	str	r3, [sp, #36]	; 0x24
 8000e64:	2320      	movs	r3, #32
 8000e66:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e6a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e6e:	2330      	movs	r3, #48	; 0x30
 8000e70:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001034 <_vfiprintf_r+0x24c>
 8000e74:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e78:	f04f 0901 	mov.w	r9, #1
 8000e7c:	4623      	mov	r3, r4
 8000e7e:	469a      	mov	sl, r3
 8000e80:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e84:	b10a      	cbz	r2, 8000e8a <_vfiprintf_r+0xa2>
 8000e86:	2a25      	cmp	r2, #37	; 0x25
 8000e88:	d1f9      	bne.n	8000e7e <_vfiprintf_r+0x96>
 8000e8a:	ebba 0b04 	subs.w	fp, sl, r4
 8000e8e:	d00b      	beq.n	8000ea8 <_vfiprintf_r+0xc0>
 8000e90:	465b      	mov	r3, fp
 8000e92:	4622      	mov	r2, r4
 8000e94:	4629      	mov	r1, r5
 8000e96:	4630      	mov	r0, r6
 8000e98:	f7ff ff93 	bl	8000dc2 <__sfputs_r>
 8000e9c:	3001      	adds	r0, #1
 8000e9e:	f000 80aa 	beq.w	8000ff6 <_vfiprintf_r+0x20e>
 8000ea2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ea4:	445a      	add	r2, fp
 8000ea6:	9209      	str	r2, [sp, #36]	; 0x24
 8000ea8:	f89a 3000 	ldrb.w	r3, [sl]
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	f000 80a2 	beq.w	8000ff6 <_vfiprintf_r+0x20e>
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	f04f 32ff 	mov.w	r2, #4294967295
 8000eb8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ebc:	f10a 0a01 	add.w	sl, sl, #1
 8000ec0:	9304      	str	r3, [sp, #16]
 8000ec2:	9307      	str	r3, [sp, #28]
 8000ec4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ec8:	931a      	str	r3, [sp, #104]	; 0x68
 8000eca:	4654      	mov	r4, sl
 8000ecc:	2205      	movs	r2, #5
 8000ece:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ed2:	4858      	ldr	r0, [pc, #352]	; (8001034 <_vfiprintf_r+0x24c>)
 8000ed4:	f7ff f984 	bl	80001e0 <memchr>
 8000ed8:	9a04      	ldr	r2, [sp, #16]
 8000eda:	b9d8      	cbnz	r0, 8000f14 <_vfiprintf_r+0x12c>
 8000edc:	06d1      	lsls	r1, r2, #27
 8000ede:	bf44      	itt	mi
 8000ee0:	2320      	movmi	r3, #32
 8000ee2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ee6:	0713      	lsls	r3, r2, #28
 8000ee8:	bf44      	itt	mi
 8000eea:	232b      	movmi	r3, #43	; 0x2b
 8000eec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ef0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ef4:	2b2a      	cmp	r3, #42	; 0x2a
 8000ef6:	d015      	beq.n	8000f24 <_vfiprintf_r+0x13c>
 8000ef8:	9a07      	ldr	r2, [sp, #28]
 8000efa:	4654      	mov	r4, sl
 8000efc:	2000      	movs	r0, #0
 8000efe:	f04f 0c0a 	mov.w	ip, #10
 8000f02:	4621      	mov	r1, r4
 8000f04:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f08:	3b30      	subs	r3, #48	; 0x30
 8000f0a:	2b09      	cmp	r3, #9
 8000f0c:	d94e      	bls.n	8000fac <_vfiprintf_r+0x1c4>
 8000f0e:	b1b0      	cbz	r0, 8000f3e <_vfiprintf_r+0x156>
 8000f10:	9207      	str	r2, [sp, #28]
 8000f12:	e014      	b.n	8000f3e <_vfiprintf_r+0x156>
 8000f14:	eba0 0308 	sub.w	r3, r0, r8
 8000f18:	fa09 f303 	lsl.w	r3, r9, r3
 8000f1c:	4313      	orrs	r3, r2
 8000f1e:	9304      	str	r3, [sp, #16]
 8000f20:	46a2      	mov	sl, r4
 8000f22:	e7d2      	b.n	8000eca <_vfiprintf_r+0xe2>
 8000f24:	9b03      	ldr	r3, [sp, #12]
 8000f26:	1d19      	adds	r1, r3, #4
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	9103      	str	r1, [sp, #12]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	bfbb      	ittet	lt
 8000f30:	425b      	neglt	r3, r3
 8000f32:	f042 0202 	orrlt.w	r2, r2, #2
 8000f36:	9307      	strge	r3, [sp, #28]
 8000f38:	9307      	strlt	r3, [sp, #28]
 8000f3a:	bfb8      	it	lt
 8000f3c:	9204      	strlt	r2, [sp, #16]
 8000f3e:	7823      	ldrb	r3, [r4, #0]
 8000f40:	2b2e      	cmp	r3, #46	; 0x2e
 8000f42:	d10c      	bne.n	8000f5e <_vfiprintf_r+0x176>
 8000f44:	7863      	ldrb	r3, [r4, #1]
 8000f46:	2b2a      	cmp	r3, #42	; 0x2a
 8000f48:	d135      	bne.n	8000fb6 <_vfiprintf_r+0x1ce>
 8000f4a:	9b03      	ldr	r3, [sp, #12]
 8000f4c:	1d1a      	adds	r2, r3, #4
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	9203      	str	r2, [sp, #12]
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	bfb8      	it	lt
 8000f56:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f5a:	3402      	adds	r4, #2
 8000f5c:	9305      	str	r3, [sp, #20]
 8000f5e:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8001038 <_vfiprintf_r+0x250>
 8000f62:	7821      	ldrb	r1, [r4, #0]
 8000f64:	2203      	movs	r2, #3
 8000f66:	4650      	mov	r0, sl
 8000f68:	f7ff f93a 	bl	80001e0 <memchr>
 8000f6c:	b140      	cbz	r0, 8000f80 <_vfiprintf_r+0x198>
 8000f6e:	2340      	movs	r3, #64	; 0x40
 8000f70:	eba0 000a 	sub.w	r0, r0, sl
 8000f74:	fa03 f000 	lsl.w	r0, r3, r0
 8000f78:	9b04      	ldr	r3, [sp, #16]
 8000f7a:	4303      	orrs	r3, r0
 8000f7c:	3401      	adds	r4, #1
 8000f7e:	9304      	str	r3, [sp, #16]
 8000f80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f84:	482d      	ldr	r0, [pc, #180]	; (800103c <_vfiprintf_r+0x254>)
 8000f86:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f8a:	2206      	movs	r2, #6
 8000f8c:	f7ff f928 	bl	80001e0 <memchr>
 8000f90:	2800      	cmp	r0, #0
 8000f92:	d03f      	beq.n	8001014 <_vfiprintf_r+0x22c>
 8000f94:	4b2a      	ldr	r3, [pc, #168]	; (8001040 <_vfiprintf_r+0x258>)
 8000f96:	bb1b      	cbnz	r3, 8000fe0 <_vfiprintf_r+0x1f8>
 8000f98:	9b03      	ldr	r3, [sp, #12]
 8000f9a:	3307      	adds	r3, #7
 8000f9c:	f023 0307 	bic.w	r3, r3, #7
 8000fa0:	3308      	adds	r3, #8
 8000fa2:	9303      	str	r3, [sp, #12]
 8000fa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000fa6:	443b      	add	r3, r7
 8000fa8:	9309      	str	r3, [sp, #36]	; 0x24
 8000faa:	e767      	b.n	8000e7c <_vfiprintf_r+0x94>
 8000fac:	fb0c 3202 	mla	r2, ip, r2, r3
 8000fb0:	460c      	mov	r4, r1
 8000fb2:	2001      	movs	r0, #1
 8000fb4:	e7a5      	b.n	8000f02 <_vfiprintf_r+0x11a>
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	3401      	adds	r4, #1
 8000fba:	9305      	str	r3, [sp, #20]
 8000fbc:	4619      	mov	r1, r3
 8000fbe:	f04f 0c0a 	mov.w	ip, #10
 8000fc2:	4620      	mov	r0, r4
 8000fc4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fc8:	3a30      	subs	r2, #48	; 0x30
 8000fca:	2a09      	cmp	r2, #9
 8000fcc:	d903      	bls.n	8000fd6 <_vfiprintf_r+0x1ee>
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d0c5      	beq.n	8000f5e <_vfiprintf_r+0x176>
 8000fd2:	9105      	str	r1, [sp, #20]
 8000fd4:	e7c3      	b.n	8000f5e <_vfiprintf_r+0x176>
 8000fd6:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fda:	4604      	mov	r4, r0
 8000fdc:	2301      	movs	r3, #1
 8000fde:	e7f0      	b.n	8000fc2 <_vfiprintf_r+0x1da>
 8000fe0:	ab03      	add	r3, sp, #12
 8000fe2:	9300      	str	r3, [sp, #0]
 8000fe4:	462a      	mov	r2, r5
 8000fe6:	4b17      	ldr	r3, [pc, #92]	; (8001044 <_vfiprintf_r+0x25c>)
 8000fe8:	a904      	add	r1, sp, #16
 8000fea:	4630      	mov	r0, r6
 8000fec:	f3af 8000 	nop.w
 8000ff0:	4607      	mov	r7, r0
 8000ff2:	1c78      	adds	r0, r7, #1
 8000ff4:	d1d6      	bne.n	8000fa4 <_vfiprintf_r+0x1bc>
 8000ff6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ff8:	07d9      	lsls	r1, r3, #31
 8000ffa:	d405      	bmi.n	8001008 <_vfiprintf_r+0x220>
 8000ffc:	89ab      	ldrh	r3, [r5, #12]
 8000ffe:	059a      	lsls	r2, r3, #22
 8001000:	d402      	bmi.n	8001008 <_vfiprintf_r+0x220>
 8001002:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001004:	f7ff fd83 	bl	8000b0e <__retarget_lock_release_recursive>
 8001008:	89ab      	ldrh	r3, [r5, #12]
 800100a:	065b      	lsls	r3, r3, #25
 800100c:	f53f af12 	bmi.w	8000e34 <_vfiprintf_r+0x4c>
 8001010:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001012:	e711      	b.n	8000e38 <_vfiprintf_r+0x50>
 8001014:	ab03      	add	r3, sp, #12
 8001016:	9300      	str	r3, [sp, #0]
 8001018:	462a      	mov	r2, r5
 800101a:	4b0a      	ldr	r3, [pc, #40]	; (8001044 <_vfiprintf_r+0x25c>)
 800101c:	a904      	add	r1, sp, #16
 800101e:	4630      	mov	r0, r6
 8001020:	f000 f880 	bl	8001124 <_printf_i>
 8001024:	e7e4      	b.n	8000ff0 <_vfiprintf_r+0x208>
 8001026:	bf00      	nop
 8001028:	0800155c 	.word	0x0800155c
 800102c:	0800157c 	.word	0x0800157c
 8001030:	0800153c 	.word	0x0800153c
 8001034:	0800159c 	.word	0x0800159c
 8001038:	080015a2 	.word	0x080015a2
 800103c:	080015a6 	.word	0x080015a6
 8001040:	00000000 	.word	0x00000000
 8001044:	08000dc3 	.word	0x08000dc3

08001048 <_printf_common>:
 8001048:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800104c:	4616      	mov	r6, r2
 800104e:	4699      	mov	r9, r3
 8001050:	688a      	ldr	r2, [r1, #8]
 8001052:	690b      	ldr	r3, [r1, #16]
 8001054:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001058:	4293      	cmp	r3, r2
 800105a:	bfb8      	it	lt
 800105c:	4613      	movlt	r3, r2
 800105e:	6033      	str	r3, [r6, #0]
 8001060:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001064:	4607      	mov	r7, r0
 8001066:	460c      	mov	r4, r1
 8001068:	b10a      	cbz	r2, 800106e <_printf_common+0x26>
 800106a:	3301      	adds	r3, #1
 800106c:	6033      	str	r3, [r6, #0]
 800106e:	6823      	ldr	r3, [r4, #0]
 8001070:	0699      	lsls	r1, r3, #26
 8001072:	bf42      	ittt	mi
 8001074:	6833      	ldrmi	r3, [r6, #0]
 8001076:	3302      	addmi	r3, #2
 8001078:	6033      	strmi	r3, [r6, #0]
 800107a:	6825      	ldr	r5, [r4, #0]
 800107c:	f015 0506 	ands.w	r5, r5, #6
 8001080:	d106      	bne.n	8001090 <_printf_common+0x48>
 8001082:	f104 0a19 	add.w	sl, r4, #25
 8001086:	68e3      	ldr	r3, [r4, #12]
 8001088:	6832      	ldr	r2, [r6, #0]
 800108a:	1a9b      	subs	r3, r3, r2
 800108c:	42ab      	cmp	r3, r5
 800108e:	dc26      	bgt.n	80010de <_printf_common+0x96>
 8001090:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001094:	1e13      	subs	r3, r2, #0
 8001096:	6822      	ldr	r2, [r4, #0]
 8001098:	bf18      	it	ne
 800109a:	2301      	movne	r3, #1
 800109c:	0692      	lsls	r2, r2, #26
 800109e:	d42b      	bmi.n	80010f8 <_printf_common+0xb0>
 80010a0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80010a4:	4649      	mov	r1, r9
 80010a6:	4638      	mov	r0, r7
 80010a8:	47c0      	blx	r8
 80010aa:	3001      	adds	r0, #1
 80010ac:	d01e      	beq.n	80010ec <_printf_common+0xa4>
 80010ae:	6823      	ldr	r3, [r4, #0]
 80010b0:	68e5      	ldr	r5, [r4, #12]
 80010b2:	6832      	ldr	r2, [r6, #0]
 80010b4:	f003 0306 	and.w	r3, r3, #6
 80010b8:	2b04      	cmp	r3, #4
 80010ba:	bf08      	it	eq
 80010bc:	1aad      	subeq	r5, r5, r2
 80010be:	68a3      	ldr	r3, [r4, #8]
 80010c0:	6922      	ldr	r2, [r4, #16]
 80010c2:	bf0c      	ite	eq
 80010c4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010c8:	2500      	movne	r5, #0
 80010ca:	4293      	cmp	r3, r2
 80010cc:	bfc4      	itt	gt
 80010ce:	1a9b      	subgt	r3, r3, r2
 80010d0:	18ed      	addgt	r5, r5, r3
 80010d2:	2600      	movs	r6, #0
 80010d4:	341a      	adds	r4, #26
 80010d6:	42b5      	cmp	r5, r6
 80010d8:	d11a      	bne.n	8001110 <_printf_common+0xc8>
 80010da:	2000      	movs	r0, #0
 80010dc:	e008      	b.n	80010f0 <_printf_common+0xa8>
 80010de:	2301      	movs	r3, #1
 80010e0:	4652      	mov	r2, sl
 80010e2:	4649      	mov	r1, r9
 80010e4:	4638      	mov	r0, r7
 80010e6:	47c0      	blx	r8
 80010e8:	3001      	adds	r0, #1
 80010ea:	d103      	bne.n	80010f4 <_printf_common+0xac>
 80010ec:	f04f 30ff 	mov.w	r0, #4294967295
 80010f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010f4:	3501      	adds	r5, #1
 80010f6:	e7c6      	b.n	8001086 <_printf_common+0x3e>
 80010f8:	18e1      	adds	r1, r4, r3
 80010fa:	1c5a      	adds	r2, r3, #1
 80010fc:	2030      	movs	r0, #48	; 0x30
 80010fe:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001102:	4422      	add	r2, r4
 8001104:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001108:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800110c:	3302      	adds	r3, #2
 800110e:	e7c7      	b.n	80010a0 <_printf_common+0x58>
 8001110:	2301      	movs	r3, #1
 8001112:	4622      	mov	r2, r4
 8001114:	4649      	mov	r1, r9
 8001116:	4638      	mov	r0, r7
 8001118:	47c0      	blx	r8
 800111a:	3001      	adds	r0, #1
 800111c:	d0e6      	beq.n	80010ec <_printf_common+0xa4>
 800111e:	3601      	adds	r6, #1
 8001120:	e7d9      	b.n	80010d6 <_printf_common+0x8e>
	...

08001124 <_printf_i>:
 8001124:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001128:	7e0f      	ldrb	r7, [r1, #24]
 800112a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800112c:	2f78      	cmp	r7, #120	; 0x78
 800112e:	4691      	mov	r9, r2
 8001130:	4680      	mov	r8, r0
 8001132:	460c      	mov	r4, r1
 8001134:	469a      	mov	sl, r3
 8001136:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800113a:	d807      	bhi.n	800114c <_printf_i+0x28>
 800113c:	2f62      	cmp	r7, #98	; 0x62
 800113e:	d80a      	bhi.n	8001156 <_printf_i+0x32>
 8001140:	2f00      	cmp	r7, #0
 8001142:	f000 80d8 	beq.w	80012f6 <_printf_i+0x1d2>
 8001146:	2f58      	cmp	r7, #88	; 0x58
 8001148:	f000 80a3 	beq.w	8001292 <_printf_i+0x16e>
 800114c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001150:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001154:	e03a      	b.n	80011cc <_printf_i+0xa8>
 8001156:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800115a:	2b15      	cmp	r3, #21
 800115c:	d8f6      	bhi.n	800114c <_printf_i+0x28>
 800115e:	a101      	add	r1, pc, #4	; (adr r1, 8001164 <_printf_i+0x40>)
 8001160:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001164:	080011bd 	.word	0x080011bd
 8001168:	080011d1 	.word	0x080011d1
 800116c:	0800114d 	.word	0x0800114d
 8001170:	0800114d 	.word	0x0800114d
 8001174:	0800114d 	.word	0x0800114d
 8001178:	0800114d 	.word	0x0800114d
 800117c:	080011d1 	.word	0x080011d1
 8001180:	0800114d 	.word	0x0800114d
 8001184:	0800114d 	.word	0x0800114d
 8001188:	0800114d 	.word	0x0800114d
 800118c:	0800114d 	.word	0x0800114d
 8001190:	080012dd 	.word	0x080012dd
 8001194:	08001201 	.word	0x08001201
 8001198:	080012bf 	.word	0x080012bf
 800119c:	0800114d 	.word	0x0800114d
 80011a0:	0800114d 	.word	0x0800114d
 80011a4:	080012ff 	.word	0x080012ff
 80011a8:	0800114d 	.word	0x0800114d
 80011ac:	08001201 	.word	0x08001201
 80011b0:	0800114d 	.word	0x0800114d
 80011b4:	0800114d 	.word	0x0800114d
 80011b8:	080012c7 	.word	0x080012c7
 80011bc:	682b      	ldr	r3, [r5, #0]
 80011be:	1d1a      	adds	r2, r3, #4
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	602a      	str	r2, [r5, #0]
 80011c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011c8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011cc:	2301      	movs	r3, #1
 80011ce:	e0a3      	b.n	8001318 <_printf_i+0x1f4>
 80011d0:	6820      	ldr	r0, [r4, #0]
 80011d2:	6829      	ldr	r1, [r5, #0]
 80011d4:	0606      	lsls	r6, r0, #24
 80011d6:	f101 0304 	add.w	r3, r1, #4
 80011da:	d50a      	bpl.n	80011f2 <_printf_i+0xce>
 80011dc:	680e      	ldr	r6, [r1, #0]
 80011de:	602b      	str	r3, [r5, #0]
 80011e0:	2e00      	cmp	r6, #0
 80011e2:	da03      	bge.n	80011ec <_printf_i+0xc8>
 80011e4:	232d      	movs	r3, #45	; 0x2d
 80011e6:	4276      	negs	r6, r6
 80011e8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011ec:	485e      	ldr	r0, [pc, #376]	; (8001368 <_printf_i+0x244>)
 80011ee:	230a      	movs	r3, #10
 80011f0:	e019      	b.n	8001226 <_printf_i+0x102>
 80011f2:	680e      	ldr	r6, [r1, #0]
 80011f4:	602b      	str	r3, [r5, #0]
 80011f6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80011fa:	bf18      	it	ne
 80011fc:	b236      	sxthne	r6, r6
 80011fe:	e7ef      	b.n	80011e0 <_printf_i+0xbc>
 8001200:	682b      	ldr	r3, [r5, #0]
 8001202:	6820      	ldr	r0, [r4, #0]
 8001204:	1d19      	adds	r1, r3, #4
 8001206:	6029      	str	r1, [r5, #0]
 8001208:	0601      	lsls	r1, r0, #24
 800120a:	d501      	bpl.n	8001210 <_printf_i+0xec>
 800120c:	681e      	ldr	r6, [r3, #0]
 800120e:	e002      	b.n	8001216 <_printf_i+0xf2>
 8001210:	0646      	lsls	r6, r0, #25
 8001212:	d5fb      	bpl.n	800120c <_printf_i+0xe8>
 8001214:	881e      	ldrh	r6, [r3, #0]
 8001216:	4854      	ldr	r0, [pc, #336]	; (8001368 <_printf_i+0x244>)
 8001218:	2f6f      	cmp	r7, #111	; 0x6f
 800121a:	bf0c      	ite	eq
 800121c:	2308      	moveq	r3, #8
 800121e:	230a      	movne	r3, #10
 8001220:	2100      	movs	r1, #0
 8001222:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001226:	6865      	ldr	r5, [r4, #4]
 8001228:	60a5      	str	r5, [r4, #8]
 800122a:	2d00      	cmp	r5, #0
 800122c:	bfa2      	ittt	ge
 800122e:	6821      	ldrge	r1, [r4, #0]
 8001230:	f021 0104 	bicge.w	r1, r1, #4
 8001234:	6021      	strge	r1, [r4, #0]
 8001236:	b90e      	cbnz	r6, 800123c <_printf_i+0x118>
 8001238:	2d00      	cmp	r5, #0
 800123a:	d04d      	beq.n	80012d8 <_printf_i+0x1b4>
 800123c:	4615      	mov	r5, r2
 800123e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001242:	fb03 6711 	mls	r7, r3, r1, r6
 8001246:	5dc7      	ldrb	r7, [r0, r7]
 8001248:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800124c:	4637      	mov	r7, r6
 800124e:	42bb      	cmp	r3, r7
 8001250:	460e      	mov	r6, r1
 8001252:	d9f4      	bls.n	800123e <_printf_i+0x11a>
 8001254:	2b08      	cmp	r3, #8
 8001256:	d10b      	bne.n	8001270 <_printf_i+0x14c>
 8001258:	6823      	ldr	r3, [r4, #0]
 800125a:	07de      	lsls	r6, r3, #31
 800125c:	d508      	bpl.n	8001270 <_printf_i+0x14c>
 800125e:	6923      	ldr	r3, [r4, #16]
 8001260:	6861      	ldr	r1, [r4, #4]
 8001262:	4299      	cmp	r1, r3
 8001264:	bfde      	ittt	le
 8001266:	2330      	movle	r3, #48	; 0x30
 8001268:	f805 3c01 	strble.w	r3, [r5, #-1]
 800126c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001270:	1b52      	subs	r2, r2, r5
 8001272:	6122      	str	r2, [r4, #16]
 8001274:	f8cd a000 	str.w	sl, [sp]
 8001278:	464b      	mov	r3, r9
 800127a:	aa03      	add	r2, sp, #12
 800127c:	4621      	mov	r1, r4
 800127e:	4640      	mov	r0, r8
 8001280:	f7ff fee2 	bl	8001048 <_printf_common>
 8001284:	3001      	adds	r0, #1
 8001286:	d14c      	bne.n	8001322 <_printf_i+0x1fe>
 8001288:	f04f 30ff 	mov.w	r0, #4294967295
 800128c:	b004      	add	sp, #16
 800128e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001292:	4835      	ldr	r0, [pc, #212]	; (8001368 <_printf_i+0x244>)
 8001294:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001298:	6829      	ldr	r1, [r5, #0]
 800129a:	6823      	ldr	r3, [r4, #0]
 800129c:	f851 6b04 	ldr.w	r6, [r1], #4
 80012a0:	6029      	str	r1, [r5, #0]
 80012a2:	061d      	lsls	r5, r3, #24
 80012a4:	d514      	bpl.n	80012d0 <_printf_i+0x1ac>
 80012a6:	07df      	lsls	r7, r3, #31
 80012a8:	bf44      	itt	mi
 80012aa:	f043 0320 	orrmi.w	r3, r3, #32
 80012ae:	6023      	strmi	r3, [r4, #0]
 80012b0:	b91e      	cbnz	r6, 80012ba <_printf_i+0x196>
 80012b2:	6823      	ldr	r3, [r4, #0]
 80012b4:	f023 0320 	bic.w	r3, r3, #32
 80012b8:	6023      	str	r3, [r4, #0]
 80012ba:	2310      	movs	r3, #16
 80012bc:	e7b0      	b.n	8001220 <_printf_i+0xfc>
 80012be:	6823      	ldr	r3, [r4, #0]
 80012c0:	f043 0320 	orr.w	r3, r3, #32
 80012c4:	6023      	str	r3, [r4, #0]
 80012c6:	2378      	movs	r3, #120	; 0x78
 80012c8:	4828      	ldr	r0, [pc, #160]	; (800136c <_printf_i+0x248>)
 80012ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80012ce:	e7e3      	b.n	8001298 <_printf_i+0x174>
 80012d0:	0659      	lsls	r1, r3, #25
 80012d2:	bf48      	it	mi
 80012d4:	b2b6      	uxthmi	r6, r6
 80012d6:	e7e6      	b.n	80012a6 <_printf_i+0x182>
 80012d8:	4615      	mov	r5, r2
 80012da:	e7bb      	b.n	8001254 <_printf_i+0x130>
 80012dc:	682b      	ldr	r3, [r5, #0]
 80012de:	6826      	ldr	r6, [r4, #0]
 80012e0:	6961      	ldr	r1, [r4, #20]
 80012e2:	1d18      	adds	r0, r3, #4
 80012e4:	6028      	str	r0, [r5, #0]
 80012e6:	0635      	lsls	r5, r6, #24
 80012e8:	681b      	ldr	r3, [r3, #0]
 80012ea:	d501      	bpl.n	80012f0 <_printf_i+0x1cc>
 80012ec:	6019      	str	r1, [r3, #0]
 80012ee:	e002      	b.n	80012f6 <_printf_i+0x1d2>
 80012f0:	0670      	lsls	r0, r6, #25
 80012f2:	d5fb      	bpl.n	80012ec <_printf_i+0x1c8>
 80012f4:	8019      	strh	r1, [r3, #0]
 80012f6:	2300      	movs	r3, #0
 80012f8:	6123      	str	r3, [r4, #16]
 80012fa:	4615      	mov	r5, r2
 80012fc:	e7ba      	b.n	8001274 <_printf_i+0x150>
 80012fe:	682b      	ldr	r3, [r5, #0]
 8001300:	1d1a      	adds	r2, r3, #4
 8001302:	602a      	str	r2, [r5, #0]
 8001304:	681d      	ldr	r5, [r3, #0]
 8001306:	6862      	ldr	r2, [r4, #4]
 8001308:	2100      	movs	r1, #0
 800130a:	4628      	mov	r0, r5
 800130c:	f7fe ff68 	bl	80001e0 <memchr>
 8001310:	b108      	cbz	r0, 8001316 <_printf_i+0x1f2>
 8001312:	1b40      	subs	r0, r0, r5
 8001314:	6060      	str	r0, [r4, #4]
 8001316:	6863      	ldr	r3, [r4, #4]
 8001318:	6123      	str	r3, [r4, #16]
 800131a:	2300      	movs	r3, #0
 800131c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001320:	e7a8      	b.n	8001274 <_printf_i+0x150>
 8001322:	6923      	ldr	r3, [r4, #16]
 8001324:	462a      	mov	r2, r5
 8001326:	4649      	mov	r1, r9
 8001328:	4640      	mov	r0, r8
 800132a:	47d0      	blx	sl
 800132c:	3001      	adds	r0, #1
 800132e:	d0ab      	beq.n	8001288 <_printf_i+0x164>
 8001330:	6823      	ldr	r3, [r4, #0]
 8001332:	079b      	lsls	r3, r3, #30
 8001334:	d413      	bmi.n	800135e <_printf_i+0x23a>
 8001336:	68e0      	ldr	r0, [r4, #12]
 8001338:	9b03      	ldr	r3, [sp, #12]
 800133a:	4298      	cmp	r0, r3
 800133c:	bfb8      	it	lt
 800133e:	4618      	movlt	r0, r3
 8001340:	e7a4      	b.n	800128c <_printf_i+0x168>
 8001342:	2301      	movs	r3, #1
 8001344:	4632      	mov	r2, r6
 8001346:	4649      	mov	r1, r9
 8001348:	4640      	mov	r0, r8
 800134a:	47d0      	blx	sl
 800134c:	3001      	adds	r0, #1
 800134e:	d09b      	beq.n	8001288 <_printf_i+0x164>
 8001350:	3501      	adds	r5, #1
 8001352:	68e3      	ldr	r3, [r4, #12]
 8001354:	9903      	ldr	r1, [sp, #12]
 8001356:	1a5b      	subs	r3, r3, r1
 8001358:	42ab      	cmp	r3, r5
 800135a:	dcf2      	bgt.n	8001342 <_printf_i+0x21e>
 800135c:	e7eb      	b.n	8001336 <_printf_i+0x212>
 800135e:	2500      	movs	r5, #0
 8001360:	f104 0619 	add.w	r6, r4, #25
 8001364:	e7f5      	b.n	8001352 <_printf_i+0x22e>
 8001366:	bf00      	nop
 8001368:	080015ad 	.word	0x080015ad
 800136c:	080015be 	.word	0x080015be

08001370 <_sbrk_r>:
 8001370:	b538      	push	{r3, r4, r5, lr}
 8001372:	4d06      	ldr	r5, [pc, #24]	; (800138c <_sbrk_r+0x1c>)
 8001374:	2300      	movs	r3, #0
 8001376:	4604      	mov	r4, r0
 8001378:	4608      	mov	r0, r1
 800137a:	602b      	str	r3, [r5, #0]
 800137c:	f7ff f832 	bl	80003e4 <_sbrk>
 8001380:	1c43      	adds	r3, r0, #1
 8001382:	d102      	bne.n	800138a <_sbrk_r+0x1a>
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	b103      	cbz	r3, 800138a <_sbrk_r+0x1a>
 8001388:	6023      	str	r3, [r4, #0]
 800138a:	bd38      	pop	{r3, r4, r5, pc}
 800138c:	20000090 	.word	0x20000090

08001390 <__sread>:
 8001390:	b510      	push	{r4, lr}
 8001392:	460c      	mov	r4, r1
 8001394:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001398:	f000 f8a0 	bl	80014dc <_read_r>
 800139c:	2800      	cmp	r0, #0
 800139e:	bfab      	itete	ge
 80013a0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80013a2:	89a3      	ldrhlt	r3, [r4, #12]
 80013a4:	181b      	addge	r3, r3, r0
 80013a6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80013aa:	bfac      	ite	ge
 80013ac:	6563      	strge	r3, [r4, #84]	; 0x54
 80013ae:	81a3      	strhlt	r3, [r4, #12]
 80013b0:	bd10      	pop	{r4, pc}

080013b2 <__swrite>:
 80013b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013b6:	461f      	mov	r7, r3
 80013b8:	898b      	ldrh	r3, [r1, #12]
 80013ba:	05db      	lsls	r3, r3, #23
 80013bc:	4605      	mov	r5, r0
 80013be:	460c      	mov	r4, r1
 80013c0:	4616      	mov	r6, r2
 80013c2:	d505      	bpl.n	80013d0 <__swrite+0x1e>
 80013c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c8:	2302      	movs	r3, #2
 80013ca:	2200      	movs	r2, #0
 80013cc:	f000 f868 	bl	80014a0 <_lseek_r>
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013d6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013da:	81a3      	strh	r3, [r4, #12]
 80013dc:	4632      	mov	r2, r6
 80013de:	463b      	mov	r3, r7
 80013e0:	4628      	mov	r0, r5
 80013e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013e6:	f000 b817 	b.w	8001418 <_write_r>

080013ea <__sseek>:
 80013ea:	b510      	push	{r4, lr}
 80013ec:	460c      	mov	r4, r1
 80013ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013f2:	f000 f855 	bl	80014a0 <_lseek_r>
 80013f6:	1c43      	adds	r3, r0, #1
 80013f8:	89a3      	ldrh	r3, [r4, #12]
 80013fa:	bf15      	itete	ne
 80013fc:	6560      	strne	r0, [r4, #84]	; 0x54
 80013fe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001402:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001406:	81a3      	strheq	r3, [r4, #12]
 8001408:	bf18      	it	ne
 800140a:	81a3      	strhne	r3, [r4, #12]
 800140c:	bd10      	pop	{r4, pc}

0800140e <__sclose>:
 800140e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001412:	f000 b813 	b.w	800143c <_close_r>
	...

08001418 <_write_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	4d07      	ldr	r5, [pc, #28]	; (8001438 <_write_r+0x20>)
 800141c:	4604      	mov	r4, r0
 800141e:	4608      	mov	r0, r1
 8001420:	4611      	mov	r1, r2
 8001422:	2200      	movs	r2, #0
 8001424:	602a      	str	r2, [r5, #0]
 8001426:	461a      	mov	r2, r3
 8001428:	f7fe ff8f 	bl	800034a <_write>
 800142c:	1c43      	adds	r3, r0, #1
 800142e:	d102      	bne.n	8001436 <_write_r+0x1e>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	b103      	cbz	r3, 8001436 <_write_r+0x1e>
 8001434:	6023      	str	r3, [r4, #0]
 8001436:	bd38      	pop	{r3, r4, r5, pc}
 8001438:	20000090 	.word	0x20000090

0800143c <_close_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d06      	ldr	r5, [pc, #24]	; (8001458 <_close_r+0x1c>)
 8001440:	2300      	movs	r3, #0
 8001442:	4604      	mov	r4, r0
 8001444:	4608      	mov	r0, r1
 8001446:	602b      	str	r3, [r5, #0]
 8001448:	f7fe ff9b 	bl	8000382 <_close>
 800144c:	1c43      	adds	r3, r0, #1
 800144e:	d102      	bne.n	8001456 <_close_r+0x1a>
 8001450:	682b      	ldr	r3, [r5, #0]
 8001452:	b103      	cbz	r3, 8001456 <_close_r+0x1a>
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	bd38      	pop	{r3, r4, r5, pc}
 8001458:	20000090 	.word	0x20000090

0800145c <_fstat_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4d07      	ldr	r5, [pc, #28]	; (800147c <_fstat_r+0x20>)
 8001460:	2300      	movs	r3, #0
 8001462:	4604      	mov	r4, r0
 8001464:	4608      	mov	r0, r1
 8001466:	4611      	mov	r1, r2
 8001468:	602b      	str	r3, [r5, #0]
 800146a:	f7fe ff95 	bl	8000398 <_fstat>
 800146e:	1c43      	adds	r3, r0, #1
 8001470:	d102      	bne.n	8001478 <_fstat_r+0x1c>
 8001472:	682b      	ldr	r3, [r5, #0]
 8001474:	b103      	cbz	r3, 8001478 <_fstat_r+0x1c>
 8001476:	6023      	str	r3, [r4, #0]
 8001478:	bd38      	pop	{r3, r4, r5, pc}
 800147a:	bf00      	nop
 800147c:	20000090 	.word	0x20000090

08001480 <_isatty_r>:
 8001480:	b538      	push	{r3, r4, r5, lr}
 8001482:	4d06      	ldr	r5, [pc, #24]	; (800149c <_isatty_r+0x1c>)
 8001484:	2300      	movs	r3, #0
 8001486:	4604      	mov	r4, r0
 8001488:	4608      	mov	r0, r1
 800148a:	602b      	str	r3, [r5, #0]
 800148c:	f7fe ff93 	bl	80003b6 <_isatty>
 8001490:	1c43      	adds	r3, r0, #1
 8001492:	d102      	bne.n	800149a <_isatty_r+0x1a>
 8001494:	682b      	ldr	r3, [r5, #0]
 8001496:	b103      	cbz	r3, 800149a <_isatty_r+0x1a>
 8001498:	6023      	str	r3, [r4, #0]
 800149a:	bd38      	pop	{r3, r4, r5, pc}
 800149c:	20000090 	.word	0x20000090

080014a0 <_lseek_r>:
 80014a0:	b538      	push	{r3, r4, r5, lr}
 80014a2:	4d07      	ldr	r5, [pc, #28]	; (80014c0 <_lseek_r+0x20>)
 80014a4:	4604      	mov	r4, r0
 80014a6:	4608      	mov	r0, r1
 80014a8:	4611      	mov	r1, r2
 80014aa:	2200      	movs	r2, #0
 80014ac:	602a      	str	r2, [r5, #0]
 80014ae:	461a      	mov	r2, r3
 80014b0:	f7fe ff8b 	bl	80003ca <_lseek>
 80014b4:	1c43      	adds	r3, r0, #1
 80014b6:	d102      	bne.n	80014be <_lseek_r+0x1e>
 80014b8:	682b      	ldr	r3, [r5, #0]
 80014ba:	b103      	cbz	r3, 80014be <_lseek_r+0x1e>
 80014bc:	6023      	str	r3, [r4, #0]
 80014be:	bd38      	pop	{r3, r4, r5, pc}
 80014c0:	20000090 	.word	0x20000090

080014c4 <__malloc_lock>:
 80014c4:	4801      	ldr	r0, [pc, #4]	; (80014cc <__malloc_lock+0x8>)
 80014c6:	f7ff bb21 	b.w	8000b0c <__retarget_lock_acquire_recursive>
 80014ca:	bf00      	nop
 80014cc:	20000084 	.word	0x20000084

080014d0 <__malloc_unlock>:
 80014d0:	4801      	ldr	r0, [pc, #4]	; (80014d8 <__malloc_unlock+0x8>)
 80014d2:	f7ff bb1c 	b.w	8000b0e <__retarget_lock_release_recursive>
 80014d6:	bf00      	nop
 80014d8:	20000084 	.word	0x20000084

080014dc <_read_r>:
 80014dc:	b538      	push	{r3, r4, r5, lr}
 80014de:	4d07      	ldr	r5, [pc, #28]	; (80014fc <_read_r+0x20>)
 80014e0:	4604      	mov	r4, r0
 80014e2:	4608      	mov	r0, r1
 80014e4:	4611      	mov	r1, r2
 80014e6:	2200      	movs	r2, #0
 80014e8:	602a      	str	r2, [r5, #0]
 80014ea:	461a      	mov	r2, r3
 80014ec:	f7fe ff10 	bl	8000310 <_read>
 80014f0:	1c43      	adds	r3, r0, #1
 80014f2:	d102      	bne.n	80014fa <_read_r+0x1e>
 80014f4:	682b      	ldr	r3, [r5, #0]
 80014f6:	b103      	cbz	r3, 80014fa <_read_r+0x1e>
 80014f8:	6023      	str	r3, [r4, #0]
 80014fa:	bd38      	pop	{r3, r4, r5, pc}
 80014fc:	20000090 	.word	0x20000090

08001500 <_init>:
 8001500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001502:	bf00      	nop
 8001504:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001506:	bc08      	pop	{r3}
 8001508:	469e      	mov	lr, r3
 800150a:	4770      	bx	lr

0800150c <_fini>:
 800150c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800150e:	bf00      	nop
 8001510:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001512:	bc08      	pop	{r3}
 8001514:	469e      	mov	lr, r3
 8001516:	4770      	bx	lr
